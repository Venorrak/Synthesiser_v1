ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"analogBreakoutBoard.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB164:
  36              	.LBI164:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE164:
  41              	.LBB165:
  42              	.LBI165:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 4


  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE165:
  47              	.LBB166:
  48              	.LBI166:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 5


  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 6


  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE166:
  53              	.LBB167:
  54              	.LBI167:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 7


  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 8


  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE167:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp10OscillatorD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp10OscillatorD2Ev:
  76              	.LVL1:
  77              	.LFB4240:
  78              		.file 6 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 9


  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  79              		.loc 6 24 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 6 24 20 is_stmt 0 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4240:
  89              		.weak	_ZN7daisysp10OscillatorD1Ev
  90              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
  91              		.section	.text._Z17getBoardKnobValuei,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_Z17getBoardKnobValuei
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_Z17getBoardKnobValuei:
 101              	.LVL2:
 102              	.LFB4681:
 103              		.file 7 "analogBreakoutBoard.cpp"
   1:analogBreakoutBoard.cpp **** #include "daisy_seed.h"
   2:analogBreakoutBoard.cpp **** #include "daisysp.h"
   3:analogBreakoutBoard.cpp **** 
   4:analogBreakoutBoard.cpp **** using namespace daisy;
   5:analogBreakoutBoard.cpp **** using namespace daisysp;
   6:analogBreakoutBoard.cpp **** 
   7:analogBreakoutBoard.cpp **** DaisySeed hw;
   8:analogBreakoutBoard.cpp **** static Oscillator osc;
   9:analogBreakoutBoard.cpp **** GPIO board0;
  10:analogBreakoutBoard.cpp **** GPIO board1;
  11:analogBreakoutBoard.cpp **** GPIO board2;
  12:analogBreakoutBoard.cpp **** int max = 0;
  13:analogBreakoutBoard.cpp **** int min = 1000000;
  14:analogBreakoutBoard.cpp **** 
  15:analogBreakoutBoard.cpp **** // function to read the ADC value for the selected knob
  16:analogBreakoutBoard.cpp **** // knobPin is the number of the knob to read (0-7)
  17:analogBreakoutBoard.cpp **** float getBoardKnobValue(int knobPin)
  18:analogBreakoutBoard.cpp **** {
 104              		.loc 7 18 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  19:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 108              		.loc 7 19 2 view .LVU13
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 10


 109              	.LBB168:
 110              		.loc 7 19 17 view .LVU14
 111              	.LBE168:
  18:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 112              		.loc 7 18 1 is_stmt 0 view .LVU15
 113 0000 38B5     		push	{r3, r4, r5, lr}
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 3, -16
 116              		.cfi_offset 4, -12
 117              		.cfi_offset 5, -8
 118              		.cfi_offset 14, -4
  18:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 119              		.loc 7 18 1 view .LVU16
 120 0002 0124     		movs	r4, #1
 121 0004 0546     		mov	r5, r0
 122 0006 621E     		subs	r2, r4, #1
 123              	.LVL3:
 124              	.LBB169:
  20:analogBreakoutBoard.cpp **** 	{
  21:analogBreakoutBoard.cpp **** 		if (knobPin & (1<<i))
 125              		.loc 7 21 3 is_stmt 1 view .LVU17
 126              		.loc 7 21 15 is_stmt 0 view .LVU18
 127 0008 45FA02F3 		asr	r3, r5, r2
 128              		.loc 7 21 3 view .LVU19
 129 000c 13F00101 		ands	r1, r3, #1
 130 0010 11D0     		beq	.L5
 131              	.LVL4:
 132              	.L20:
  22:analogBreakoutBoard.cpp **** 			switch (i)
 133              		.loc 7 22 4 is_stmt 1 view .LVU20
 134 0012 012A     		cmp	r2, #1
 135 0014 1FD0     		beq	.L6
 136              		.loc 7 22 4 is_stmt 0 view .LVU21
 137 0016 022A     		cmp	r2, #2
  23:analogBreakoutBoard.cpp **** 			{
  24:analogBreakoutBoard.cpp **** 			case 0:
  25:analogBreakoutBoard.cpp **** 				board0.Write(true);
 138              		.loc 7 25 17 view .LVU22
 139 0018 4FF00101 		mov	r1, #1
  22:analogBreakoutBoard.cpp **** 			switch (i)
 140              		.loc 7 22 4 view .LVU23
 141 001c 0FD0     		beq	.L12
 142              	.L19:
  26:analogBreakoutBoard.cpp **** 				break;
  27:analogBreakoutBoard.cpp **** 			case 1:
  28:analogBreakoutBoard.cpp **** 				board1.Write(true);
  29:analogBreakoutBoard.cpp **** 				break;
  30:analogBreakoutBoard.cpp **** 			case 2:
  31:analogBreakoutBoard.cpp **** 				board2.Write(true);
  32:analogBreakoutBoard.cpp **** 				break;
  33:analogBreakoutBoard.cpp **** 			}
  34:analogBreakoutBoard.cpp **** 		else
  35:analogBreakoutBoard.cpp **** 			switch (i)
  36:analogBreakoutBoard.cpp **** 			{
  37:analogBreakoutBoard.cpp **** 			case 0:
 143              		.loc 7 37 4 is_stmt 1 view .LVU24
  38:analogBreakoutBoard.cpp **** 				board0.Write(false);
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 11


 144              		.loc 7 38 5 view .LVU25
 145              		.loc 7 38 17 is_stmt 0 view .LVU26
 146 001e 1248     		ldr	r0, .L21
 147 0020 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 148              	.LVL5:
  39:analogBreakoutBoard.cpp **** 				break;
 149              		.loc 7 39 5 is_stmt 1 view .LVU27
  19:analogBreakoutBoard.cpp **** 	{
 150              		.loc 7 19 2 view .LVU28
  19:analogBreakoutBoard.cpp **** 	{
 151              		.loc 7 19 17 view .LVU29
 152 0024 032C     		cmp	r4, #3
 153 0026 0DD0     		beq	.L10
 154              	.LVL6:
 155              	.L14:
  19:analogBreakoutBoard.cpp **** 	{
 156              		.loc 7 19 17 is_stmt 0 view .LVU30
 157 0028 0134     		adds	r4, r4, #1
 158 002a 621E     		subs	r2, r4, #1
 159              	.LVL7:
  21:analogBreakoutBoard.cpp **** 			switch (i)
 160              		.loc 7 21 3 is_stmt 1 view .LVU31
  21:analogBreakoutBoard.cpp **** 			switch (i)
 161              		.loc 7 21 15 is_stmt 0 view .LVU32
 162 002c 45FA02F3 		asr	r3, r5, r2
  21:analogBreakoutBoard.cpp **** 			switch (i)
 163              		.loc 7 21 3 view .LVU33
 164 0030 13F00101 		ands	r1, r3, #1
 165 0034 EDD1     		bne	.L20
 166              	.L5:
  35:analogBreakoutBoard.cpp **** 			{
 167              		.loc 7 35 4 is_stmt 1 view .LVU34
 168 0036 012A     		cmp	r2, #1
 169 0038 12D0     		beq	.L11
  35:analogBreakoutBoard.cpp **** 			{
 170              		.loc 7 35 4 is_stmt 0 view .LVU35
 171 003a 022A     		cmp	r2, #2
 172 003c EFD1     		bne	.L19
 173              	.L12:
  40:analogBreakoutBoard.cpp **** 			case 1:
  41:analogBreakoutBoard.cpp **** 				board1.Write(false);
  42:analogBreakoutBoard.cpp **** 				break;
  43:analogBreakoutBoard.cpp **** 			case 2:
 174              		.loc 7 43 4 is_stmt 1 view .LVU36
  44:analogBreakoutBoard.cpp **** 				board2.Write(false);
 175              		.loc 7 44 5 view .LVU37
 176              		.loc 7 44 17 is_stmt 0 view .LVU38
 177 003e 0B48     		ldr	r0, .L21+4
 178 0040 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 179              	.LVL8:
  45:analogBreakoutBoard.cpp **** 				break;
 180              		.loc 7 45 5 is_stmt 1 view .LVU39
 181              	.L10:
  19:analogBreakoutBoard.cpp **** 	{
 182              		.loc 7 19 2 view .LVU40
  19:analogBreakoutBoard.cpp **** 	{
 183              		.loc 7 19 17 view .LVU41
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 12


  19:analogBreakoutBoard.cpp **** 	{
 184              		.loc 7 19 17 is_stmt 0 view .LVU42
 185              	.LBE169:
  46:analogBreakoutBoard.cpp **** 			}
  47:analogBreakoutBoard.cpp **** 	}
  48:analogBreakoutBoard.cpp **** 		
  49:analogBreakoutBoard.cpp **** 	return hw.adc.Get(0);
 186              		.loc 7 49 2 is_stmt 1 view .LVU43
 187              		.loc 7 49 19 is_stmt 0 view .LVU44
 188 0044 0021     		movs	r1, #0
 189 0046 0A48     		ldr	r0, .L21+8
 190 0048 FFF7FEFF 		bl	_ZNK5daisy9AdcHandle3GetEh
 191              	.LVL9:
  50:analogBreakoutBoard.cpp **** }
 192              		.loc 7 50 1 view .LVU45
 193 004c 07EE900A 		vmov	s15, r0	@ int
 194 0050 B8EE670A 		vcvt.f32.u32	s0, s15
 195 0054 38BD     		pop	{r3, r4, r5, pc}
 196              	.LVL10:
 197              	.L6:
 198              	.LBB170:
  27:analogBreakoutBoard.cpp **** 				board1.Write(true);
 199              		.loc 7 27 4 is_stmt 1 view .LVU46
  28:analogBreakoutBoard.cpp **** 				break;
 200              		.loc 7 28 5 view .LVU47
  28:analogBreakoutBoard.cpp **** 				break;
 201              		.loc 7 28 17 is_stmt 0 view .LVU48
 202 0056 1146     		mov	r1, r2
 203 0058 0648     		ldr	r0, .L21+12
 204 005a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 205              	.LVL11:
  29:analogBreakoutBoard.cpp **** 			case 2:
 206              		.loc 7 29 5 is_stmt 1 view .LVU49
 207 005e E3E7     		b	.L14
 208              	.LVL12:
 209              	.L11:
  40:analogBreakoutBoard.cpp **** 				board1.Write(false);
 210              		.loc 7 40 4 view .LVU50
  41:analogBreakoutBoard.cpp **** 				break;
 211              		.loc 7 41 5 view .LVU51
  41:analogBreakoutBoard.cpp **** 				break;
 212              		.loc 7 41 17 is_stmt 0 view .LVU52
 213 0060 0448     		ldr	r0, .L21+12
 214 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 215              	.LVL13:
  42:analogBreakoutBoard.cpp **** 			case 2:
 216              		.loc 7 42 5 is_stmt 1 view .LVU53
 217 0066 DFE7     		b	.L14
 218              	.L22:
 219              		.align	2
 220              	.L21:
 221 0068 00000000 		.word	.LANCHOR0
 222 006c 00000000 		.word	.LANCHOR2
 223 0070 18000000 		.word	.LANCHOR3+24
 224 0074 00000000 		.word	.LANCHOR1
 225              	.LBE170:
 226              		.cfi_endproc
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 13


 227              	.LFE4681:
 229              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 230              		.align	1
 231              		.p2align 2,,3
 232              		.global	_Z13AudioCallbackPKPKfPPfj
 233              		.syntax unified
 234              		.thumb
 235              		.thumb_func
 236              		.fpu fpv5-d16
 238              	_Z13AudioCallbackPKPKfPPfj:
 239              	.LVL14:
 240              	.LFB4682:
  51:analogBreakoutBoard.cpp **** 
  52:analogBreakoutBoard.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  53:analogBreakoutBoard.cpp **** {
 241              		.loc 7 53 1 view -0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 0
 244              		@ frame_needed = 0, uses_anonymous_args = 0
  54:analogBreakoutBoard.cpp **** 	float sig;
 245              		.loc 7 54 2 view .LVU55
  55:analogBreakoutBoard.cpp **** 	for (size_t i = 0; i < size; i+=2)
 246              		.loc 7 55 2 view .LVU56
 247              	.LBB171:
 248              		.loc 7 55 23 view .LVU57
 249 0000 3AB3     		cbz	r2, .L31
 250              	.LBE171:
  53:analogBreakoutBoard.cpp **** 	float sig;
 251              		.loc 7 53 1 is_stmt 0 view .LVU58
 252 0002 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 253              		.cfi_def_cfa_offset 24
 254              		.cfi_offset 3, -24
 255              		.cfi_offset 4, -20
 256              		.cfi_offset 5, -16
 257              		.cfi_offset 6, -12
 258              		.cfi_offset 7, -8
 259              		.cfi_offset 14, -4
 260 0004 0E46     		mov	r6, r1
 261 0006 1746     		mov	r7, r2
 262              	.LBB183:
 263              		.loc 7 55 14 view .LVU59
 264 0008 0024     		movs	r4, #0
 265 000a 124D     		ldr	r5, .L34
 266              	.LBE183:
  53:analogBreakoutBoard.cpp **** 	float sig;
 267              		.loc 7 53 1 view .LVU60
 268 000c 2DED028B 		vpush.64	{d8}
 269              		.cfi_def_cfa_offset 32
 270              		.cfi_offset 80, -32
 271              		.cfi_offset 81, -28
 272              	.LVL15:
 273              	.L25:
 274              	.LBB184:
 275              	.LBB172:
  56:analogBreakoutBoard.cpp **** 	{
  57:analogBreakoutBoard.cpp **** 		float knobValue = getBoardKnobValue(0);
 276              		.loc 7 57 3 is_stmt 1 discriminator 2 view .LVU61
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 14


 277              		.loc 7 57 38 is_stmt 0 discriminator 2 view .LVU62
 278 0010 0020     		movs	r0, #0
 279 0012 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 280              	.LVL16:
 281 0016 B0EE408A 		vmov.f32	s16, s0
 282              	.LVL17:
  58:analogBreakoutBoard.cpp **** 	
  59:analogBreakoutBoard.cpp **** 		osc.SetFreq(knobValue);
 283              		.loc 7 59 3 is_stmt 1 discriminator 2 view .LVU63
 284              	.LBB173:
 285              	.LBI173:
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
 286              		.loc 6 67 17 discriminator 2 view .LVU64
 287              	.LBB174:
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 15


  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 288              		.loc 6 69 9 discriminator 2 view .LVU65
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 289              		.loc 6 70 34 is_stmt 0 discriminator 2 view .LVU66
 290 001a 0E48     		ldr	r0, .L34
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 291              		.loc 6 69 20 discriminator 2 view .LVU67
 292 001c 85ED020A 		vstr.32	s0, [r5, #8]
 293              		.loc 6 70 9 is_stmt 1 discriminator 2 view .LVU68
 294              		.loc 6 70 34 is_stmt 0 discriminator 2 view .LVU69
 295 0020 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 296              	.LVL18:
 297              		.loc 6 70 34 discriminator 2 view .LVU70
 298              	.LBE174:
 299              	.LBE173:
  60:analogBreakoutBoard.cpp **** 		osc.SetAmp(knobValue);
  61:analogBreakoutBoard.cpp **** 		sig = osc.Process();
 300              		.loc 7 61 20 discriminator 2 view .LVU71
 301 0024 0B48     		ldr	r0, .L34
 302              	.LBB176:
 303              	.LBB177:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
 304              		.loc 6 76 46 discriminator 2 view .LVU72
 305 0026 85ED018A 		vstr.32	s16, [r5, #4]
 306              	.LBE177:
 307              	.LBE176:
 308              	.LBB179:
 309              	.LBB175:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 310              		.loc 6 70 20 discriminator 2 view .LVU73
 311 002a 85ED070A 		vstr.32	s0, [r5, #28]
 312              	.LVL19:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 313              		.loc 6 70 20 discriminator 2 view .LVU74
 314              	.LBE175:
 315              	.LBE179:
  60:analogBreakoutBoard.cpp **** 		osc.SetAmp(knobValue);
 316              		.loc 7 60 3 is_stmt 1 discriminator 2 view .LVU75
 317              	.LBB180:
 318              	.LBI176:
 319              		.loc 6 76 17 discriminator 2 view .LVU76
 320              	.LBB178:
 321              		.loc 6 76 41 discriminator 2 view .LVU77
 322              		.loc 6 76 41 is_stmt 0 discriminator 2 view .LVU78
 323              	.LBE178:
 324              	.LBE180:
 325              		.loc 7 61 3 is_stmt 1 discriminator 2 view .LVU79
 326              		.loc 7 61 20 is_stmt 0 discriminator 2 view .LVU80
 327 002e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 328              	.LVL20:
  62:analogBreakoutBoard.cpp **** 
  63:analogBreakoutBoard.cpp **** 		out[0][i] = sig;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 16


  64:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 329              		.loc 7 64 16 discriminator 2 view .LVU81
 330 0032 D6E90003 		ldrd	r0, r3, [r6]
 331              	.LVL21:
  63:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 332              		.loc 7 63 3 is_stmt 1 discriminator 2 view .LVU82
  63:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 333              		.loc 7 63 13 is_stmt 0 discriminator 2 view .LVU83
 334 0036 00EB8400 		add	r0, r0, r4, lsl #2
 335              		.loc 7 64 16 discriminator 2 view .LVU84
 336 003a 03EB8403 		add	r3, r3, r4, lsl #2
 337              	.LBE172:
  55:analogBreakoutBoard.cpp **** 	{
 338              		.loc 7 55 32 discriminator 2 view .LVU85
 339 003e 0234     		adds	r4, r4, #2
 340              	.LVL22:
 341              	.LBB181:
  63:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 342              		.loc 7 63 13 discriminator 2 view .LVU86
 343 0040 80ED000A 		vstr.32	s0, [r0]
 344              		.loc 7 64 6 is_stmt 1 discriminator 2 view .LVU87
 345              	.LBE181:
  55:analogBreakoutBoard.cpp **** 	{
 346              		.loc 7 55 23 is_stmt 0 discriminator 2 view .LVU88
 347 0044 A742     		cmp	r7, r4
 348              	.LBB182:
 349              		.loc 7 64 16 discriminator 2 view .LVU89
 350 0046 83ED000A 		vstr.32	s0, [r3]
 351              	.LBE182:
  55:analogBreakoutBoard.cpp **** 	{
 352              		.loc 7 55 2 is_stmt 1 discriminator 2 view .LVU90
 353              	.LVL23:
  55:analogBreakoutBoard.cpp **** 	{
 354              		.loc 7 55 23 discriminator 2 view .LVU91
 355 004a E1D8     		bhi	.L25
 356              	.LBE184:
  65:analogBreakoutBoard.cpp **** 	}
  66:analogBreakoutBoard.cpp **** }
 357              		.loc 7 66 1 is_stmt 0 view .LVU92
 358 004c BDEC028B 		vldm	sp!, {d8}
 359              		.cfi_restore 80
 360              		.cfi_restore 81
 361              		.cfi_def_cfa_offset 24
 362              	.LVL24:
 363              		.loc 7 66 1 view .LVU93
 364 0050 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 365              	.LVL25:
 366              	.L31:
 367              		.cfi_def_cfa_offset 0
 368              		.cfi_restore 3
 369              		.cfi_restore 4
 370              		.cfi_restore 5
 371              		.cfi_restore 6
 372              		.cfi_restore 7
 373              		.cfi_restore 14
 374              		.loc 7 66 1 view .LVU94
 375 0052 7047     		bx	lr
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 17


 376              	.L35:
 377              		.align	2
 378              	.L34:
 379 0054 00000000 		.word	.LANCHOR4
 380              		.cfi_endproc
 381              	.LFE4682:
 383              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 384              		.align	2
 385              	.LC0:
 386 0000 4D61783A 		.ascii	"Max: %c%d.%06d\000"
 386      20256325 
 386      642E2530 
 386      366400
 387 000f 00       		.align	2
 388              	.LC1:
 389 0010 4D696E3A 		.ascii	"Min: %c%d.%06d\000"
 389      20256325 
 389      642E2530 
 389      366400
 390              		.section	.text.startup.main,"ax",%progbits
 391              		.align	1
 392              		.p2align 2,,3
 393              		.global	main
 394              		.syntax unified
 395              		.thumb
 396              		.thumb_func
 397              		.fpu fpv5-d16
 399              	main:
 400              	.LFB4683:
  67:analogBreakoutBoard.cpp **** 
  68:analogBreakoutBoard.cpp **** int main(void)
  69:analogBreakoutBoard.cpp **** {
 401              		.loc 7 69 1 is_stmt 1 view -0
 402              		.cfi_startproc
 403              		@ args = 0, pretend = 0, frame = 32
 404              		@ frame_needed = 0, uses_anonymous_args = 0
  70:analogBreakoutBoard.cpp **** 	float sample_rate;
 405              		.loc 7 70 2 view .LVU96
  71:analogBreakoutBoard.cpp **** 	hw.Configure();
 406              		.loc 7 71 2 view .LVU97
  69:analogBreakoutBoard.cpp **** 	float sample_rate;
 407              		.loc 7 69 1 is_stmt 0 view .LVU98
 408 0000 70B5     		push	{r4, r5, r6, lr}
 409              		.cfi_def_cfa_offset 16
 410              		.cfi_offset 4, -16
 411              		.cfi_offset 5, -12
 412              		.cfi_offset 6, -8
 413              		.cfi_offset 14, -4
 414              		.loc 7 71 14 view .LVU99
 415 0002 8148     		ldr	r0, .L52+8
  72:analogBreakoutBoard.cpp **** 	hw.Init();
  73:analogBreakoutBoard.cpp **** 	sample_rate = hw.AudioSampleRate();
  74:analogBreakoutBoard.cpp **** 
  75:analogBreakoutBoard.cpp **** 	// read the ADC on pin 15
  76:analogBreakoutBoard.cpp **** 	// Z pin on the breakout board
  77:analogBreakoutBoard.cpp **** 	AdcChannelConfig adcConfig;
  78:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 18


  79:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
  80:analogBreakoutBoard.cpp **** 	hw.adc.Start();
  81:analogBreakoutBoard.cpp **** 	hw.StartLog();
  82:analogBreakoutBoard.cpp **** 
  83:analogBreakoutBoard.cpp **** 	// set up the GPIO pins for the breakout board
  84:analogBreakoutBoard.cpp **** 	// S0, S1, S2 on the breakout board
  85:analogBreakoutBoard.cpp **** 	// used to select which knob to read
  86:analogBreakoutBoard.cpp **** 	board0.Init(daisy::seed::D1, GPIO::Mode::OUTPUT);
 416              		.loc 7 86 13 view .LVU100
 417 0004 0024     		movs	r4, #0
 418              	.LBB211:
 419              	.LBB212:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 420              		.loc 6 52 20 view .LVU101
 421 0006 814E     		ldr	r6, .L52+12
 422 0008 814D     		ldr	r5, .L52+16
 423              	.LBE212:
 424              	.LBE211:
  69:analogBreakoutBoard.cpp **** 	float sample_rate;
 425              		.loc 7 69 1 view .LVU102
 426 000a 2DED028B 		vpush.64	{d8}
 427              		.cfi_def_cfa_offset 24
 428              		.cfi_offset 80, -24
 429              		.cfi_offset 81, -20
 430 000e 8AB0     		sub	sp, sp, #40
 431              		.cfi_def_cfa_offset 64
 432              	.LBB217:
 433              	.LBB213:
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 434              		.loc 6 55 20 view .LVU103
 435 0010 F6EE008A 		vmov.f32	s17, #5.0e-1
 436              	.LBE213:
 437              	.LBE217:
  71:analogBreakoutBoard.cpp **** 	hw.Init();
 438              		.loc 7 71 14 view .LVU104
 439 0014 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 440              	.LVL26:
  72:analogBreakoutBoard.cpp **** 	sample_rate = hw.AudioSampleRate();
 441              		.loc 7 72 2 is_stmt 1 view .LVU105
  72:analogBreakoutBoard.cpp **** 	sample_rate = hw.AudioSampleRate();
 442              		.loc 7 72 9 is_stmt 0 view .LVU106
 443 0018 0021     		movs	r1, #0
 444 001a 7B48     		ldr	r0, .L52+8
 445 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 446              	.LVL27:
  73:analogBreakoutBoard.cpp **** 
 447              		.loc 7 73 2 is_stmt 1 view .LVU107
  73:analogBreakoutBoard.cpp **** 
 448              		.loc 7 73 34 is_stmt 0 view .LVU108
 449 0020 7948     		ldr	r0, .L52+8
 450 0022 FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 451              	.LVL28:
  78:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 452              		.loc 7 78 22 view .LVU109
 453 0026 0F20     		movs	r0, #15
  73:analogBreakoutBoard.cpp **** 
 454              		.loc 7 73 34 view .LVU110
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 19


 455 0028 B0EE408A 		vmov.f32	s16, s0
 456              	.LVL29:
  77:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
 457              		.loc 7 77 2 is_stmt 1 view .LVU111
  78:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 458              		.loc 7 78 2 view .LVU112
  78:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 459              		.loc 7 78 22 is_stmt 0 view .LVU113
 460 002c FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 461              	.LVL30:
  78:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 462              		.loc 7 78 22 view .LVU114
 463 0030 0346     		mov	r3, r0	@ movhi
 464 0032 0222     		movs	r2, #2
 465 0034 05A8     		add	r0, sp, #20
 466 0036 ADF81030 		strh	r3, [sp, #16]	@ movhi
 467 003a 0499     		ldr	r1, [sp, #16]
 468 003c FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 469              	.LVL31:
  79:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 470              		.loc 7 79 2 is_stmt 1 view .LVU115
  79:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 471              		.loc 7 79 13 is_stmt 0 view .LVU116
 472 0040 05A9     		add	r1, sp, #20
 473 0042 0423     		movs	r3, #4
 474 0044 0122     		movs	r2, #1
 475 0046 7348     		ldr	r0, .L52+20
 476 0048 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 477              	.LVL32:
  80:analogBreakoutBoard.cpp **** 	hw.StartLog();
 478              		.loc 7 80 2 is_stmt 1 view .LVU117
  80:analogBreakoutBoard.cpp **** 	hw.StartLog();
 479              		.loc 7 80 14 is_stmt 0 view .LVU118
 480 004c 7148     		ldr	r0, .L52+20
 481 004e FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 482              	.LVL33:
  81:analogBreakoutBoard.cpp **** 
 483              		.loc 7 81 2 is_stmt 1 view .LVU119
 484              	.LBB218:
 485              	.LBI218:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 20


  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 21


  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy//src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy//src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy//src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy//src/daisy_seed.h ****      */
 105:../../libDaisy//src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy//src/daisy_seed.h **** 
 107:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy//src/daisy_seed.h ****      */
 109:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy//src/daisy_seed.h **** 
 111:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy//src/daisy_seed.h ****      */
 113:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy//src/daisy_seed.h **** 
 115:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy//src/daisy_seed.h ****      */
 117:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy//src/daisy_seed.h ****     {
 120:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy//src/daisy_seed.h ****     }
 122:../../libDaisy//src/daisy_seed.h **** 
 123:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy//src/daisy_seed.h ****     */
 125:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 129:../../libDaisy//src/daisy_seed.h ****     }
 130:../../libDaisy//src/daisy_seed.h **** 
 131:../../libDaisy//src/daisy_seed.h ****     /** Start the logging session. Optionally wait for terminal connection before proceeding.
 132:../../libDaisy//src/daisy_seed.h ****     */
 133:../../libDaisy//src/daisy_seed.h ****     static void StartLog(bool wait_for_pc = false)
 486              		.loc 1 133 17 view .LVU120
 487              	.LBB219:
 134:../../libDaisy//src/daisy_seed.h ****     {
 135:../../libDaisy//src/daisy_seed.h ****         Log::StartLog(wait_for_pc);
 488              		.loc 1 135 9 view .LVU121
 489              		.loc 1 135 22 is_stmt 0 view .LVU122
 490 0052 2046     		mov	r0, r4
 491 0054 FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
 492              	.LVL34:
 493              		.loc 1 135 22 view .LVU123
 494              	.LBE219:
 495              	.LBE218:
 496              		.loc 7 86 2 is_stmt 1 view .LVU124
 497              		.loc 7 86 13 is_stmt 0 view .LVU125
 498 0058 6F49     		ldr	r1, .L52+24
 499 005a 2346     		mov	r3, r4
 500 005c 0094     		str	r4, [sp]
 501 005e 0122     		movs	r2, #1
 502 0060 0968     		ldr	r1, [r1]
 503 0062 6E48     		ldr	r0, .L52+28
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 22


 504 0064 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 505              	.LVL35:
  87:analogBreakoutBoard.cpp **** 	board1.Init(daisy::seed::D2, GPIO::Mode::OUTPUT);
 506              		.loc 7 87 2 is_stmt 1 view .LVU126
 507              		.loc 7 87 13 is_stmt 0 view .LVU127
 508 0068 6D49     		ldr	r1, .L52+32
 509 006a 2346     		mov	r3, r4
 510 006c 0094     		str	r4, [sp]
 511 006e 0122     		movs	r2, #1
 512 0070 0968     		ldr	r1, [r1]
 513 0072 6C48     		ldr	r0, .L52+36
 514 0074 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 515              	.LVL36:
  88:analogBreakoutBoard.cpp **** 	board2.Init(daisy::seed::D3, GPIO::Mode::OUTPUT);
 516              		.loc 7 88 2 is_stmt 1 view .LVU128
 517              		.loc 7 88 13 is_stmt 0 view .LVU129
 518 0078 6B49     		ldr	r1, .L52+40
 519 007a 0122     		movs	r2, #1
 520 007c 2346     		mov	r3, r4
 521 007e 0094     		str	r4, [sp]
 522 0080 0968     		ldr	r1, [r1]
 523 0082 6A48     		ldr	r0, .L52+44
 524 0084 FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 525              	.LVL37:
  89:analogBreakoutBoard.cpp **** 
  90:analogBreakoutBoard.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 526              		.loc 7 90 2 is_stmt 1 view .LVU130
 527              		.loc 7 90 22 is_stmt 0 view .LVU131
 528 0088 0421     		movs	r1, #4
 529 008a 5F48     		ldr	r0, .L52+8
 530 008c FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 531              	.LVL38:
  91:analogBreakoutBoard.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 532              		.loc 7 91 2 is_stmt 1 view .LVU132
 533              		.loc 7 91 23 is_stmt 0 view .LVU133
 534 0090 0321     		movs	r1, #3
 535 0092 5D48     		ldr	r0, .L52+8
 536 0094 FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 537              	.LVL39:
  92:analogBreakoutBoard.cpp **** 
  93:analogBreakoutBoard.cpp **** 	osc.Init(sample_rate);
 538              		.loc 7 93 2 is_stmt 1 view .LVU134
 539              	.LBB220:
 540              	.LBI211:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 541              		.loc 6 50 10 view .LVU135
 542              	.LBB214:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 543              		.loc 6 52 9 view .LVU136
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 544              		.loc 6 53 27 is_stmt 0 view .LVU137
 545 0098 B7EE007A 		vmov.f32	s14, #1.0e+0
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 546              		.loc 6 57 20 view .LVU138
 547 009c 0023     		movs	r3, #0
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 548              		.loc 6 54 20 view .LVU139
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 23


 549 009e 9FED640A 		vldr.32	s0, .L52+48
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 550              		.loc 6 58 34 view .LVU140
 551 00a2 3046     		mov	r0, r6
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 552              		.loc 6 52 20 view .LVU141
 553 00a4 86ED048A 		vstr.32	s16, [r6, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 554              		.loc 6 53 9 is_stmt 1 view .LVU142
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 555              		.loc 6 53 27 is_stmt 0 view .LVU143
 556 00a8 C7EE087A 		vdiv.f32	s15, s14, s16
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 557              		.loc 6 57 20 view .LVU144
 558 00ac B361     		str	r3, [r6, #24]	@ float
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 559              		.loc 6 54 20 view .LVU145
 560 00ae 86ED020A 		vstr.32	s0, [r6, #8]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 561              		.loc 6 55 20 view .LVU146
 562 00b2 C6ED018A 		vstr.32	s17, [r6, #4]
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 563              		.loc 6 56 20 view .LVU147
 564 00b6 C6ED038A 		vstr.32	s17, [r6, #12]
 565 00ba 5E4C     		ldr	r4, .L52+52
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 566              		.loc 6 53 20 view .LVU148
 567 00bc C6ED057A 		vstr.32	s15, [r6, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 568              		.loc 6 54 9 is_stmt 1 view .LVU149
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 569              		.loc 6 55 9 view .LVU150
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 570              		.loc 6 56 9 view .LVU151
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 571              		.loc 6 57 9 view .LVU152
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 572              		.loc 6 58 9 view .LVU153
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 573              		.loc 6 58 34 is_stmt 0 view .LVU154
 574 00c0 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 575              	.LVL40:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 576              		.loc 6 61 20 view .LVU155
 577 00c4 40F20113 		movw	r3, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 578              		.loc 6 58 34 view .LVU156
 579 00c8 F0EE407A 		vmov.f32	s15, s0
 580              	.LBE214:
 581              	.LBE220:
 582              	.LBB221:
 583              	.LBB222:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 584              		.loc 6 69 20 view .LVU157
 585 00cc 9FED5A0A 		vldr.32	s0, .L52+56
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 586              		.loc 6 70 34 view .LVU158
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 24


 587 00d0 3046     		mov	r0, r6
 588              	.LBE222:
 589              	.LBE221:
 590              	.LBB226:
 591              	.LBB215:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 592              		.loc 6 61 20 view .LVU159
 593 00d2 3385     		strh	r3, [r6, #40]	@ movhi
 594              	.LBE215:
 595              	.LBE226:
 596              	.LBB227:
 597              	.LBB228:
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 598              		.loc 6 81 19 view .LVU160
 599 00d4 0223     		movs	r3, #2
 600              	.LBE228:
 601              	.LBE227:
 602              	.LBB231:
 603              	.LBB216:
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 604              		.loc 6 58 20 view .LVU161
 605 00d6 C6ED077A 		vstr.32	s15, [r6, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 606              		.loc 6 59 9 is_stmt 1 view .LVU162
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 607              		.loc 6 60 9 view .LVU163
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 608              		.loc 6 61 9 view .LVU164
 609              	.LVL41:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 610              		.loc 6 61 9 is_stmt 0 view .LVU165
 611              	.LBE216:
 612              	.LBE231:
  94:analogBreakoutBoard.cpp **** 	osc.SetWaveform(osc.WAVE_SAW);
 613              		.loc 7 94 2 is_stmt 1 view .LVU166
 614              	.LBB232:
 615              	.LBI227:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 616              		.loc 6 79 17 view .LVU167
 617              	.LBB229:
 618              		.loc 6 81 9 view .LVU168
 619              	.LBE229:
 620              	.LBE232:
 621              	.LBB233:
 622              	.LBB223:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 623              		.loc 6 69 20 is_stmt 0 view .LVU169
 624 00da 86ED020A 		vstr.32	s0, [r6, #8]
 625              	.LBE223:
 626              	.LBE233:
 627              	.LBB234:
 628              	.LBB230:
 629              		.loc 6 81 19 view .LVU170
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 25


 630 00de 3370     		strb	r3, [r6]
 631              	.LVL42:
 632              		.loc 6 81 19 view .LVU171
 633              	.LBE230:
 634              	.LBE234:
  95:analogBreakoutBoard.cpp ****     osc.SetFreq(440);
 635              		.loc 7 95 5 is_stmt 1 view .LVU172
 636              	.LBB235:
 637              	.LBI221:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 638              		.loc 6 67 17 view .LVU173
 639              	.LBB224:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 640              		.loc 6 69 9 view .LVU174
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 641              		.loc 6 70 9 view .LVU175
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 642              		.loc 6 70 34 is_stmt 0 view .LVU176
 643 00e0 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 644              	.LVL43:
 645              	.LBE224:
 646              	.LBE235:
  96:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
  97:analogBreakoutBoard.cpp **** 
  98:analogBreakoutBoard.cpp **** 	hw.StartAudio(AudioCallback);
 647              		.loc 7 98 15 view .LVU177
 648 00e4 5549     		ldr	r1, .L52+60
 649 00e6 4848     		ldr	r0, .L52+8
 650              	.LBB236:
 651              	.LBB237:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 652              		.loc 6 76 46 view .LVU178
 653 00e8 C6ED018A 		vstr.32	s17, [r6, #4]
 654              	.LBE237:
 655              	.LBE236:
 656              	.LBB239:
 657              	.LBB225:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 658              		.loc 6 70 20 view .LVU179
 659 00ec 86ED070A 		vstr.32	s0, [r6, #28]
 660              	.LVL44:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 661              		.loc 6 70 20 view .LVU180
 662              	.LBE225:
 663              	.LBE239:
  96:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
 664              		.loc 7 96 5 is_stmt 1 view .LVU181
 665              	.LBB240:
 666              	.LBI236:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 667              		.loc 6 76 17 view .LVU182
 668              	.LBB238:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 669              		.loc 6 76 41 view .LVU183
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 670              		.loc 6 76 41 is_stmt 0 view .LVU184
 671              	.LBE238:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 26


 672              	.LBE240:
 673              		.loc 7 98 2 is_stmt 1 view .LVU185
 674              		.loc 7 98 15 is_stmt 0 view .LVU186
 675 00f0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 676              	.LVL45:
 677 00f4 3FE0     		b	.L43
 678              	.LVL46:
 679              	.L51:
  99:analogBreakoutBoard.cpp **** 	while(1) 
 100:analogBreakoutBoard.cpp **** 	{
 101:analogBreakoutBoard.cpp **** 		if (max < getBoardKnobValue(7)) 
 102:analogBreakoutBoard.cpp **** 		{
 103:analogBreakoutBoard.cpp **** 			max = getBoardKnobValue(7);
 680              		.loc 7 103 27 view .LVU187
 681 00f6 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 682              	.LVL47:
 683              		.loc 7 103 8 view .LVU188
 684 00fa BDEEC00A 		vcvt.s32.f32	s0, s0
 104:analogBreakoutBoard.cpp **** 			hw.PrintLine("Max: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 685              		.loc 7 104 37 view .LVU189
 686 00fe 0720     		movs	r0, #7
 103:analogBreakoutBoard.cpp **** 			hw.PrintLine("Max: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 687              		.loc 7 103 8 view .LVU190
 688 0100 84ED000A 		vstr.32	s0, [r4]	@ int
 689              		.loc 7 104 4 is_stmt 1 view .LVU191
 690              		.loc 7 104 37 is_stmt 0 view .LVU192
 691 0104 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 692              	.LVL48:
 693              		.loc 7 104 16 view .LVU193
 694 0108 B5EEC00A 		vcmpe.f32	s0, #0
 695              		.loc 7 104 37 view .LVU194
 696 010c 0720     		movs	r0, #7
 697              		.loc 7 104 16 view .LVU195
 698 010e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 699 0112 4CBF     		ite	mi
 700 0114 2D21     		movmi	r1, #45
 701 0116 2021     		movpl	r1, #32
 702 0118 0391     		str	r1, [sp, #12]
 703              		.loc 7 104 37 view .LVU196
 704 011a FFF7FEFF 		bl	_Z17getBoardKnobValuei
 705              	.LVL49:
 706 011e 0720     		movs	r0, #7
 707 0120 F0EE408A 		vmov.f32	s17, s0
 708              	.LVL50:
 709              	.LBB241:
 710              	.LBI241:
 711              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 27


  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 28


  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
 712              		.loc 8 75 3 is_stmt 1 view .LVU197
 713              	.LBB242:
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 714              		.loc 8 76 5 view .LVU198
 715              		.loc 8 76 5 is_stmt 0 view .LVU199
 716              	.LBE242:
 717              	.LBE241:
 718              		.loc 7 104 37 view .LVU200
 719 0124 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 720              	.LVL51:
 721 0128 B0EE408A 		vmov.f32	s16, s0
 722              	.LVL52:
 723              	.LBB244:
 724              	.LBI244:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 725              		.loc 8 75 3 is_stmt 1 view .LVU201
 726              	.LBB245:
 727              		.loc 8 76 5 view .LVU202
 728              		.loc 8 76 5 is_stmt 0 view .LVU203
 729              	.LBE245:
 730              	.LBE244:
 731              		.loc 7 104 37 view .LVU204
 732 012c 0720     		movs	r0, #7
 733 012e FFF7FEFF 		bl	_Z17getBoardKnobValuei
 734              	.LVL53:
 735              	.LBB247:
 736              	.LBI247:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 737              		.loc 8 75 3 is_stmt 1 view .LVU205
 738              	.LBB248:
 739              		.loc 8 76 5 view .LVU206
 740              		.loc 8 76 5 is_stmt 0 view .LVU207
 741              	.LBE248:
 742              	.LBE247:
 743              	.LBB250:
 744              	.LBI250:
 126:../../libDaisy//src/daisy_seed.h ****     {
 745              		.loc 1 126 17 is_stmt 1 view .LVU208
 746              	.LBE250:
 747              	.LBB253:
 748              	.LBB243:
 749              		.loc 8 76 31 is_stmt 0 view .LVU209
 750 0132 F0EEE88A 		vabs.f32	s17, s17
 751              	.LVL54:
 752              		.loc 8 76 31 view .LVU210
 753              	.LBE243:
 754              	.LBE253:
 755              	.LBB254:
 756              	.LBB246:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 29


 757 0136 B0EEC88A 		vabs.f32	s16, s16
 758              	.LVL55:
 759              		.loc 8 76 31 view .LVU211
 760              	.LBE246:
 761              	.LBE254:
 762              	.LBB255:
 763              	.LBB251:
 128:../../libDaisy//src/daisy_seed.h ****     }
 764              		.loc 1 128 23 view .LVU212
 765 013a 0399     		ldr	r1, [sp, #12]
 766              	.LBE251:
 767              	.LBE255:
 768              	.LBB256:
 769              	.LBB249:
 770              		.loc 8 76 31 view .LVU213
 771 013c B0EEC07A 		vabs.f32	s14, s0
 772              	.LBE249:
 773              	.LBE256:
 774              	.LBB257:
 775              	.LBB252:
 128:../../libDaisy//src/daisy_seed.h ****     }
 776              		.loc 1 128 23 view .LVU214
 777 0140 3F48     		ldr	r0, .L52+64
 778              	.LBE252:
 779              	.LBE257:
 780              		.loc 7 104 37 view .LVU215
 781 0142 9FED2F6B 		vldr.64	d6, .L52
 782              	.LVL56:
 783              	.L50:
 105:analogBreakoutBoard.cpp **** 		}
 106:analogBreakoutBoard.cpp **** 		else if (min > getBoardKnobValue(0)) 
 107:analogBreakoutBoard.cpp **** 		{
 108:analogBreakoutBoard.cpp **** 			min = getBoardKnobValue(0);
 109:analogBreakoutBoard.cpp **** 			hw.PrintLine("Min: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 784              		.loc 7 109 37 view .LVU216
 785 0146 BDEEC77A 		vcvt.s32.f32	s14, s14
 786              	.LBB258:
 787              	.LBB259:
 128:../../libDaisy//src/daisy_seed.h ****     }
 788              		.loc 1 128 23 view .LVU217
 789 014a FDEEE87A 		vcvt.s32.f32	s15, s17
 790              	.LBE259:
 791              	.LBE258:
 792              		.loc 7 109 37 view .LVU218
 793 014e B8EEC77A 		vcvt.f32.s32	s14, s14
 794              	.LBB264:
 795              	.LBB260:
 128:../../libDaisy//src/daisy_seed.h ****     }
 796              		.loc 1 128 23 view .LVU219
 797 0152 17EE902A 		vmov	r2, s15	@ int
 798              	.LBE260:
 799              	.LBE264:
 800              		.loc 7 109 37 view .LVU220
 801 0156 38EE477A 		vsub.f32	s14, s16, s14
 802 015a B7EEC77A 		vcvt.f64.f32	d7, s14
 803 015e 27EE067B 		vmul.f64	d7, d7, d6
 804              	.LBB265:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 30


 805              	.LBB261:
 128:../../libDaisy//src/daisy_seed.h ****     }
 806              		.loc 1 128 23 view .LVU221
 807 0162 FDEEC77B 		vcvt.s32.f64	s15, d7
 808 0166 17EE903A 		vmov	r3, s15	@ int
 809 016a FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 810              	.LVL57:
 811              	.L40:
 812              	.LBE261:
 813              	.LBE265:
 110:analogBreakoutBoard.cpp **** 		}
 111:analogBreakoutBoard.cpp **** 		System::Delay(1000);
 814              		.loc 7 111 3 is_stmt 1 view .LVU222
 815              		.loc 7 111 16 is_stmt 0 view .LVU223
 816 016e 4FF47A70 		mov	r0, #1000
 817 0172 FFF7FEFF 		bl	_ZN5daisy6System5DelayEm
 818              	.LVL58:
  99:analogBreakoutBoard.cpp **** 	{
 819              		.loc 7 99 2 is_stmt 1 view .LVU224
 820              	.L43:
  99:analogBreakoutBoard.cpp **** 	{
 821              		.loc 7 99 2 view .LVU225
 101:analogBreakoutBoard.cpp **** 		{
 822              		.loc 7 101 3 view .LVU226
 101:analogBreakoutBoard.cpp **** 		{
 823              		.loc 7 101 11 is_stmt 0 view .LVU227
 824 0176 D4ED007A 		vldr.32	s15, [r4]	@ int
 101:analogBreakoutBoard.cpp **** 		{
 825              		.loc 7 101 30 view .LVU228
 826 017a 0720     		movs	r0, #7
 101:analogBreakoutBoard.cpp **** 		{
 827              		.loc 7 101 11 view .LVU229
 828 017c B8EEE78A 		vcvt.f32.s32	s16, s15
 101:analogBreakoutBoard.cpp **** 		{
 829              		.loc 7 101 30 view .LVU230
 830 0180 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 831              	.LVL59:
 103:analogBreakoutBoard.cpp **** 			hw.PrintLine("Max: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 832              		.loc 7 103 4 is_stmt 1 view .LVU231
 103:analogBreakoutBoard.cpp **** 			hw.PrintLine("Max: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 833              		.loc 7 103 27 is_stmt 0 view .LVU232
 834 0184 0720     		movs	r0, #7
 101:analogBreakoutBoard.cpp **** 		{
 835              		.loc 7 101 3 view .LVU233
 836 0186 B4EEC08A 		vcmpe.f32	s16, s0
 837 018a F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 838 018e B2D4     		bmi	.L51
 106:analogBreakoutBoard.cpp **** 		{
 839              		.loc 7 106 8 is_stmt 1 view .LVU234
 106:analogBreakoutBoard.cpp **** 		{
 840              		.loc 7 106 16 is_stmt 0 view .LVU235
 841 0190 D5ED007A 		vldr.32	s15, [r5]	@ int
 106:analogBreakoutBoard.cpp **** 		{
 842              		.loc 7 106 35 view .LVU236
 843 0194 0020     		movs	r0, #0
 106:analogBreakoutBoard.cpp **** 		{
 844              		.loc 7 106 16 view .LVU237
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 31


 845 0196 B8EEE78A 		vcvt.f32.s32	s16, s15
 106:analogBreakoutBoard.cpp **** 		{
 846              		.loc 7 106 35 view .LVU238
 847 019a FFF7FEFF 		bl	_Z17getBoardKnobValuei
 848              	.LVL60:
 106:analogBreakoutBoard.cpp **** 		{
 849              		.loc 7 106 8 view .LVU239
 850 019e B4EEC08A 		vcmpe.f32	s16, s0
 851 01a2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 852 01a6 E2DD     		ble	.L40
 108:analogBreakoutBoard.cpp **** 			hw.PrintLine("Min: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 853              		.loc 7 108 4 is_stmt 1 view .LVU240
 108:analogBreakoutBoard.cpp **** 			hw.PrintLine("Min: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 854              		.loc 7 108 27 is_stmt 0 view .LVU241
 855 01a8 0020     		movs	r0, #0
 856 01aa FFF7FEFF 		bl	_Z17getBoardKnobValuei
 857              	.LVL61:
 108:analogBreakoutBoard.cpp **** 			hw.PrintLine("Min: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 858              		.loc 7 108 8 view .LVU242
 859 01ae BDEEC00A 		vcvt.s32.f32	s0, s0
 109:analogBreakoutBoard.cpp **** 		}
 860              		.loc 7 109 37 view .LVU243
 861 01b2 0720     		movs	r0, #7
 108:analogBreakoutBoard.cpp **** 			hw.PrintLine("Min: " FLT_FMT(6), FLT_VAR(6, getBoardKnobValue(7)));
 862              		.loc 7 108 8 view .LVU244
 863 01b4 85ED000A 		vstr.32	s0, [r5]	@ int
 109:analogBreakoutBoard.cpp **** 		}
 864              		.loc 7 109 4 is_stmt 1 view .LVU245
 109:analogBreakoutBoard.cpp **** 		}
 865              		.loc 7 109 37 is_stmt 0 view .LVU246
 866 01b8 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 867              	.LVL62:
 109:analogBreakoutBoard.cpp **** 		}
 868              		.loc 7 109 16 view .LVU247
 869 01bc B5EEC00A 		vcmpe.f32	s0, #0
 109:analogBreakoutBoard.cpp **** 		}
 870              		.loc 7 109 37 view .LVU248
 871 01c0 0720     		movs	r0, #7
 109:analogBreakoutBoard.cpp **** 		}
 872              		.loc 7 109 16 view .LVU249
 873 01c2 F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 874 01c6 4CBF     		ite	mi
 875 01c8 2D21     		movmi	r1, #45
 876 01ca 2021     		movpl	r1, #32
 877 01cc 0391     		str	r1, [sp, #12]
 109:analogBreakoutBoard.cpp **** 		}
 878              		.loc 7 109 37 view .LVU250
 879 01ce FFF7FEFF 		bl	_Z17getBoardKnobValuei
 880              	.LVL63:
 881 01d2 0720     		movs	r0, #7
 882 01d4 F0EE408A 		vmov.f32	s17, s0
 883              	.LVL64:
 884              	.LBB266:
 885              	.LBI266:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 886              		.loc 8 75 3 is_stmt 1 view .LVU251
 887              	.LBB267:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 32


 888              		.loc 8 76 5 view .LVU252
 889              		.loc 8 76 5 is_stmt 0 view .LVU253
 890              	.LBE267:
 891              	.LBE266:
 109:analogBreakoutBoard.cpp **** 		}
 892              		.loc 7 109 37 view .LVU254
 893 01d8 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 894              	.LVL65:
 895 01dc B0EE408A 		vmov.f32	s16, s0
 896              	.LVL66:
 897              	.LBB269:
 898              	.LBI269:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 899              		.loc 8 75 3 is_stmt 1 view .LVU255
 900              	.LBB270:
 901              		.loc 8 76 5 view .LVU256
 902              		.loc 8 76 5 is_stmt 0 view .LVU257
 903              	.LBE270:
 904              	.LBE269:
 109:analogBreakoutBoard.cpp **** 		}
 905              		.loc 7 109 37 view .LVU258
 906 01e0 0720     		movs	r0, #7
 907 01e2 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 908              	.LVL67:
 909              	.LBB272:
 910              	.LBI272:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 911              		.loc 8 75 3 is_stmt 1 view .LVU259
 912              	.LBB273:
 913              		.loc 8 76 5 view .LVU260
 914              		.loc 8 76 5 is_stmt 0 view .LVU261
 915              	.LBE273:
 916              	.LBE272:
 917              	.LBB275:
 918              	.LBI258:
 126:../../libDaisy//src/daisy_seed.h ****     {
 919              		.loc 1 126 17 is_stmt 1 view .LVU262
 920              	.LBE275:
 921              	.LBB276:
 922              	.LBB268:
 923              		.loc 8 76 31 is_stmt 0 view .LVU263
 924 01e6 F0EEE88A 		vabs.f32	s17, s17
 925              	.LVL68:
 926              		.loc 8 76 31 view .LVU264
 927              	.LBE268:
 928              	.LBE276:
 929              	.LBB277:
 930              	.LBB271:
 931 01ea B0EEC88A 		vabs.f32	s16, s16
 932              	.LVL69:
 933              		.loc 8 76 31 view .LVU265
 934              	.LBE271:
 935              	.LBE277:
 936              	.LBB278:
 937              	.LBB262:
 128:../../libDaisy//src/daisy_seed.h ****     }
 938              		.loc 1 128 23 view .LVU266
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 33


 939 01ee 0399     		ldr	r1, [sp, #12]
 940              	.LBE262:
 941              	.LBE278:
 942              	.LBB279:
 943              	.LBB274:
 944              		.loc 8 76 31 view .LVU267
 945 01f0 B0EEC07A 		vabs.f32	s14, s0
 946              	.LBE274:
 947              	.LBE279:
 948              	.LBB280:
 949              	.LBB263:
 128:../../libDaisy//src/daisy_seed.h ****     }
 950              		.loc 1 128 23 view .LVU268
 951 01f4 1348     		ldr	r0, .L52+68
 952              	.LBE263:
 953              	.LBE280:
 109:analogBreakoutBoard.cpp **** 		}
 954              		.loc 7 109 37 view .LVU269
 955 01f6 9FED026B 		vldr.64	d6, .L52
 956 01fa A4E7     		b	.L50
 957              	.L53:
 958 01fc AFF30080 		.align	3
 959              	.L52:
 960 0200 00000000 		.word	0
 961 0204 80842E41 		.word	1093567616
 962 0208 00000000 		.word	.LANCHOR3
 963 020c 00000000 		.word	.LANCHOR4
 964 0210 00000000 		.word	.LANCHOR9
 965 0214 18000000 		.word	.LANCHOR3+24
 966 0218 00000000 		.word	.LANCHOR5
 967 021c 00000000 		.word	.LANCHOR0
 968 0220 00000000 		.word	.LANCHOR6
 969 0224 00000000 		.word	.LANCHOR1
 970 0228 00000000 		.word	.LANCHOR7
 971 022c 00000000 		.word	.LANCHOR2
 972 0230 0000C842 		.word	1120403456
 973 0234 00000000 		.word	.LANCHOR8
 974 0238 0000DC43 		.word	1138491392
 975 023c 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 976 0240 00000000 		.word	.LC0
 977 0244 10000000 		.word	.LC1
 978              		.cfi_endproc
 979              	.LFE4683:
 981              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 982              		.align	1
 983              		.p2align 2,,3
 984              		.syntax unified
 985              		.thumb
 986              		.thumb_func
 987              		.fpu fpv5-d16
 989              	_GLOBAL__sub_I_hw:
 990              	.LFB5248:
 112:analogBreakoutBoard.cpp **** 	}
 113:analogBreakoutBoard.cpp **** }
 991              		.loc 7 113 1 is_stmt 1 view -0
 992              		.cfi_startproc
 993              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 34


 994              		@ frame_needed = 0, uses_anonymous_args = 0
 995              	.LBB328:
 996              	.LBI328:
 997              		.loc 7 113 1 view .LVU271
 998              	.LVL70:
 999              	.LBB329:
 1000              	.LBB330:
 1001              	.LBI330:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 1002              		.loc 1 21 5 view .LVU272
 1003              	.LBB331:
 1004              	.LBB332:
 1005              	.LBI332:
 1006              		.file 9 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 35


  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 36


 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 37


 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 1007              		.loc 9 166 5 view .LVU273
 1008              	.LBE332:
 1009              	.LBE331:
 1010              	.LBE330:
 1011              	.LBE329:
 1012              	.LBE328:
 1013              		.loc 7 113 1 is_stmt 0 view .LVU274
 1014 0000 10B5     		push	{r4, lr}
 1015              		.cfi_def_cfa_offset 8
 1016              		.cfi_offset 4, -8
 1017              		.cfi_offset 14, -4
 1018              	.LBB394:
 1019              	.LBB393:
 1020              	.LBB353:
 1021              	.LBB351:
 1022              	.LBB337:
 1023              	.LBB333:
 1024              	.LBB334:
 1025              		.loc 9 166 34 view .LVU275
 1026 0002 1048     		ldr	r0, .L56
 1027 0004 0024     		movs	r4, #0
 1028              	.LBE334:
 1029              	.LBE333:
 1030              	.LBE337:
 1031              	.LBE351:
 1032              	.LBE353:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 1033              		.loc 7 7 11 view .LVU276
 1034 0006 104A     		ldr	r2, .L56+4
 1035 0008 1049     		ldr	r1, .L56+8
 1036              	.LBB354:
 1037              	.LBB352:
 1038              	.LBB338:
 1039              	.LBB336:
 1040              	.LBB335:
 1041              		.loc 9 166 34 view .LVU277
 1042 000a 0460     		str	r4, [r0]
 1043              	.LVL71:
 1044              		.loc 9 166 34 view .LVU278
 1045              	.LBE335:
 1046              	.LBE336:
 1047              	.LBE338:
 1048              	.LBB339:
 1049              	.LBI339:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1050              		.loc 5 95 5 is_stmt 1 view .LVU279
 1051              	.LBB340:
 1052              	.LBB341:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 38


  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1053              		.loc 5 95 35 is_stmt 0 view .LVU280
 1054 000c 4461     		str	r4, [r0, #20]
 1055              	.LVL72:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 1056              		.loc 5 95 35 view .LVU281
 1057              	.LBE341:
 1058              	.LBE340:
 1059              	.LBE339:
 1060              	.LBB342:
 1061              	.LBI342:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1062              		.loc 4 109 5 is_stmt 1 view .LVU282
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 1063              		.loc 4 109 5 is_stmt 0 view .LVU283
 1064              	.LBE342:
 1065              	.LBB343:
 1066              	.LBI343:
 1067              		.file 10 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 39


  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 1068              		.loc 10 84 5 is_stmt 1 view .LVU284
 1069              	.LBB344:
 1070              	.LBB345:
 1071              		.loc 10 84 33 is_stmt 0 view .LVU285
 1072 000e 0462     		str	r4, [r0, #32]
 1073              	.LVL73:
 1074              		.loc 10 84 33 view .LVU286
 1075              	.LBE345:
 1076              	.LBE344:
 1077              	.LBE343:
 1078              	.LBB346:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 40


 1079              	.LBI346:
  40:../../libDaisy//src/hid/usb.h **** 
 1080              		.loc 3 40 5 is_stmt 1 view .LVU287
  40:../../libDaisy//src/hid/usb.h **** 
 1081              		.loc 3 40 5 is_stmt 0 view .LVU288
 1082              	.LBE346:
 1083              	.LBB347:
 1084              	.LBI347:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 1085              		.loc 2 96 5 is_stmt 1 view .LVU289
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 1086              		.loc 2 96 5 is_stmt 0 view .LVU290
 1087              	.LBE347:
 1088              	.LBB348:
 1089              	.LBI348:
 1090              		.file 11 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 41


  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 42


  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 1091              		.loc 11 108 5 is_stmt 1 view .LVU291
 1092              	.LBB349:
 1093              	.LBB350:
 1094              		.loc 11 108 33 is_stmt 0 view .LVU292
 1095 0010 C463     		str	r4, [r0, #60]
 1096              	.LVL74:
 1097              		.loc 11 108 33 view .LVU293
 1098              	.LBE350:
 1099              	.LBE349:
 1100              	.LBE348:
 1101              	.LBE352:
 1102              	.LBE354:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 1103              		.loc 7 7 11 view .LVU294
 1104 0012 FFF7FEFF 		bl	__aeabi_atexit
 1105              	.LVL75:
 1106              	.LBB355:
 1107              	.LBI355:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 1108              		.loc 6 23 5 is_stmt 1 view .LVU295
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 1109              		.loc 6 23 5 is_stmt 0 view .LVU296
 1110              	.LBE355:
   8:analogBreakoutBoard.cpp **** GPIO board0;
 1111              		.loc 7 8 19 view .LVU297
 1112 0016 0C4A     		ldr	r2, .L56+4
 1113 0018 0D49     		ldr	r1, .L56+12
 1114 001a 0E48     		ldr	r0, .L56+16
 1115 001c FFF7FEFF 		bl	__aeabi_atexit
 1116              	.LVL76:
 1117              	.LBB356:
 1118              	.LBI356:
 1119              		.file 12 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 43


  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 44


  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 1120              		.loc 12 74 5 is_stmt 1 view .LVU298
 1121              	.LBB357:
 1122              	.LBB358:
 1123              	.LBI358:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1124              		.loc 12 68 9 view .LVU299
 1125              	.LBB359:
 1126              	.LBB360:
 1127              	.LBB361:
 1128              	.LBI361:
 1129              		.file 13 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 45


  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 46


 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 47


 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 48


 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 49


 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 1130              		.loc 13 272 15 view .LVU300
 1131              		.loc 13 272 15 is_stmt 0 view .LVU301
 1132              	.LBE361:
 1133              	.LBE360:
 1134              	.LBE359:
 1135              	.LBE358:
 1136              		.loc 12 74 12 view .LVU302
 1137 0020 0D49     		ldr	r1, .L56+20
 1138 0022 4FF60B70 		movw	r0, #65291
 1139              	.LBE357:
 1140              	.LBE356:
 1141              	.LBB370:
 1142              	.LBB371:
 1143 0026 0D4A     		ldr	r2, .L56+24
 1144              	.LBE371:
 1145              	.LBE370:
 1146              	.LBB381:
 1147              	.LBB382:
 1148 0028 0D4B     		ldr	r3, .L56+28
 1149              	.LBE382:
 1150              	.LBE381:
 1151              	.LBB388:
 1152              	.LBB368:
 1153              	.LBB366:
 1154              	.LBB364:
 1155              	.LBB362:
  69:../../libDaisy//src/per/gpio.h ****         {
 1156              		.loc 12 69 73 view .LVU303
 1157 002a CC60     		str	r4, [r1, #12]
 1158              	.LVL77:
  69:../../libDaisy//src/per/gpio.h ****         {
 1159              		.loc 12 69 73 view .LVU304
 1160              	.LBE362:
 1161              	.LBE364:
 1162              	.LBE366:
 1163              	.LBE368:
 1164              	.LBE388:
 1165              	.LBB389:
 1166              	.LBI370:
 1167              		.loc 12 74 5 is_stmt 1 view .LVU305
 1168              	.LBB379:
 1169              	.LBB372:
 1170              	.LBI372:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1171              		.loc 12 68 9 view .LVU306
 1172              	.LBB373:
 1173              	.LBB374:
 1174              	.LBB375:
 1175              	.LBI375:
 1176              		.loc 13 272 15 view .LVU307
 1177              		.loc 13 272 15 is_stmt 0 view .LVU308
 1178              	.LBE375:
 1179              	.LBE374:
 1180              	.LBE373:
 1181              	.LBE372:
 1182              	.LBE379:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 50


 1183              	.LBE389:
 1184              	.LBB390:
 1185              	.LBB369:
 1186              		.loc 12 74 12 view .LVU309
 1187 002c 0860     		str	r0, [r1]
 1188              	.LBB367:
 1189              	.LBB365:
 1190              	.LBB363:
  69:../../libDaisy//src/per/gpio.h ****         {
 1191              		.loc 12 69 73 view .LVU310
 1192 002e C1E90144 		strd	r4, r4, [r1, #4]
 1193              	.LBE363:
 1194              	.LBE365:
 1195              	.LBE367:
 1196              	.LBE369:
 1197              	.LBE390:
 1198              	.LBB391:
 1199              	.LBB380:
 1200              	.LBB378:
 1201              	.LBB377:
 1202              	.LBB376:
 1203 0032 C2E90004 		strd	r0, r4, [r2]
 1204 0036 C2E90244 		strd	r4, r4, [r2, #8]
 1205              	.LVL78:
  69:../../libDaisy//src/per/gpio.h ****         {
 1206              		.loc 12 69 73 view .LVU311
 1207              	.LBE376:
 1208              	.LBE377:
 1209              	.LBE378:
 1210              	.LBE380:
 1211              	.LBE391:
 1212              	.LBB392:
 1213              	.LBI381:
 1214              		.loc 12 74 5 is_stmt 1 view .LVU312
 1215              	.LBB387:
 1216              	.LBB383:
 1217              	.LBI383:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1218              		.loc 12 68 9 view .LVU313
 1219              	.LBB384:
 1220              	.LBB385:
 1221              	.LBB386:
 1222              	.LBI386:
 1223              		.loc 13 272 15 view .LVU314
 1224              		.loc 13 272 15 is_stmt 0 view .LVU315
 1225              	.LBE386:
  69:../../libDaisy//src/per/gpio.h ****         {
 1226              		.loc 12 69 73 view .LVU316
 1227 003a C3E90004 		strd	r0, r4, [r3]
 1228 003e C3E90244 		strd	r4, r4, [r3, #8]
 1229              	.LVL79:
  69:../../libDaisy//src/per/gpio.h ****         {
 1230              		.loc 12 69 73 view .LVU317
 1231              	.LBE385:
 1232              	.LBE384:
 1233              	.LBE383:
 1234              	.LBE387:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 51


 1235              	.LBE392:
 1236              	.LBE393:
 1237              	.LBE394:
 1238              		.loc 7 113 1 view .LVU318
 1239 0042 10BD     		pop	{r4, pc}
 1240              	.L57:
 1241              		.align	2
 1242              	.L56:
 1243 0044 00000000 		.word	.LANCHOR3
 1244 0048 00000000 		.word	__dso_handle
 1245 004c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1246 0050 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 1247 0054 00000000 		.word	.LANCHOR4
 1248 0058 00000000 		.word	.LANCHOR0
 1249 005c 00000000 		.word	.LANCHOR1
 1250 0060 00000000 		.word	.LANCHOR2
 1251              		.cfi_endproc
 1252              	.LFE5248:
 1254              		.section	.init_array,"aw",%init_array
 1255              		.align	2
 1256 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1257              		.global	min
 1258              		.global	max
 1259              		.global	board2
 1260              		.global	board1
 1261              		.global	board0
 1262              		.global	hw
 1263              		.section	.bss._ZL3osc,"aw",%nobits
 1264              		.align	2
 1265              		.set	.LANCHOR4,. + 0
 1268              	_ZL3osc:
 1269 0000 00000000 		.space	44
 1269      00000000 
 1269      00000000 
 1269      00000000 
 1269      00000000 
 1270              		.section	.bss.board0,"aw",%nobits
 1271              		.align	2
 1272              		.set	.LANCHOR0,. + 0
 1275              	board0:
 1276 0000 00000000 		.space	20
 1276      00000000 
 1276      00000000 
 1276      00000000 
 1276      00000000 
 1277              		.section	.bss.board1,"aw",%nobits
 1278              		.align	2
 1279              		.set	.LANCHOR1,. + 0
 1282              	board1:
 1283 0000 00000000 		.space	20
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1283      00000000 
 1284              		.section	.bss.board2,"aw",%nobits
 1285              		.align	2
 1286              		.set	.LANCHOR2,. + 0
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 52


 1289              	board2:
 1290 0000 00000000 		.space	20
 1290      00000000 
 1290      00000000 
 1290      00000000 
 1290      00000000 
 1291              		.section	.bss.hw,"aw",%nobits
 1292              		.align	2
 1293              		.set	.LANCHOR3,. + 0
 1296              	hw:
 1297 0000 00000000 		.space	64
 1297      00000000 
 1297      00000000 
 1297      00000000 
 1297      00000000 
 1298              		.section	.bss.max,"aw",%nobits
 1299              		.align	2
 1300              		.set	.LANCHOR8,. + 0
 1303              	max:
 1304 0000 00000000 		.space	4
 1305              		.section	.data.min,"aw"
 1306              		.align	2
 1307              		.set	.LANCHOR9,. + 0
 1310              	min:
 1311 0000 40420F00 		.word	1000000
 1312              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 1313              		.align	2
 1314              		.set	.LANCHOR5,. + 0
 1317              	_ZN5daisy4seedL2D1E:
 1318 0000 02       		.byte	2
 1319 0001 0B       		.byte	11
 1320              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 1321              		.align	2
 1322              		.set	.LANCHOR6,. + 0
 1325              	_ZN5daisy4seedL2D2E:
 1326 0000 02       		.byte	2
 1327 0001 0A       		.byte	10
 1328              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 1329              		.align	2
 1330              		.set	.LANCHOR7,. + 0
 1333              	_ZN5daisy4seedL2D3E:
 1334 0000 02       		.byte	2
 1335 0001 09       		.byte	9
 1336              		.text
 1337              	.Letext0:
 1338              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1339              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1340              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1341              		.file 17 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1342              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1343              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1344              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1345              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1346              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1347              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1348              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1349              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 53


 1350              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1351              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1352              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1353              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1354              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1355              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1356              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1357              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 1358              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1359              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1360              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1361              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1362              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1363              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1364              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1365              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1366              		.file 42 "../../libDaisy//src/per/tim.h"
 1367              		.file 43 "../../libDaisy//src/hid/logger_impl.h"
 1368              		.file 44 "../../libDaisy//src/util/wav_format.h"
 1369              		.file 45 "../../libDaisy//src/dev/max11300.h"
 1370              		.file 46 "../../libDaisy//src/hid/logger.h"
 1371              		.file 47 "../../libDaisy//src/dev/sdram.h"
 1372              		.file 48 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1373              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1374              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1375              		.file 51 "../../DaisySP//Source/Control/adenv.h"
 1376              		.file 52 "../../DaisySP//Source/Utility/dsp.h"
 1377              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1378              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1379              		.file 55 "../../libDaisy//src/dev/sr_595.h"
 1380              		.file 56 "<built-in>"
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 54


DEFINED SYMBOLS
                            *ABS*:00000000 analogBreakoutBoard.cpp
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:67     .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:92     .text._Z17getBoardKnobValuei:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:100    .text._Z17getBoardKnobValuei:00000000 _Z17getBoardKnobValuei
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:221    .text._Z17getBoardKnobValuei:00000068 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:230    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:238    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:379    .text._Z13AudioCallbackPKPKfPPfj:00000054 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:384    .rodata.main.str1.4:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:391    .text.startup.main:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:399    .text.startup.main:00000000 main
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:960    .text.startup.main:00000200 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:982    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:989    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1243   .text.startup._GLOBAL__sub_I_hw:00000044 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1255   .init_array:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1310   .data.min:00000000 min
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1303   .bss.max:00000000 max
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1289   .bss.board2:00000000 board2
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1282   .bss.board1:00000000 board1
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1275   .bss.board0:00000000 board0
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1296   .bss.hw:00000000 hw
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1264   .bss._ZL3osc:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1268   .bss._ZL3osc:00000000 _ZL3osc
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1271   .bss.board0:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1278   .bss.board1:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1285   .bss.board2:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1292   .bss.hw:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1299   .bss.max:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1306   .data.min:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1313   .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1317   .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1321   .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1325   .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1329   .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s:1333   .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO5WriteEb
_ZNK5daisy9AdcHandle3GetEh
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\cc31g1tC.s 			page 55


_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE8StartLogEb
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN5daisy6System5DelayEm
__aeabi_atexit
__dso_handle
