ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"analogBreakoutBoard.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB154:
  36              	.LBI154:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE154:
  41              	.LBB155:
  42              	.LBI155:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 4


  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE155:
  47              	.LBB156:
  48              	.LBI156:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 5


  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 6


  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE156:
  53              	.LBB157:
  54              	.LBI157:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 7


  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 8


  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE157:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp10OscillatorD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp10OscillatorD2Ev:
  76              	.LVL1:
  77              	.LFB4240:
  78              		.file 6 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 9


  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  79              		.loc 6 24 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 6 24 20 is_stmt 0 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4240:
  89              		.weak	_ZN7daisysp10OscillatorD1Ev
  90              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
  91              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_Z13AudioCallbackPKPKfPPfj
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_Z13AudioCallbackPKPKfPPfj:
 101              	.LVL2:
 102              	.LFB4682:
 103              		.file 7 "analogBreakoutBoard.cpp"
   1:analogBreakoutBoard.cpp **** #include "daisy_seed.h"
   2:analogBreakoutBoard.cpp **** #include "daisysp.h"
   3:analogBreakoutBoard.cpp **** 
   4:analogBreakoutBoard.cpp **** using namespace daisy;
   5:analogBreakoutBoard.cpp **** using namespace daisysp;
   6:analogBreakoutBoard.cpp **** 
   7:analogBreakoutBoard.cpp **** DaisySeed hw;
   8:analogBreakoutBoard.cpp **** static Oscillator osc;
   9:analogBreakoutBoard.cpp **** GPIO board0;
  10:analogBreakoutBoard.cpp **** GPIO board1;
  11:analogBreakoutBoard.cpp **** GPIO board2;
  12:analogBreakoutBoard.cpp **** 
  13:analogBreakoutBoard.cpp **** float getBoardKnobValue(int knobPin)
  14:analogBreakoutBoard.cpp **** {
  15:analogBreakoutBoard.cpp **** 	switch (knobPin)
  16:analogBreakoutBoard.cpp **** 	{
  17:analogBreakoutBoard.cpp **** 		case 0:
  18:analogBreakoutBoard.cpp **** 			board0.Write(false);
  19:analogBreakoutBoard.cpp **** 			board1.Write(false);
  20:analogBreakoutBoard.cpp **** 			board2.Write(false);
  21:analogBreakoutBoard.cpp **** 			break;
  22:analogBreakoutBoard.cpp **** 		case 1:
  23:analogBreakoutBoard.cpp **** 			board0.Write(true);
  24:analogBreakoutBoard.cpp **** 			board1.Write(false);
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 10


  25:analogBreakoutBoard.cpp **** 			board2.Write(false);
  26:analogBreakoutBoard.cpp **** 			break;
  27:analogBreakoutBoard.cpp **** 		case 2:
  28:analogBreakoutBoard.cpp **** 			board0.Write(false);
  29:analogBreakoutBoard.cpp **** 			board1.Write(true);
  30:analogBreakoutBoard.cpp **** 			board2.Write(false);
  31:analogBreakoutBoard.cpp **** 			break;
  32:analogBreakoutBoard.cpp **** 		case 3:
  33:analogBreakoutBoard.cpp **** 			board0.Write(true);
  34:analogBreakoutBoard.cpp **** 			board1.Write(true);
  35:analogBreakoutBoard.cpp **** 			board2.Write(false);
  36:analogBreakoutBoard.cpp **** 			break;
  37:analogBreakoutBoard.cpp **** 		case 4:
  38:analogBreakoutBoard.cpp **** 			board0.Write(false);
  39:analogBreakoutBoard.cpp **** 			board1.Write(false);
  40:analogBreakoutBoard.cpp **** 			board2.Write(true);
  41:analogBreakoutBoard.cpp **** 			break;
  42:analogBreakoutBoard.cpp **** 		case 5:
  43:analogBreakoutBoard.cpp **** 			board0.Write(true);
  44:analogBreakoutBoard.cpp **** 			board1.Write(false);
  45:analogBreakoutBoard.cpp **** 			board2.Write(true);
  46:analogBreakoutBoard.cpp **** 			break;
  47:analogBreakoutBoard.cpp **** 		case 6:
  48:analogBreakoutBoard.cpp **** 			board0.Write(false);
  49:analogBreakoutBoard.cpp **** 			board1.Write(true);
  50:analogBreakoutBoard.cpp **** 			board2.Write(true);
  51:analogBreakoutBoard.cpp **** 			break;
  52:analogBreakoutBoard.cpp **** 		case 7:
  53:analogBreakoutBoard.cpp **** 			board0.Write(true);
  54:analogBreakoutBoard.cpp **** 			board1.Write(true);
  55:analogBreakoutBoard.cpp **** 			board2.Write(true);
  56:analogBreakoutBoard.cpp **** 			break;
  57:analogBreakoutBoard.cpp **** 	}
  58:analogBreakoutBoard.cpp **** 	return hw.adc.GetFloat(0);
  59:analogBreakoutBoard.cpp **** }
  60:analogBreakoutBoard.cpp **** 
  61:analogBreakoutBoard.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  62:analogBreakoutBoard.cpp **** {
 104              		.loc 7 62 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  63:analogBreakoutBoard.cpp **** 	float sig;
 108              		.loc 7 63 2 view .LVU13
  64:analogBreakoutBoard.cpp **** 	for (size_t i = 0; i < size; i+=2)
 109              		.loc 7 64 2 view .LVU14
 110              	.LBB169:
 111              		.loc 7 64 23 view .LVU15
 112 0000 002A     		cmp	r2, #0
 113 0002 3CD0     		beq	.L12
 114              	.LBE169:
  62:analogBreakoutBoard.cpp **** 	float sig;
 115              		.loc 7 62 1 is_stmt 0 view .LVU16
 116 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 117              		.cfi_def_cfa_offset 24
 118              		.cfi_offset 3, -24
 119              		.cfi_offset 4, -20
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 11


 120              		.cfi_offset 5, -16
 121              		.cfi_offset 6, -12
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0006 0D46     		mov	r5, r1
 125 0008 1746     		mov	r7, r2
 126              	.LBB191:
 127              		.loc 7 64 14 view .LVU17
 128 000a 0024     		movs	r4, #0
 129 000c 1C4E     		ldr	r6, .L15
 130              	.LVL3:
 131              	.L6:
 132              	.LBB170:
  65:analogBreakoutBoard.cpp **** 	{
  66:analogBreakoutBoard.cpp **** 		float knobValue = getBoardKnobValue(1);
 133              		.loc 7 66 3 is_stmt 1 view .LVU18
 134              	.LBB171:
 135              	.LBI171:
  13:analogBreakoutBoard.cpp **** {
 136              		.loc 7 13 7 view .LVU19
 137              	.LBB172:
  15:analogBreakoutBoard.cpp **** 	{
 138              		.loc 7 15 2 view .LVU20
  22:analogBreakoutBoard.cpp **** 			board0.Write(true);
 139              		.loc 7 22 3 view .LVU21
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 140              		.loc 7 23 4 view .LVU22
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 141              		.loc 7 23 16 is_stmt 0 view .LVU23
 142 000e 0121     		movs	r1, #1
 143 0010 1C48     		ldr	r0, .L15+4
 144 0012 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 145              	.LVL4:
  24:analogBreakoutBoard.cpp **** 			board2.Write(false);
 146              		.loc 7 24 4 is_stmt 1 view .LVU24
  24:analogBreakoutBoard.cpp **** 			board2.Write(false);
 147              		.loc 7 24 16 is_stmt 0 view .LVU25
 148 0016 0021     		movs	r1, #0
 149 0018 1B48     		ldr	r0, .L15+8
 150 001a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 151              	.LVL5:
  25:analogBreakoutBoard.cpp **** 			break;
 152              		.loc 7 25 4 is_stmt 1 view .LVU26
  25:analogBreakoutBoard.cpp **** 			break;
 153              		.loc 7 25 16 is_stmt 0 view .LVU27
 154 001e 0021     		movs	r1, #0
 155 0020 1A48     		ldr	r0, .L15+12
 156 0022 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 157              	.LVL6:
  26:analogBreakoutBoard.cpp **** 		case 2:
 158              		.loc 7 26 4 is_stmt 1 view .LVU28
  58:analogBreakoutBoard.cpp **** }
 159              		.loc 7 58 2 view .LVU29
  58:analogBreakoutBoard.cpp **** }
 160              		.loc 7 58 24 is_stmt 0 view .LVU30
 161 0026 0021     		movs	r1, #0
 162 0028 1948     		ldr	r0, .L15+16
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 12


 163 002a FFF7FEFF 		bl	_ZNK5daisy9AdcHandle8GetFloatEh
 164              	.LVL7:
  58:analogBreakoutBoard.cpp **** }
 165              		.loc 7 58 24 view .LVU31
 166              	.LBE172:
 167              	.LBE171:
  67:analogBreakoutBoard.cpp **** 		osc.SetFreq(24.0 + (fclamp(knobValue, 0.0f, 1.0f) * 60) );
 168              		.loc 7 67 3 is_stmt 1 view .LVU32
 169              	.LBB173:
 170              	.LBI173:
 171              		.file 8 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisySP//Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP//Source/Utility/dsp.h **** #include <random>
  17:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP//Source/Utility/dsp.h **** {
  31:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  45:../../DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 13


  47:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisySP//Source/Utility/dsp.h **** }
  50:../../DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
 172              		.loc 8 64 14 view .LVU33
 173              	.LBE173:
 174              	.LBE170:
 175              	.LBE191:
  65:../../DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 176              		.loc 8 66 5 view .LVU34
 177              	.LBB192:
 178              	.LBB188:
 179              	.LBB182:
 180              	.LBB174:
 181              	.LBI174:
  40:../../DaisySP//Source/Utility/dsp.h **** {
 182              		.loc 8 40 14 view .LVU35
 183              	.LBB175:
  42:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 184              		.loc 8 42 5 view .LVU36
  44:../../DaisySP//Source/Utility/dsp.h **** #else
 185              		.loc 8 44 5 view .LVU37
 186 002e B3EE087A 		vmov.f32	s14, #2.4e+1
 187 0032 DFED186A 		vldr.32	s13, .L15+20
 188              	.LBE175:
 189              	.LBE174:
 190              	.LBB177:
 191              	.LBB178:
  55:../../DaisySP//Source/Utility/dsp.h **** #else
 192              		.loc 8 55 5 is_stmt 0 view .LVU38
 193 0036 F7EE007A 		vmov.f32	s15, #1.0e+0
 194              	.LBE178:
 195              	.LBE177:
 196              	.LBB180:
 197              	.LBB176:
  44:../../DaisySP//Source/Utility/dsp.h **** #else
 198              		.loc 8 44 5 view .LVU39
 199 003a 9FED176A 		vldr.32	s12, .L15+24
 200              		.syntax unified
 201              	@ 44 "../../DaisySP//Source/Utility/dsp.h" 1
 202 003e 80FE060A 		vmaxnm.f32 s0, s0, s12
 203              	@ 0 "" 2
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 14


 204              	.LVL8:
  48:../../DaisySP//Source/Utility/dsp.h **** }
 205              		.loc 8 48 5 is_stmt 1 view .LVU40
  48:../../DaisySP//Source/Utility/dsp.h **** }
 206              		.loc 8 48 5 is_stmt 0 view .LVU41
 207              		.thumb
 208              		.syntax unified
 209              	.LBE176:
 210              	.LBE180:
 211              	.LBB181:
 212              	.LBI177:
  51:../../DaisySP//Source/Utility/dsp.h **** {
 213              		.loc 8 51 14 is_stmt 1 view .LVU42
 214              	.LBB179:
  53:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 215              		.loc 8 53 5 view .LVU43
  55:../../DaisySP//Source/Utility/dsp.h **** #else
 216              		.loc 8 55 5 view .LVU44
 217              		.syntax unified
 218              	@ 55 "../../DaisySP//Source/Utility/dsp.h" 1
 219 0042 C0FE677A 		vminnm.f32 s15, s0, s15
 220              	@ 0 "" 2
 221              	.LVL9:
  59:../../DaisySP//Source/Utility/dsp.h **** }
 222              		.loc 8 59 5 view .LVU45
  59:../../DaisySP//Source/Utility/dsp.h **** }
 223              		.loc 8 59 5 is_stmt 0 view .LVU46
 224              		.thumb
 225              		.syntax unified
 226 0046 A7EEA67A 		vfma.f32	s14, s15, s13
 227              	.LBE179:
 228              	.LBE181:
 229              	.LBE182:
 230              	.LBB183:
 231              	.LBB184:
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 15


  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 232              		.loc 6 70 34 view .LVU47
 233 004a 0D48     		ldr	r0, .L15
 234 004c B0EE470A 		vmov.f32	s0, s14
 235              	.LVL10:
 236              		.loc 6 70 34 view .LVU48
 237              	.LBE184:
 238              	.LBI183:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 239              		.loc 6 67 17 is_stmt 1 view .LVU49
 240              	.LBB185:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 241              		.loc 6 69 9 view .LVU50
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 242              		.loc 6 69 20 is_stmt 0 view .LVU51
 243 0050 86ED027A 		vstr.32	s14, [r6, #8]
 244              		.loc 6 70 9 is_stmt 1 view .LVU52
 245              		.loc 6 70 34 is_stmt 0 view .LVU53
 246 0054 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 247              	.LVL11:
 248              		.loc 6 70 34 view .LVU54
 249              	.LBE185:
 250              	.LBE183:
  68:analogBreakoutBoard.cpp **** 		sig = osc.Process();
 251              		.loc 7 68 20 view .LVU55
 252 0058 0948     		ldr	r0, .L15
 253              	.LBB187:
 254              	.LBB186:
 255              		.loc 6 70 20 view .LVU56
 256 005a 86ED070A 		vstr.32	s0, [r6, #28]
 257              	.LVL12:
 258              		.loc 6 70 20 view .LVU57
 259              	.LBE186:
 260              	.LBE187:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 16


 261              		.loc 7 68 3 is_stmt 1 view .LVU58
 262              		.loc 7 68 20 is_stmt 0 view .LVU59
 263 005e FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 264              	.LVL13:
  69:analogBreakoutBoard.cpp **** 
  70:analogBreakoutBoard.cpp **** 		out[0][i] = sig;
  71:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 265              		.loc 7 71 16 view .LVU60
 266 0062 D5E90003 		ldrd	r0, r3, [r5]
 267              	.LVL14:
  70:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 268              		.loc 7 70 3 is_stmt 1 view .LVU61
  70:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 269              		.loc 7 70 13 is_stmt 0 view .LVU62
 270 0066 00EB8400 		add	r0, r0, r4, lsl #2
 271              		.loc 7 71 16 view .LVU63
 272 006a 03EB8403 		add	r3, r3, r4, lsl #2
 273              	.LBE188:
  64:analogBreakoutBoard.cpp **** 	{
 274              		.loc 7 64 32 view .LVU64
 275 006e 0234     		adds	r4, r4, #2
 276              	.LVL15:
 277              	.LBB189:
  70:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 278              		.loc 7 70 13 view .LVU65
 279 0070 80ED000A 		vstr.32	s0, [r0]
 280              		.loc 7 71 6 is_stmt 1 view .LVU66
 281              	.LBE189:
  64:analogBreakoutBoard.cpp **** 	{
 282              		.loc 7 64 23 is_stmt 0 view .LVU67
 283 0074 A742     		cmp	r7, r4
 284              	.LBB190:
 285              		.loc 7 71 16 view .LVU68
 286 0076 83ED000A 		vstr.32	s0, [r3]
 287              	.LBE190:
  64:analogBreakoutBoard.cpp **** 	{
 288              		.loc 7 64 2 is_stmt 1 view .LVU69
 289              	.LVL16:
  64:analogBreakoutBoard.cpp **** 	{
 290              		.loc 7 64 23 view .LVU70
 291 007a C8D8     		bhi	.L6
 292              	.LBE192:
  72:analogBreakoutBoard.cpp **** 	}
  73:analogBreakoutBoard.cpp **** }
 293              		.loc 7 73 1 is_stmt 0 view .LVU71
 294 007c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 295              	.LVL17:
 296              	.L12:
 297              		.cfi_def_cfa_offset 0
 298              		.cfi_restore 3
 299              		.cfi_restore 4
 300              		.cfi_restore 5
 301              		.cfi_restore 6
 302              		.cfi_restore 7
 303              		.cfi_restore 14
 304              		.loc 7 73 1 view .LVU72
 305 007e 7047     		bx	lr
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 17


 306              	.L16:
 307              		.align	2
 308              	.L15:
 309 0080 00000000 		.word	.LANCHOR4
 310 0084 00000000 		.word	.LANCHOR0
 311 0088 00000000 		.word	.LANCHOR1
 312 008c 00000000 		.word	.LANCHOR2
 313 0090 18000000 		.word	.LANCHOR3+24
 314 0094 00007042 		.word	1114636288
 315 0098 00000000 		.word	0
 316              		.cfi_endproc
 317              	.LFE4682:
 319              		.section	.text._Z17getBoardKnobValuei,"ax",%progbits
 320              		.align	1
 321              		.p2align 2,,3
 322              		.global	_Z17getBoardKnobValuei
 323              		.syntax unified
 324              		.thumb
 325              		.thumb_func
 326              		.fpu fpv5-d16
 328              	_Z17getBoardKnobValuei:
 329              	.LVL18:
 330              	.LFB4681:
  14:analogBreakoutBoard.cpp **** 	switch (knobPin)
 331              		.loc 7 14 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
  15:analogBreakoutBoard.cpp **** 	{
 335              		.loc 7 15 2 view .LVU74
  14:analogBreakoutBoard.cpp **** 	switch (knobPin)
 336              		.loc 7 14 1 is_stmt 0 view .LVU75
 337 0000 08B5     		push	{r3, lr}
 338              		.cfi_def_cfa_offset 8
 339              		.cfi_offset 3, -8
 340              		.cfi_offset 14, -4
 341 0002 0728     		cmp	r0, #7
 342 0004 11D8     		bhi	.L18
 343 0006 DFE800F0 		tbb	[pc, r0]
 344              	.L20:
 345 000a 16       		.byte	(.L27-.L20)/2
 346 000b 28       		.byte	(.L26-.L20)/2
 347 000c 2A       		.byte	(.L25-.L20)/2
 348 000d 30       		.byte	(.L24-.L20)/2
 349 000e 36       		.byte	(.L23-.L20)/2
 350 000f 3C       		.byte	(.L22-.L20)/2
 351 0010 42       		.byte	(.L21-.L20)/2
 352 0011 04       		.byte	(.L19-.L20)/2
 353              		.p2align 1
 354              	.L19:
  52:analogBreakoutBoard.cpp **** 			board0.Write(true);
 355              		.loc 7 52 3 is_stmt 1 view .LVU76
  53:analogBreakoutBoard.cpp **** 			board1.Write(true);
 356              		.loc 7 53 4 view .LVU77
  53:analogBreakoutBoard.cpp **** 			board1.Write(true);
 357              		.loc 7 53 16 is_stmt 0 view .LVU78
 358 0012 0121     		movs	r1, #1
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 18


 359              	.L30:
 360 0014 1F48     		ldr	r0, .L33
 361              	.LVL19:
  53:analogBreakoutBoard.cpp **** 			board1.Write(true);
 362              		.loc 7 53 16 view .LVU79
 363 0016 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 364              	.LVL20:
  54:analogBreakoutBoard.cpp **** 			board2.Write(true);
 365              		.loc 7 54 4 is_stmt 1 view .LVU80
  54:analogBreakoutBoard.cpp **** 			board2.Write(true);
 366              		.loc 7 54 16 is_stmt 0 view .LVU81
 367 001a 0121     		movs	r1, #1
 368              	.L31:
 369 001c 1E48     		ldr	r0, .L33+4
 370 001e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 371              	.LVL21:
  55:analogBreakoutBoard.cpp **** 			break;
 372              		.loc 7 55 4 is_stmt 1 view .LVU82
  55:analogBreakoutBoard.cpp **** 			break;
 373              		.loc 7 55 16 is_stmt 0 view .LVU83
 374 0022 0121     		movs	r1, #1
 375 0024 1D48     		ldr	r0, .L33+8
 376 0026 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 377              	.LVL22:
  56:analogBreakoutBoard.cpp **** 	}
 378              		.loc 7 56 4 is_stmt 1 view .LVU84
 379              	.L18:
  58:analogBreakoutBoard.cpp **** }
 380              		.loc 7 58 2 view .LVU85
  58:analogBreakoutBoard.cpp **** }
 381              		.loc 7 58 24 is_stmt 0 view .LVU86
 382 002a 0021     		movs	r1, #0
 383 002c 1C48     		ldr	r0, .L33+12
  59:analogBreakoutBoard.cpp **** 
 384              		.loc 7 59 1 view .LVU87
 385 002e BDE80840 		pop	{r3, lr}
 386              		.cfi_remember_state
 387              		.cfi_restore 14
 388              		.cfi_restore 3
 389              		.cfi_def_cfa_offset 0
  58:analogBreakoutBoard.cpp **** }
 390              		.loc 7 58 24 view .LVU88
 391 0032 FFF7FEBF 		b	_ZNK5daisy9AdcHandle8GetFloatEh
 392              	.LVL23:
 393              	.L27:
 394              		.cfi_restore_state
  17:analogBreakoutBoard.cpp **** 			board0.Write(false);
 395              		.loc 7 17 3 is_stmt 1 view .LVU89
  18:analogBreakoutBoard.cpp **** 			board1.Write(false);
 396              		.loc 7 18 4 view .LVU90
  18:analogBreakoutBoard.cpp **** 			board1.Write(false);
 397              		.loc 7 18 16 is_stmt 0 view .LVU91
 398 0036 0021     		movs	r1, #0
 399              	.L29:
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 400              		.loc 7 23 16 view .LVU92
 401 0038 1648     		ldr	r0, .L33
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 19


 402              	.LVL24:
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 403              		.loc 7 23 16 view .LVU93
 404 003a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 405              	.LVL25:
  24:analogBreakoutBoard.cpp **** 			board2.Write(false);
 406              		.loc 7 24 4 is_stmt 1 view .LVU94
  24:analogBreakoutBoard.cpp **** 			board2.Write(false);
 407              		.loc 7 24 16 is_stmt 0 view .LVU95
 408 003e 0021     		movs	r1, #0
 409              	.L32:
 410 0040 1548     		ldr	r0, .L33+4
 411 0042 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 412              	.LVL26:
  25:analogBreakoutBoard.cpp **** 			break;
 413              		.loc 7 25 4 is_stmt 1 view .LVU96
  25:analogBreakoutBoard.cpp **** 			break;
 414              		.loc 7 25 16 is_stmt 0 view .LVU97
 415 0046 0021     		movs	r1, #0
 416 0048 1448     		ldr	r0, .L33+8
 417 004a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 418              	.LVL27:
  26:analogBreakoutBoard.cpp **** 		case 2:
 419              		.loc 7 26 4 is_stmt 1 view .LVU98
  58:analogBreakoutBoard.cpp **** }
 420              		.loc 7 58 2 view .LVU99
  58:analogBreakoutBoard.cpp **** }
 421              		.loc 7 58 24 is_stmt 0 view .LVU100
 422 004e 0021     		movs	r1, #0
 423 0050 1348     		ldr	r0, .L33+12
  59:analogBreakoutBoard.cpp **** 
 424              		.loc 7 59 1 view .LVU101
 425 0052 BDE80840 		pop	{r3, lr}
 426              		.cfi_remember_state
 427              		.cfi_restore 14
 428              		.cfi_restore 3
 429              		.cfi_def_cfa_offset 0
  58:analogBreakoutBoard.cpp **** }
 430              		.loc 7 58 24 view .LVU102
 431 0056 FFF7FEBF 		b	_ZNK5daisy9AdcHandle8GetFloatEh
 432              	.LVL28:
 433              	.L26:
 434              		.cfi_restore_state
  22:analogBreakoutBoard.cpp **** 			board0.Write(true);
 435              		.loc 7 22 3 is_stmt 1 view .LVU103
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 436              		.loc 7 23 4 view .LVU104
  23:analogBreakoutBoard.cpp **** 			board1.Write(false);
 437              		.loc 7 23 16 is_stmt 0 view .LVU105
 438 005a 0121     		movs	r1, #1
 439 005c ECE7     		b	.L29
 440              	.L25:
  27:analogBreakoutBoard.cpp **** 			board0.Write(false);
 441              		.loc 7 27 3 is_stmt 1 view .LVU106
  28:analogBreakoutBoard.cpp **** 			board1.Write(true);
 442              		.loc 7 28 4 view .LVU107
  28:analogBreakoutBoard.cpp **** 			board1.Write(true);
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 20


 443              		.loc 7 28 16 is_stmt 0 view .LVU108
 444 005e 0021     		movs	r1, #0
 445 0060 0C48     		ldr	r0, .L33
 446              	.LVL29:
  28:analogBreakoutBoard.cpp **** 			board1.Write(true);
 447              		.loc 7 28 16 view .LVU109
 448 0062 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 449              	.LVL30:
  29:analogBreakoutBoard.cpp **** 			board2.Write(false);
 450              		.loc 7 29 4 is_stmt 1 view .LVU110
  29:analogBreakoutBoard.cpp **** 			board2.Write(false);
 451              		.loc 7 29 16 is_stmt 0 view .LVU111
 452 0066 0121     		movs	r1, #1
 453 0068 EAE7     		b	.L32
 454              	.LVL31:
 455              	.L24:
  32:analogBreakoutBoard.cpp **** 			board0.Write(true);
 456              		.loc 7 32 3 is_stmt 1 view .LVU112
  33:analogBreakoutBoard.cpp **** 			board1.Write(true);
 457              		.loc 7 33 4 view .LVU113
  33:analogBreakoutBoard.cpp **** 			board1.Write(true);
 458              		.loc 7 33 16 is_stmt 0 view .LVU114
 459 006a 0121     		movs	r1, #1
 460 006c 0948     		ldr	r0, .L33
 461              	.LVL32:
  33:analogBreakoutBoard.cpp **** 			board1.Write(true);
 462              		.loc 7 33 16 view .LVU115
 463 006e FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 464              	.LVL33:
  34:analogBreakoutBoard.cpp **** 			board2.Write(false);
 465              		.loc 7 34 4 is_stmt 1 view .LVU116
  34:analogBreakoutBoard.cpp **** 			board2.Write(false);
 466              		.loc 7 34 16 is_stmt 0 view .LVU117
 467 0072 0121     		movs	r1, #1
 468 0074 E4E7     		b	.L32
 469              	.LVL34:
 470              	.L23:
  37:analogBreakoutBoard.cpp **** 			board0.Write(false);
 471              		.loc 7 37 3 is_stmt 1 view .LVU118
  38:analogBreakoutBoard.cpp **** 			board1.Write(false);
 472              		.loc 7 38 4 view .LVU119
  38:analogBreakoutBoard.cpp **** 			board1.Write(false);
 473              		.loc 7 38 16 is_stmt 0 view .LVU120
 474 0076 0021     		movs	r1, #0
 475 0078 0648     		ldr	r0, .L33
 476              	.LVL35:
  38:analogBreakoutBoard.cpp **** 			board1.Write(false);
 477              		.loc 7 38 16 view .LVU121
 478 007a FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 479              	.LVL36:
  39:analogBreakoutBoard.cpp **** 			board2.Write(true);
 480              		.loc 7 39 4 is_stmt 1 view .LVU122
  39:analogBreakoutBoard.cpp **** 			board2.Write(true);
 481              		.loc 7 39 16 is_stmt 0 view .LVU123
 482 007e 0021     		movs	r1, #0
 483 0080 CCE7     		b	.L31
 484              	.LVL37:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 21


 485              	.L22:
  42:analogBreakoutBoard.cpp **** 			board0.Write(true);
 486              		.loc 7 42 3 is_stmt 1 view .LVU124
  43:analogBreakoutBoard.cpp **** 			board1.Write(false);
 487              		.loc 7 43 4 view .LVU125
  43:analogBreakoutBoard.cpp **** 			board1.Write(false);
 488              		.loc 7 43 16 is_stmt 0 view .LVU126
 489 0082 0121     		movs	r1, #1
 490 0084 0348     		ldr	r0, .L33
 491              	.LVL38:
  43:analogBreakoutBoard.cpp **** 			board1.Write(false);
 492              		.loc 7 43 16 view .LVU127
 493 0086 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 494              	.LVL39:
  44:analogBreakoutBoard.cpp **** 			board2.Write(true);
 495              		.loc 7 44 4 is_stmt 1 view .LVU128
  44:analogBreakoutBoard.cpp **** 			board2.Write(true);
 496              		.loc 7 44 16 is_stmt 0 view .LVU129
 497 008a 0021     		movs	r1, #0
 498 008c C6E7     		b	.L31
 499              	.LVL40:
 500              	.L21:
  47:analogBreakoutBoard.cpp **** 			board0.Write(false);
 501              		.loc 7 47 3 is_stmt 1 view .LVU130
  48:analogBreakoutBoard.cpp **** 			board1.Write(true);
 502              		.loc 7 48 4 view .LVU131
  48:analogBreakoutBoard.cpp **** 			board1.Write(true);
 503              		.loc 7 48 16 is_stmt 0 view .LVU132
 504 008e 0021     		movs	r1, #0
 505 0090 C0E7     		b	.L30
 506              	.L34:
 507 0092 00BF     		.align	2
 508              	.L33:
 509 0094 00000000 		.word	.LANCHOR0
 510 0098 00000000 		.word	.LANCHOR1
 511 009c 00000000 		.word	.LANCHOR2
 512 00a0 18000000 		.word	.LANCHOR3+24
 513              		.cfi_endproc
 514              	.LFE4681:
 516              		.section	.text.startup.main,"ax",%progbits
 517              		.align	1
 518              		.p2align 2,,3
 519              		.global	main
 520              		.syntax unified
 521              		.thumb
 522              		.thumb_func
 523              		.fpu fpv5-d16
 525              	main:
 526              	.LFB4683:
  74:analogBreakoutBoard.cpp **** 
  75:analogBreakoutBoard.cpp **** int main(void)
  76:analogBreakoutBoard.cpp **** {
 527              		.loc 7 76 1 is_stmt 1 view -0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 24
 530              		@ frame_needed = 0, uses_anonymous_args = 0
  77:analogBreakoutBoard.cpp **** 	float sample_rate;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 22


 531              		.loc 7 77 2 view .LVU134
  78:analogBreakoutBoard.cpp **** 	hw.Configure();
 532              		.loc 7 78 2 view .LVU135
  76:analogBreakoutBoard.cpp **** 	float sample_rate;
 533              		.loc 7 76 1 is_stmt 0 view .LVU136
 534 0000 30B5     		push	{r4, r5, lr}
 535              		.cfi_def_cfa_offset 12
 536              		.cfi_offset 4, -12
 537              		.cfi_offset 5, -8
 538              		.cfi_offset 14, -4
 539              		.loc 7 78 14 view .LVU137
 540 0002 3948     		ldr	r0, .L38
  79:analogBreakoutBoard.cpp **** 	hw.Init();
  80:analogBreakoutBoard.cpp **** 	sample_rate = hw.AudioSampleRate();
  81:analogBreakoutBoard.cpp **** 
  82:analogBreakoutBoard.cpp **** 	AdcChannelConfig adcConfig;
  83:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
  84:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
  85:analogBreakoutBoard.cpp **** 	hw.adc.Start();
  86:analogBreakoutBoard.cpp **** 
  87:analogBreakoutBoard.cpp **** 	
  88:analogBreakoutBoard.cpp **** 	board0.Init(daisy::seed::D1, GPIO::Mode::OUTPUT);
 541              		.loc 7 88 13 view .LVU138
 542 0004 0024     		movs	r4, #0
 543              	.LBB201:
 544              	.LBB202:
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 545              		.loc 6 55 20 view .LVU139
 546 0006 4FF07C55 		mov	r5, #1056964608
 547              	.LBE202:
 548              	.LBE201:
  76:analogBreakoutBoard.cpp **** 	float sample_rate;
 549              		.loc 7 76 1 view .LVU140
 550 000a 2DED028B 		vpush.64	{d8}
 551              		.cfi_def_cfa_offset 20
 552              		.cfi_offset 80, -20
 553              		.cfi_offset 81, -16
 554 000e 89B0     		sub	sp, sp, #36
 555              		.cfi_def_cfa_offset 56
  78:analogBreakoutBoard.cpp **** 	hw.Init();
 556              		.loc 7 78 14 view .LVU141
 557 0010 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 558              	.LVL41:
  79:analogBreakoutBoard.cpp **** 	hw.Init();
 559              		.loc 7 79 2 is_stmt 1 view .LVU142
  79:analogBreakoutBoard.cpp **** 	hw.Init();
 560              		.loc 7 79 9 is_stmt 0 view .LVU143
 561 0014 0021     		movs	r1, #0
 562 0016 3448     		ldr	r0, .L38
 563 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 564              	.LVL42:
  80:analogBreakoutBoard.cpp **** 
 565              		.loc 7 80 2 is_stmt 1 view .LVU144
  80:analogBreakoutBoard.cpp **** 
 566              		.loc 7 80 34 is_stmt 0 view .LVU145
 567 001c 3248     		ldr	r0, .L38
 568 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 23


 569              	.LVL43:
  83:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 570              		.loc 7 83 22 view .LVU146
 571 0022 0F20     		movs	r0, #15
  80:analogBreakoutBoard.cpp **** 
 572              		.loc 7 80 34 view .LVU147
 573 0024 B0EE408A 		vmov.f32	s16, s0
 574              	.LVL44:
  82:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
 575              		.loc 7 82 2 is_stmt 1 view .LVU148
  83:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 576              		.loc 7 83 2 view .LVU149
  83:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 577              		.loc 7 83 22 is_stmt 0 view .LVU150
 578 0028 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 579              	.LVL45:
  83:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 580              		.loc 7 83 22 view .LVU151
 581 002c 0346     		mov	r3, r0	@ movhi
 582 002e 0222     		movs	r2, #2
 583 0030 03A8     		add	r0, sp, #12
 584 0032 ADF80830 		strh	r3, [sp, #8]	@ movhi
 585 0036 0299     		ldr	r1, [sp, #8]
 586 0038 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 587              	.LVL46:
  84:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 588              		.loc 7 84 2 is_stmt 1 view .LVU152
  84:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 589              		.loc 7 84 13 is_stmt 0 view .LVU153
 590 003c 0423     		movs	r3, #4
 591 003e 0122     		movs	r2, #1
 592 0040 03A9     		add	r1, sp, #12
 593 0042 2A48     		ldr	r0, .L38+4
 594 0044 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 595              	.LVL47:
  85:analogBreakoutBoard.cpp **** 
 596              		.loc 7 85 2 is_stmt 1 view .LVU154
  85:analogBreakoutBoard.cpp **** 
 597              		.loc 7 85 14 is_stmt 0 view .LVU155
 598 0048 2848     		ldr	r0, .L38+4
 599 004a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 600              	.LVL48:
 601              		.loc 7 88 2 is_stmt 1 view .LVU156
 602              		.loc 7 88 13 is_stmt 0 view .LVU157
 603 004e 2849     		ldr	r1, .L38+8
 604 0050 2346     		mov	r3, r4
 605 0052 0122     		movs	r2, #1
 606 0054 0968     		ldr	r1, [r1]
 607 0056 2748     		ldr	r0, .L38+12
 608 0058 0094     		str	r4, [sp]
 609 005a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 610              	.LVL49:
  89:analogBreakoutBoard.cpp **** 	board1.Init(daisy::seed::D2, GPIO::Mode::OUTPUT);
 611              		.loc 7 89 2 is_stmt 1 view .LVU158
 612              		.loc 7 89 13 is_stmt 0 view .LVU159
 613 005e 2649     		ldr	r1, .L38+16
 614 0060 2346     		mov	r3, r4
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 24


 615 0062 0122     		movs	r2, #1
 616 0064 0968     		ldr	r1, [r1]
 617 0066 2548     		ldr	r0, .L38+20
 618 0068 0094     		str	r4, [sp]
 619 006a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 620              	.LVL50:
  90:analogBreakoutBoard.cpp **** 	board2.Init(daisy::seed::D3, GPIO::Mode::OUTPUT);
 621              		.loc 7 90 2 is_stmt 1 view .LVU160
 622              		.loc 7 90 13 is_stmt 0 view .LVU161
 623 006e 2449     		ldr	r1, .L38+24
 624 0070 2346     		mov	r3, r4
 625 0072 0122     		movs	r2, #1
 626 0074 0968     		ldr	r1, [r1]
 627 0076 2348     		ldr	r0, .L38+28
 628 0078 0094     		str	r4, [sp]
 629 007a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 630              	.LVL51:
  91:analogBreakoutBoard.cpp **** 
  92:analogBreakoutBoard.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 631              		.loc 7 92 2 is_stmt 1 view .LVU162
 632              		.loc 7 92 22 is_stmt 0 view .LVU163
 633 007e 0421     		movs	r1, #4
 634 0080 1948     		ldr	r0, .L38
 635 0082 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 636              	.LVL52:
  93:analogBreakoutBoard.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 637              		.loc 7 93 2 is_stmt 1 view .LVU164
 638              		.loc 7 93 23 is_stmt 0 view .LVU165
 639 0086 0321     		movs	r1, #3
 640 0088 1748     		ldr	r0, .L38
 641 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 642              	.LVL53:
  94:analogBreakoutBoard.cpp **** 
  95:analogBreakoutBoard.cpp **** 	osc.Init(sample_rate);
 643              		.loc 7 95 2 is_stmt 1 view .LVU166
 644              	.LBB205:
 645              	.LBI201:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 646              		.loc 6 50 10 view .LVU167
 647              	.LBB203:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 648              		.loc 6 52 9 view .LVU168
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 649              		.loc 6 53 27 is_stmt 0 view .LVU169
 650 008e B7EE007A 		vmov.f32	s14, #1.0e+0
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 651              		.loc 6 52 20 view .LVU170
 652 0092 1D4C     		ldr	r4, .L38+32
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 653              		.loc 6 57 20 view .LVU171
 654 0094 0023     		movs	r3, #0
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 655              		.loc 6 54 20 view .LVU172
 656 0096 9FED1D0A 		vldr.32	s0, .L38+36
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 657              		.loc 6 53 27 view .LVU173
 658 009a C7EE087A 		vdiv.f32	s15, s14, s16
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 25


  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 659              		.loc 6 58 34 view .LVU174
 660 009e 2046     		mov	r0, r4
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 661              		.loc 6 57 20 view .LVU175
 662 00a0 A361     		str	r3, [r4, #24]	@ float
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 663              		.loc 6 52 20 view .LVU176
 664 00a2 84ED048A 		vstr.32	s16, [r4, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 665              		.loc 6 53 9 is_stmt 1 view .LVU177
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 666              		.loc 6 54 20 is_stmt 0 view .LVU178
 667 00a6 84ED020A 		vstr.32	s0, [r4, #8]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 668              		.loc 6 55 20 view .LVU179
 669 00aa 6560     		str	r5, [r4, #4]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 670              		.loc 6 56 20 view .LVU180
 671 00ac E560     		str	r5, [r4, #12]	@ float
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 672              		.loc 6 53 20 view .LVU181
 673 00ae C4ED057A 		vstr.32	s15, [r4, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 674              		.loc 6 54 9 is_stmt 1 view .LVU182
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 675              		.loc 6 55 9 view .LVU183
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 676              		.loc 6 56 9 view .LVU184
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 677              		.loc 6 57 9 view .LVU185
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 678              		.loc 6 58 9 view .LVU186
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 679              		.loc 6 58 34 is_stmt 0 view .LVU187
 680 00b2 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 681              	.LVL54:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 682              		.loc 6 61 20 view .LVU188
 683 00b6 40F20112 		movw	r2, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 684              		.loc 6 58 34 view .LVU189
 685 00ba F0EE407A 		vmov.f32	s15, s0
 686              	.LBE203:
 687              	.LBE205:
 688              	.LBB206:
 689              	.LBB207:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 26


  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 690              		.loc 6 81 19 view .LVU190
 691 00be 0223     		movs	r3, #2
 692              	.LBE207:
 693              	.LBE206:
 694              	.LBB209:
 695              	.LBB210:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 696              		.loc 6 69 20 view .LVU191
 697 00c0 9FED130A 		vldr.32	s0, .L38+40
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 698              		.loc 6 70 34 view .LVU192
 699 00c4 2046     		mov	r0, r4
 700              	.LBE210:
 701              	.LBE209:
 702              	.LBB213:
 703              	.LBB204:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 704              		.loc 6 61 20 view .LVU193
 705 00c6 2285     		strh	r2, [r4, #40]	@ movhi
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 706              		.loc 6 58 20 view .LVU194
 707 00c8 C4ED077A 		vstr.32	s15, [r4, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 708              		.loc 6 59 9 is_stmt 1 view .LVU195
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 709              		.loc 6 60 9 view .LVU196
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 710              		.loc 6 61 9 view .LVU197
 711              	.LVL55:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 712              		.loc 6 61 9 is_stmt 0 view .LVU198
 713              	.LBE204:
 714              	.LBE213:
  96:analogBreakoutBoard.cpp **** 	osc.SetWaveform(osc.WAVE_SAW);
 715              		.loc 7 96 2 is_stmt 1 view .LVU199
 716              	.LBB214:
 717              	.LBI206:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 718              		.loc 6 79 17 view .LVU200
 719              	.LBB208:
 720              		.loc 6 81 9 view .LVU201
 721              		.loc 6 81 19 is_stmt 0 view .LVU202
 722 00cc 2370     		strb	r3, [r4]
 723              	.LVL56:
 724              		.loc 6 81 19 view .LVU203
 725              	.LBE208:
 726              	.LBE214:
  97:analogBreakoutBoard.cpp ****     osc.SetFreq(440);
 727              		.loc 7 97 5 is_stmt 1 view .LVU204
 728              	.LBB215:
 729              	.LBI209:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 730              		.loc 6 67 17 view .LVU205
 731              	.LBB211:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 732              		.loc 6 69 9 view .LVU206
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 27


  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 733              		.loc 6 69 20 is_stmt 0 view .LVU207
 734 00ce 84ED020A 		vstr.32	s0, [r4, #8]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 735              		.loc 6 70 9 is_stmt 1 view .LVU208
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 736              		.loc 6 70 34 is_stmt 0 view .LVU209
 737 00d2 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 738              	.LVL57:
 739              	.LBE211:
 740              	.LBE215:
  98:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
  99:analogBreakoutBoard.cpp **** 
 100:analogBreakoutBoard.cpp **** 	hw.StartAudio(AudioCallback);
 741              		.loc 7 100 15 view .LVU210
 742 00d6 0F49     		ldr	r1, .L38+44
 743 00d8 0348     		ldr	r0, .L38
 744              	.LBB216:
 745              	.LBB212:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 746              		.loc 6 70 20 view .LVU211
 747 00da 84ED070A 		vstr.32	s0, [r4, #28]
 748              	.LVL58:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 749              		.loc 6 70 20 view .LVU212
 750              	.LBE212:
 751              	.LBE216:
  98:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
 752              		.loc 7 98 5 is_stmt 1 view .LVU213
 753              	.LBB217:
 754              	.LBI217:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 755              		.loc 6 76 17 view .LVU214
 756              	.LBB218:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 757              		.loc 6 76 41 view .LVU215
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 758              		.loc 6 76 46 is_stmt 0 view .LVU216
 759 00de 6560     		str	r5, [r4, #4]	@ float
 760              	.LVL59:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 761              		.loc 6 76 46 view .LVU217
 762              	.LBE218:
 763              	.LBE217:
 764              		.loc 7 100 2 is_stmt 1 view .LVU218
 765              		.loc 7 100 15 is_stmt 0 view .LVU219
 766 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 767              	.LVL60:
 768              	.L36:
 101:analogBreakoutBoard.cpp **** 	while(1) {}
 769              		.loc 7 101 2 is_stmt 1 discriminator 1 view .LVU220
 770              		.loc 7 101 2 discriminator 1 view .LVU221
 771              		.loc 7 101 2 discriminator 1 view .LVU222
 772              		.loc 7 101 2 discriminator 1 view .LVU223
 773 00e4 FEE7     		b	.L36
 774              	.L39:
 775 00e6 00BF     		.align	2
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 28


 776              	.L38:
 777 00e8 00000000 		.word	.LANCHOR3
 778 00ec 18000000 		.word	.LANCHOR3+24
 779 00f0 00000000 		.word	.LANCHOR5
 780 00f4 00000000 		.word	.LANCHOR0
 781 00f8 00000000 		.word	.LANCHOR6
 782 00fc 00000000 		.word	.LANCHOR1
 783 0100 00000000 		.word	.LANCHOR7
 784 0104 00000000 		.word	.LANCHOR2
 785 0108 00000000 		.word	.LANCHOR4
 786 010c 0000C842 		.word	1120403456
 787 0110 0000DC43 		.word	1138491392
 788 0114 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 789              		.cfi_endproc
 790              	.LFE4683:
 792              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 793              		.align	1
 794              		.p2align 2,,3
 795              		.syntax unified
 796              		.thumb
 797              		.thumb_func
 798              		.fpu fpv5-d16
 800              	_GLOBAL__sub_I_hw:
 801              	.LFB5246:
 102:analogBreakoutBoard.cpp **** }
 802              		.loc 7 102 1 view -0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              	.LBB266:
 807              	.LBI266:
 808              		.loc 7 102 1 view .LVU225
 809              	.LVL61:
 810              	.LBB267:
 811              	.LBB268:
 812              	.LBI268:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 813              		.loc 1 21 5 view .LVU226
 814              	.LBB269:
 815              	.LBB270:
 816              	.LBI270:
 817              		.file 9 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 29


  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 30


  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 31


 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 818              		.loc 9 166 5 view .LVU227
 819              	.LBE270:
 820              	.LBE269:
 821              	.LBE268:
 822              	.LBE267:
 823              	.LBE266:
 824              		.loc 7 102 1 is_stmt 0 view .LVU228
 825 0000 10B5     		push	{r4, lr}
 826              		.cfi_def_cfa_offset 8
 827              		.cfi_offset 4, -8
 828              		.cfi_offset 14, -4
 829              	.LBB332:
 830              	.LBB331:
 831              	.LBB291:
 832              	.LBB289:
 833              	.LBB275:
 834              	.LBB271:
 835              	.LBB272:
 836              		.loc 9 166 34 view .LVU229
 837 0002 1048     		ldr	r0, .L42
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 32


 838 0004 0024     		movs	r4, #0
 839              	.LBE272:
 840              	.LBE271:
 841              	.LBE275:
 842              	.LBE289:
 843              	.LBE291:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 844              		.loc 7 7 11 view .LVU230
 845 0006 104A     		ldr	r2, .L42+4
 846 0008 1049     		ldr	r1, .L42+8
 847              	.LBB292:
 848              	.LBB290:
 849              	.LBB276:
 850              	.LBB274:
 851              	.LBB273:
 852              		.loc 9 166 34 view .LVU231
 853 000a 0460     		str	r4, [r0]
 854              	.LVL62:
 855              		.loc 9 166 34 view .LVU232
 856              	.LBE273:
 857              	.LBE274:
 858              	.LBE276:
 859              	.LBB277:
 860              	.LBI277:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 861              		.loc 5 95 5 is_stmt 1 view .LVU233
 862              	.LBB278:
 863              	.LBB279:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 864              		.loc 5 95 35 is_stmt 0 view .LVU234
 865 000c 4461     		str	r4, [r0, #20]
 866              	.LVL63:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 867              		.loc 5 95 35 view .LVU235
 868              	.LBE279:
 869              	.LBE278:
 870              	.LBE277:
 871              	.LBB280:
 872              	.LBI280:
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 873              		.loc 4 109 5 is_stmt 1 view .LVU236
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 874              		.loc 4 109 5 is_stmt 0 view .LVU237
 875              	.LBE280:
 876              	.LBB281:
 877              	.LBI281:
 878              		.file 10 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 33


  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 34


  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 879              		.loc 10 84 5 is_stmt 1 view .LVU238
 880              	.LBB282:
 881              	.LBB283:
 882              		.loc 10 84 33 is_stmt 0 view .LVU239
 883 000e 0462     		str	r4, [r0, #32]
 884              	.LVL64:
 885              		.loc 10 84 33 view .LVU240
 886              	.LBE283:
 887              	.LBE282:
 888              	.LBE281:
 889              	.LBB284:
 890              	.LBI284:
  40:../../libDaisy//src/hid/usb.h **** 
 891              		.loc 3 40 5 is_stmt 1 view .LVU241
  40:../../libDaisy//src/hid/usb.h **** 
 892              		.loc 3 40 5 is_stmt 0 view .LVU242
 893              	.LBE284:
 894              	.LBB285:
 895              	.LBI285:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 896              		.loc 2 96 5 is_stmt 1 view .LVU243
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 897              		.loc 2 96 5 is_stmt 0 view .LVU244
 898              	.LBE285:
 899              	.LBB286:
 900              	.LBI286:
 901              		.file 11 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 35


  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 36


  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 902              		.loc 11 108 5 is_stmt 1 view .LVU245
 903              	.LBB287:
 904              	.LBB288:
 905              		.loc 11 108 33 is_stmt 0 view .LVU246
 906 0010 C463     		str	r4, [r0, #60]
 907              	.LVL65:
 908              		.loc 11 108 33 view .LVU247
 909              	.LBE288:
 910              	.LBE287:
 911              	.LBE286:
 912              	.LBE290:
 913              	.LBE292:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 914              		.loc 7 7 11 view .LVU248
 915 0012 FFF7FEFF 		bl	__aeabi_atexit
 916              	.LVL66:
 917              	.LBB293:
 918              	.LBI293:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 37


 919              		.loc 6 23 5 is_stmt 1 view .LVU249
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 920              		.loc 6 23 5 is_stmt 0 view .LVU250
 921              	.LBE293:
   8:analogBreakoutBoard.cpp **** GPIO board0;
 922              		.loc 7 8 19 view .LVU251
 923 0016 0C4A     		ldr	r2, .L42+4
 924 0018 0D49     		ldr	r1, .L42+12
 925 001a 0E48     		ldr	r0, .L42+16
 926 001c FFF7FEFF 		bl	__aeabi_atexit
 927              	.LVL67:
 928              	.LBB294:
 929              	.LBI294:
 930              		.file 12 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 38


  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 931              		.loc 12 74 5 is_stmt 1 view .LVU252
 932              	.LBB295:
 933              	.LBB296:
 934              	.LBI296:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 935              		.loc 12 68 9 view .LVU253
 936              	.LBB297:
 937              	.LBB298:
 938              	.LBB299:
 939              	.LBI299:
 940              		.file 13 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 39


  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 40


  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 41


 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 42


 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 43


 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 941              		.loc 13 272 15 view .LVU254
 942              		.loc 13 272 15 is_stmt 0 view .LVU255
 943              	.LBE299:
 944              	.LBE298:
 945              	.LBE297:
 946              	.LBE296:
 947              		.loc 12 74 12 view .LVU256
 948 0020 0D49     		ldr	r1, .L42+20
 949 0022 4FF60B70 		movw	r0, #65291
 950              	.LBE295:
 951              	.LBE294:
 952              	.LBB308:
 953              	.LBB309:
 954 0026 0D4A     		ldr	r2, .L42+24
 955              	.LBE309:
 956              	.LBE308:
 957              	.LBB319:
 958              	.LBB320:
 959 0028 0D4B     		ldr	r3, .L42+28
 960              	.LBE320:
 961              	.LBE319:
 962              	.LBB326:
 963              	.LBB306:
 964              	.LBB304:
 965              	.LBB302:
 966              	.LBB300:
  69:../../libDaisy//src/per/gpio.h ****         {
 967              		.loc 12 69 73 view .LVU257
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 44


 968 002a CC60     		str	r4, [r1, #12]
 969              	.LVL68:
  69:../../libDaisy//src/per/gpio.h ****         {
 970              		.loc 12 69 73 view .LVU258
 971              	.LBE300:
 972              	.LBE302:
 973              	.LBE304:
 974              	.LBE306:
 975              	.LBE326:
 976              	.LBB327:
 977              	.LBI308:
 978              		.loc 12 74 5 is_stmt 1 view .LVU259
 979              	.LBB317:
 980              	.LBB310:
 981              	.LBI310:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 982              		.loc 12 68 9 view .LVU260
 983              	.LBB311:
 984              	.LBB312:
 985              	.LBB313:
 986              	.LBI313:
 987              		.loc 13 272 15 view .LVU261
 988              		.loc 13 272 15 is_stmt 0 view .LVU262
 989              	.LBE313:
 990              	.LBE312:
 991              	.LBE311:
 992              	.LBE310:
 993              	.LBE317:
 994              	.LBE327:
 995              	.LBB328:
 996              	.LBB307:
 997              		.loc 12 74 12 view .LVU263
 998 002c 0860     		str	r0, [r1]
 999              	.LBB305:
 1000              	.LBB303:
 1001              	.LBB301:
  69:../../libDaisy//src/per/gpio.h ****         {
 1002              		.loc 12 69 73 view .LVU264
 1003 002e C1E90144 		strd	r4, r4, [r1, #4]
 1004              	.LBE301:
 1005              	.LBE303:
 1006              	.LBE305:
 1007              	.LBE307:
 1008              	.LBE328:
 1009              	.LBB329:
 1010              	.LBB318:
 1011              	.LBB316:
 1012              	.LBB315:
 1013              	.LBB314:
 1014 0032 C2E90004 		strd	r0, r4, [r2]
 1015 0036 C2E90244 		strd	r4, r4, [r2, #8]
 1016              	.LVL69:
  69:../../libDaisy//src/per/gpio.h ****         {
 1017              		.loc 12 69 73 view .LVU265
 1018              	.LBE314:
 1019              	.LBE315:
 1020              	.LBE316:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 45


 1021              	.LBE318:
 1022              	.LBE329:
 1023              	.LBB330:
 1024              	.LBI319:
 1025              		.loc 12 74 5 is_stmt 1 view .LVU266
 1026              	.LBB325:
 1027              	.LBB321:
 1028              	.LBI321:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1029              		.loc 12 68 9 view .LVU267
 1030              	.LBB322:
 1031              	.LBB323:
 1032              	.LBB324:
 1033              	.LBI324:
 1034              		.loc 13 272 15 view .LVU268
 1035              		.loc 13 272 15 is_stmt 0 view .LVU269
 1036              	.LBE324:
  69:../../libDaisy//src/per/gpio.h ****         {
 1037              		.loc 12 69 73 view .LVU270
 1038 003a C3E90004 		strd	r0, r4, [r3]
 1039 003e C3E90244 		strd	r4, r4, [r3, #8]
 1040              	.LVL70:
  69:../../libDaisy//src/per/gpio.h ****         {
 1041              		.loc 12 69 73 view .LVU271
 1042              	.LBE323:
 1043              	.LBE322:
 1044              	.LBE321:
 1045              	.LBE325:
 1046              	.LBE330:
 1047              	.LBE331:
 1048              	.LBE332:
 1049              		.loc 7 102 1 view .LVU272
 1050 0042 10BD     		pop	{r4, pc}
 1051              	.L43:
 1052              		.align	2
 1053              	.L42:
 1054 0044 00000000 		.word	.LANCHOR3
 1055 0048 00000000 		.word	__dso_handle
 1056 004c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 1057 0050 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 1058 0054 00000000 		.word	.LANCHOR4
 1059 0058 00000000 		.word	.LANCHOR0
 1060 005c 00000000 		.word	.LANCHOR1
 1061 0060 00000000 		.word	.LANCHOR2
 1062              		.cfi_endproc
 1063              	.LFE5246:
 1065              		.section	.init_array,"aw",%init_array
 1066              		.align	2
 1067 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1068              		.global	board2
 1069              		.global	board1
 1070              		.global	board0
 1071              		.global	hw
 1072              		.section	.bss._ZL3osc,"aw",%nobits
 1073              		.align	2
 1074              		.set	.LANCHOR4,. + 0
 1077              	_ZL3osc:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 46


 1078 0000 00000000 		.space	44
 1078      00000000 
 1078      00000000 
 1078      00000000 
 1078      00000000 
 1079              		.section	.bss.board0,"aw",%nobits
 1080              		.align	2
 1081              		.set	.LANCHOR0,. + 0
 1084              	board0:
 1085 0000 00000000 		.space	20
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1086              		.section	.bss.board1,"aw",%nobits
 1087              		.align	2
 1088              		.set	.LANCHOR1,. + 0
 1091              	board1:
 1092 0000 00000000 		.space	20
 1092      00000000 
 1092      00000000 
 1092      00000000 
 1092      00000000 
 1093              		.section	.bss.board2,"aw",%nobits
 1094              		.align	2
 1095              		.set	.LANCHOR2,. + 0
 1098              	board2:
 1099 0000 00000000 		.space	20
 1099      00000000 
 1099      00000000 
 1099      00000000 
 1099      00000000 
 1100              		.section	.bss.hw,"aw",%nobits
 1101              		.align	2
 1102              		.set	.LANCHOR3,. + 0
 1105              	hw:
 1106 0000 00000000 		.space	64
 1106      00000000 
 1106      00000000 
 1106      00000000 
 1106      00000000 
 1107              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 1108              		.align	2
 1109              		.set	.LANCHOR5,. + 0
 1112              	_ZN5daisy4seedL2D1E:
 1113 0000 02       		.byte	2
 1114 0001 0B       		.byte	11
 1115              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 1116              		.align	2
 1117              		.set	.LANCHOR6,. + 0
 1120              	_ZN5daisy4seedL2D2E:
 1121 0000 02       		.byte	2
 1122 0001 0A       		.byte	10
 1123              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 1124              		.align	2
 1125              		.set	.LANCHOR7,. + 0
 1128              	_ZN5daisy4seedL2D3E:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 47


 1129 0000 02       		.byte	2
 1130 0001 09       		.byte	9
 1131              		.text
 1132              	.Letext0:
 1133              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1134              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1135              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1136              		.file 17 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1137              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1138              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 1139              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1140              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1141              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1142              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1143              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1144              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1145              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1146              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1147              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1148              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1149              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1150              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1151              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1152              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1153              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 1154              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1155              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1156              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1157              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1158              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1159              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1160              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1161              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1162              		.file 43 "../../libDaisy//src/per/tim.h"
 1163              		.file 44 "../../libDaisy//src/util/wav_format.h"
 1164              		.file 45 "../../libDaisy//src/dev/max11300.h"
 1165              		.file 46 "../../libDaisy//src/dev/sdram.h"
 1166              		.file 47 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 1167              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1168              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1169              		.file 50 "../../DaisySP//Source/Control/adenv.h"
 1170              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1171              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1172              		.file 53 "../../libDaisy//src/dev/sr_595.h"
 1173              		.file 54 "<built-in>"
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 analogBreakoutBoard.cpp
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:67     .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:92     .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:100    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:309    .text._Z13AudioCallbackPKPKfPPfj:00000080 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:320    .text._Z17getBoardKnobValuei:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:328    .text._Z17getBoardKnobValuei:00000000 _Z17getBoardKnobValuei
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:345    .text._Z17getBoardKnobValuei:0000000a $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:353    .text._Z17getBoardKnobValuei:00000012 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:509    .text._Z17getBoardKnobValuei:00000094 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:517    .text.startup.main:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:525    .text.startup.main:00000000 main
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:777    .text.startup.main:000000e8 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:793    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:800    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1054   .text.startup._GLOBAL__sub_I_hw:00000044 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1066   .init_array:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1098   .bss.board2:00000000 board2
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1091   .bss.board1:00000000 board1
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1084   .bss.board0:00000000 board0
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1105   .bss.hw:00000000 hw
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1073   .bss._ZL3osc:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1077   .bss._ZL3osc:00000000 _ZL3osc
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1080   .bss.board0:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1087   .bss.board1:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1094   .bss.board2:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1101   .bss.hw:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1108   .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1112   .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1116   .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1120   .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1124   .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s:1128   .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO5WriteEb
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccqXz5gm.s 			page 49


_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
