ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"analogBreakoutBoard.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../libDaisy//src/daisy_seed.h"
   1:../../libDaisy//src/daisy_seed.h **** #pragma once
   2:../../libDaisy//src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../libDaisy//src/daisy_seed.h **** #define DSY_SEED_H
   4:../../libDaisy//src/daisy_seed.h **** 
   5:../../libDaisy//src/daisy_seed.h **** #include "daisy.h"
   6:../../libDaisy//src/daisy_seed.h **** 
   7:../../libDaisy//src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../libDaisy//src/daisy_seed.h **** //#define SEED_REV2
   9:../../libDaisy//src/daisy_seed.h **** 
  10:../../libDaisy//src/daisy_seed.h **** namespace daisy
  11:../../libDaisy//src/daisy_seed.h **** {
  12:../../libDaisy//src/daisy_seed.h **** /**
  13:../../libDaisy//src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../libDaisy//src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../libDaisy//src/daisy_seed.h **** 
  16:../../libDaisy//src/daisy_seed.h ****    @ingroup boards
  17:../../libDaisy//src/daisy_seed.h **** */
  18:../../libDaisy//src/daisy_seed.h **** class DaisySeed
  19:../../libDaisy//src/daisy_seed.h **** {
  20:../../libDaisy//src/daisy_seed.h ****   public:
  21:../../libDaisy//src/daisy_seed.h ****     DaisySeed() {}
  22:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB162:
  36              	.LBI162:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 2


  37              		.file 2 "../../libDaisy//src/sys/system.h"
   1:../../libDaisy//src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../libDaisy//src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../libDaisy//src/sys/system.h **** 
   4:../../libDaisy//src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../libDaisy//src/sys/system.h **** 
   6:../../libDaisy//src/sys/system.h **** #include <cstdint>
   7:../../libDaisy//src/sys/system.h **** #include "per/tim.h"
   8:../../libDaisy//src/sys/system.h **** 
   9:../../libDaisy//src/sys/system.h **** namespace daisy
  10:../../libDaisy//src/sys/system.h **** {
  11:../../libDaisy//src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../libDaisy//src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../libDaisy//src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../libDaisy//src/sys/system.h ****  **
  15:../../libDaisy//src/sys/system.h ****  ** @author shensley
  16:../../libDaisy//src/sys/system.h ****  ** @ingroup system
  17:../../libDaisy//src/sys/system.h ****  */
  18:../../libDaisy//src/sys/system.h **** class System
  19:../../libDaisy//src/sys/system.h **** {
  20:../../libDaisy//src/sys/system.h ****   public:
  21:../../libDaisy//src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../libDaisy//src/sys/system.h ****     struct Config
  23:../../libDaisy//src/sys/system.h ****     {
  24:../../libDaisy//src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../libDaisy//src/sys/system.h ****         enum class SysClkFreq
  26:../../libDaisy//src/sys/system.h ****         {
  27:../../libDaisy//src/sys/system.h ****             FREQ_400MHZ,
  28:../../libDaisy//src/sys/system.h ****             FREQ_480MHZ,
  29:../../libDaisy//src/sys/system.h ****         };
  30:../../libDaisy//src/sys/system.h **** 
  31:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  34:../../libDaisy//src/sys/system.h ****          ** */
  35:../../libDaisy//src/sys/system.h ****         void Defaults()
  36:../../libDaisy//src/sys/system.h ****         {
  37:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  39:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  40:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  41:../../libDaisy//src/sys/system.h ****         }
  42:../../libDaisy//src/sys/system.h **** 
  43:../../libDaisy//src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../libDaisy//src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../libDaisy//src/sys/system.h ****          ** Cache Enabled
  46:../../libDaisy//src/sys/system.h ****          ** */
  47:../../libDaisy//src/sys/system.h ****         void Boost()
  48:../../libDaisy//src/sys/system.h ****         {
  49:../../libDaisy//src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../libDaisy//src/sys/system.h ****             use_dcache  = true;
  51:../../libDaisy//src/sys/system.h ****             use_icache  = true;
  52:../../libDaisy//src/sys/system.h ****             skip_clocks = false;
  53:../../libDaisy//src/sys/system.h ****         }
  54:../../libDaisy//src/sys/system.h **** 
  55:../../libDaisy//src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../libDaisy//src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 3


  57:../../libDaisy//src/sys/system.h ****         bool       use_icache;
  58:../../libDaisy//src/sys/system.h ****         bool       skip_clocks;
  59:../../libDaisy//src/sys/system.h ****     };
  60:../../libDaisy//src/sys/system.h **** 
  61:../../libDaisy//src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../libDaisy//src/sys/system.h ****     enum MemoryRegion
  63:../../libDaisy//src/sys/system.h ****     {
  64:../../libDaisy//src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../libDaisy//src/sys/system.h ****         ITCMRAM,
  66:../../libDaisy//src/sys/system.h ****         DTCMRAM,
  67:../../libDaisy//src/sys/system.h ****         SRAM_D1,
  68:../../libDaisy//src/sys/system.h ****         SRAM_D2,
  69:../../libDaisy//src/sys/system.h ****         SRAM_D3,
  70:../../libDaisy//src/sys/system.h ****         SDRAM,
  71:../../libDaisy//src/sys/system.h ****         QSPI,
  72:../../libDaisy//src/sys/system.h ****         INVALID_ADDRESS,
  73:../../libDaisy//src/sys/system.h ****     };
  74:../../libDaisy//src/sys/system.h **** 
  75:../../libDaisy//src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../libDaisy//src/sys/system.h ****     struct BootInfo
  77:../../libDaisy//src/sys/system.h ****     {
  78:../../libDaisy//src/sys/system.h ****         enum class Type : uint32_t
  79:../../libDaisy//src/sys/system.h ****         {
  80:../../libDaisy//src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../libDaisy//src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../libDaisy//src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../libDaisy//src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../libDaisy//src/sys/system.h ****         } status;
  85:../../libDaisy//src/sys/system.h ****         uint32_t data;
  86:../../libDaisy//src/sys/system.h ****         enum class Version : uint32_t
  87:../../libDaisy//src/sys/system.h ****         {
  88:../../libDaisy//src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../libDaisy//src/sys/system.h ****             NONE,        // No bootloader present
  90:../../libDaisy//src/sys/system.h ****             v6_0,        // v6.0
  91:../../libDaisy//src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../libDaisy//src/sys/system.h ****             LAST
  93:../../libDaisy//src/sys/system.h ****         } version;
  94:../../libDaisy//src/sys/system.h ****     };
  95:../../libDaisy//src/sys/system.h **** 
  96:../../libDaisy//src/sys/system.h ****     System() {}
  97:../../libDaisy//src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE162:
  41              	.LBB163:
  42              	.LBI163:
  43              		.file 3 "../../libDaisy//src/hid/usb.h"
   1:../../libDaisy//src/hid/usb.h **** #pragma once
   2:../../libDaisy//src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../libDaisy//src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../libDaisy//src/hid/usb.h **** #include <stdint.h>
   5:../../libDaisy//src/hid/usb.h **** #include <stdlib.h>
   6:../../libDaisy//src/hid/usb.h **** 
   7:../../libDaisy//src/hid/usb.h **** namespace daisy
   8:../../libDaisy//src/hid/usb.h **** /** @addtogroup human_interface
   9:../../libDaisy//src/hid/usb.h ****     @{
  10:../../libDaisy//src/hid/usb.h **** */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 4


  11:../../libDaisy//src/hid/usb.h **** 
  12:../../libDaisy//src/hid/usb.h **** {
  13:../../libDaisy//src/hid/usb.h **** /** 
  14:../../libDaisy//src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../libDaisy//src/hid/usb.h ****     @author Stephen Hensley
  16:../../libDaisy//src/hid/usb.h ****     @date December 2019
  17:../../libDaisy//src/hid/usb.h **** */
  18:../../libDaisy//src/hid/usb.h **** class UsbHandle
  19:../../libDaisy//src/hid/usb.h **** {
  20:../../libDaisy//src/hid/usb.h ****   public:
  21:../../libDaisy//src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../libDaisy//src/hid/usb.h ****     enum class Result
  23:../../libDaisy//src/hid/usb.h ****     {
  24:../../libDaisy//src/hid/usb.h ****         OK,
  25:../../libDaisy//src/hid/usb.h ****         ERR,
  26:../../libDaisy//src/hid/usb.h ****     };
  27:../../libDaisy//src/hid/usb.h **** 
  28:../../libDaisy//src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../libDaisy//src/hid/usb.h ****     enum UsbPeriph
  30:../../libDaisy//src/hid/usb.h ****     {
  31:../../libDaisy//src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../libDaisy//src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../libDaisy//src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../libDaisy//src/hid/usb.h ****     };
  35:../../libDaisy//src/hid/usb.h **** 
  36:../../libDaisy//src/hid/usb.h **** 
  37:../../libDaisy//src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../libDaisy//src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../libDaisy//src/hid/usb.h **** 
  40:../../libDaisy//src/hid/usb.h ****     UsbHandle() {}
  41:../../libDaisy//src/hid/usb.h **** 
  42:../../libDaisy//src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE163:
  47              	.LBB164:
  48              	.LBI164:
  49              		.file 4 "../../libDaisy//src/per/adc.h"
   1:../../libDaisy//src/per/adc.h **** #pragma once
   2:../../libDaisy//src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../libDaisy//src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../libDaisy//src/per/adc.h **** #include <stdint.h>
   5:../../libDaisy//src/per/adc.h **** #include <stdlib.h>
   6:../../libDaisy//src/per/adc.h **** #include "daisy_core.h"
   7:../../libDaisy//src/per/adc.h **** #include "per/gpio.h"
   8:../../libDaisy//src/per/adc.h **** 
   9:../../libDaisy//src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../libDaisy//src/per/adc.h **** 
  11:../../libDaisy//src/per/adc.h **** namespace daisy
  12:../../libDaisy//src/per/adc.h **** {
  13:../../libDaisy//src/per/adc.h **** /** @addtogroup per_analog
  14:../../libDaisy//src/per/adc.h ****     @{
  15:../../libDaisy//src/per/adc.h **** */
  16:../../libDaisy//src/per/adc.h **** 
  17:../../libDaisy//src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../libDaisy//src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../libDaisy//src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 5


  20:../../libDaisy//src/per/adc.h **** */
  21:../../libDaisy//src/per/adc.h **** 
  22:../../libDaisy//src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../libDaisy//src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../libDaisy//src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../libDaisy//src/per/adc.h ****  *           one channel.
  26:../../libDaisy//src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../libDaisy//src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../libDaisy//src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../libDaisy//src/per/adc.h ****  *           inputs connected.
  30:../../libDaisy//src/per/adc.h **** */
  31:../../libDaisy//src/per/adc.h **** struct AdcChannelConfig
  32:../../libDaisy//src/per/adc.h **** {
  33:../../libDaisy//src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../libDaisy//src/per/adc.h ****     enum MuxPin
  35:../../libDaisy//src/per/adc.h ****     {
  36:../../libDaisy//src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../libDaisy//src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../libDaisy//src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../libDaisy//src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../libDaisy//src/per/adc.h ****     };
  41:../../libDaisy//src/per/adc.h **** 
  42:../../libDaisy//src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../libDaisy//src/per/adc.h ****     enum ConversionSpeed
  44:../../libDaisy//src/per/adc.h ****     {
  45:../../libDaisy//src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../libDaisy//src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../libDaisy//src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../libDaisy//src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../libDaisy//src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../libDaisy//src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../libDaisy//src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../libDaisy//src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../libDaisy//src/per/adc.h ****     };
  54:../../libDaisy//src/per/adc.h **** 
  55:../../libDaisy//src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../libDaisy//src/per/adc.h ****     \param pin Pin to init.
  57:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../libDaisy//src/per/adc.h ****      */
  59:../../libDaisy//src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../libDaisy//src/per/adc.h **** 
  61:../../libDaisy//src/per/adc.h ****     /** 
  62:../../libDaisy//src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../libDaisy//src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../libDaisy//src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../libDaisy//src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../libDaisy//src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../libDaisy//src/per/adc.h ****     \param adc_pin &
  68:../../libDaisy//src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../libDaisy//src/per/adc.h ****     \param mux_0 First mux pin
  70:../../libDaisy//src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../libDaisy//src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../libDaisy//src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../libDaisy//src/per/adc.h ****     */
  74:../../libDaisy//src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../libDaisy//src/per/adc.h ****                  size_t          mux_channels,
  76:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 6


  77:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../libDaisy//src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../libDaisy//src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../libDaisy//src/per/adc.h **** 
  81:../../libDaisy//src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../libDaisy//src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../libDaisy//src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../libDaisy//src/per/adc.h ****     ConversionSpeed speed_;
  85:../../libDaisy//src/per/adc.h **** };
  86:../../libDaisy//src/per/adc.h **** 
  87:../../libDaisy//src/per/adc.h **** /**
  88:../../libDaisy//src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../libDaisy//src/per/adc.h **** */
  90:../../libDaisy//src/per/adc.h **** class AdcHandle
  91:../../libDaisy//src/per/adc.h **** {
  92:../../libDaisy//src/per/adc.h ****   public:
  93:../../libDaisy//src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../libDaisy//src/per/adc.h ****     enum OverSampling
  95:../../libDaisy//src/per/adc.h ****     {
  96:../../libDaisy//src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../libDaisy//src/per/adc.h ****         OVS_4,    /**< & */
  98:../../libDaisy//src/per/adc.h ****         OVS_8,    /**< & */
  99:../../libDaisy//src/per/adc.h ****         OVS_16,   /**< & */
 100:../../libDaisy//src/per/adc.h ****         OVS_32,   /**< & */
 101:../../libDaisy//src/per/adc.h ****         OVS_64,   /**< & */
 102:../../libDaisy//src/per/adc.h ****         OVS_128,  /**< & */
 103:../../libDaisy//src/per/adc.h ****         OVS_256,  /**< & */
 104:../../libDaisy//src/per/adc.h ****         OVS_512,  /**< & */
 105:../../libDaisy//src/per/adc.h ****         OVS_1024, /**< & */
 106:../../libDaisy//src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../libDaisy//src/per/adc.h ****     };
 108:../../libDaisy//src/per/adc.h **** 
 109:../../libDaisy//src/per/adc.h ****     AdcHandle() {}
 110:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE164:
  53              	.LBB165:
  54              	.LBI165:
  55              		.file 5 "../../libDaisy//src/hid/audio.h"
   1:../../libDaisy//src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../libDaisy//src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../libDaisy//src/hid/audio.h **** 
   4:../../libDaisy//src/hid/audio.h **** #include "per/sai.h"
   5:../../libDaisy//src/hid/audio.h **** 
   6:../../libDaisy//src/hid/audio.h **** namespace daisy
   7:../../libDaisy//src/hid/audio.h **** {
   8:../../libDaisy//src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../libDaisy//src/hid/audio.h ****  *  @ingroup audio 
  10:../../libDaisy//src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../libDaisy//src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../libDaisy//src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../libDaisy//src/hid/audio.h ****  *            is already taken  care of.
  14:../../libDaisy//src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../libDaisy//src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../libDaisy//src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../libDaisy//src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 7


  18:../../libDaisy//src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../libDaisy//src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../libDaisy//src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../libDaisy//src/hid/audio.h ****  */
  22:../../libDaisy//src/hid/audio.h **** class AudioHandle
  23:../../libDaisy//src/hid/audio.h **** {
  24:../../libDaisy//src/hid/audio.h ****   public:
  25:../../libDaisy//src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../libDaisy//src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../libDaisy//src/hid/audio.h ****     struct Config
  28:../../libDaisy//src/hid/audio.h ****     {
  29:../../libDaisy//src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../libDaisy//src/hid/audio.h ****         size_t blocksize;
  31:../../libDaisy//src/hid/audio.h **** 
  32:../../libDaisy//src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../libDaisy//src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../libDaisy//src/hid/audio.h **** 
  35:../../libDaisy//src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../libDaisy//src/hid/audio.h ****         float postgain;
  37:../../libDaisy//src/hid/audio.h **** 
  38:../../libDaisy//src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../libDaisy//src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../libDaisy//src/hid/audio.h ****          */
  41:../../libDaisy//src/hid/audio.h ****         float output_compensation;
  42:../../libDaisy//src/hid/audio.h **** 
  43:../../libDaisy//src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../libDaisy//src/hid/audio.h ****         Config()
  45:../../libDaisy//src/hid/audio.h ****         : blocksize(48),
  46:../../libDaisy//src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../libDaisy//src/hid/audio.h ****           postgain(1.f),
  48:../../libDaisy//src/hid/audio.h ****           output_compensation(1.f)
  49:../../libDaisy//src/hid/audio.h ****         {
  50:../../libDaisy//src/hid/audio.h ****         }
  51:../../libDaisy//src/hid/audio.h ****     };
  52:../../libDaisy//src/hid/audio.h **** 
  53:../../libDaisy//src/hid/audio.h ****     enum class Result
  54:../../libDaisy//src/hid/audio.h ****     {
  55:../../libDaisy//src/hid/audio.h ****         OK,
  56:../../libDaisy//src/hid/audio.h ****         ERR,
  57:../../libDaisy//src/hid/audio.h ****     };
  58:../../libDaisy//src/hid/audio.h **** 
  59:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../libDaisy//src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../libDaisy//src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../libDaisy//src/hid/audio.h ****      */
  63:../../libDaisy//src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../libDaisy//src/hid/audio.h **** 
  65:../../libDaisy//src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../libDaisy//src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../libDaisy//src/hid/audio.h ****      */
  68:../../libDaisy//src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../libDaisy//src/hid/audio.h **** 
  70:../../libDaisy//src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../libDaisy//src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../libDaisy//src/hid/audio.h ****      */
  73:../../libDaisy//src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../libDaisy//src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 8


  75:../../libDaisy//src/hid/audio.h ****                                   size_t       size);
  76:../../libDaisy//src/hid/audio.h **** 
  77:../../libDaisy//src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../libDaisy//src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../libDaisy//src/hid/audio.h ****     */
  81:../../libDaisy//src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../libDaisy//src/hid/audio.h **** 
  83:../../libDaisy//src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../libDaisy//src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../libDaisy//src/hid/audio.h ****     */
  86:../../libDaisy//src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../libDaisy//src/hid/audio.h **** 
  88:../../libDaisy//src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../libDaisy//src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../libDaisy//src/hid/audio.h ****      */
  91:../../libDaisy//src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../libDaisy//src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../libDaisy//src/hid/audio.h ****                                               size_t                   size);
  94:../../libDaisy//src/hid/audio.h **** 
  95:../../libDaisy//src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE165:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp10OscillatorD2Ev,"axG",%progbits,_ZN7daisysp10OscillatorD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp10OscillatorD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp10OscillatorD2Ev:
  76              	.LVL1:
  77              	.LFB4240:
  78              		.file 6 "../../DaisySP//Source/Synthesis/oscillator.h"
   1:../../DaisySP//Source/Synthesis/oscillator.h **** /*
   2:../../DaisySP//Source/Synthesis/oscillator.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../DaisySP//Source/Synthesis/oscillator.h **** 
   4:../../DaisySP//Source/Synthesis/oscillator.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Synthesis/oscillator.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Synthesis/oscillator.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Synthesis/oscillator.h **** */
   8:../../DaisySP//Source/Synthesis/oscillator.h **** 
   9:../../DaisySP//Source/Synthesis/oscillator.h **** #pragma once
  10:../../DaisySP//Source/Synthesis/oscillator.h **** #ifndef DSY_OSCILLATOR_H
  11:../../DaisySP//Source/Synthesis/oscillator.h **** #define DSY_OSCILLATOR_H
  12:../../DaisySP//Source/Synthesis/oscillator.h **** #include <stdint.h>
  13:../../DaisySP//Source/Synthesis/oscillator.h **** #include "Utility/dsp.h"
  14:../../DaisySP//Source/Synthesis/oscillator.h **** #ifdef __cplusplus
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 9


  15:../../DaisySP//Source/Synthesis/oscillator.h **** 
  16:../../DaisySP//Source/Synthesis/oscillator.h **** namespace daisysp
  17:../../DaisySP//Source/Synthesis/oscillator.h **** {
  18:../../DaisySP//Source/Synthesis/oscillator.h **** /** Synthesis of several waveforms, including polyBLEP bandlimited waveforms.
  19:../../DaisySP//Source/Synthesis/oscillator.h **** */
  20:../../DaisySP//Source/Synthesis/oscillator.h **** class Oscillator
  21:../../DaisySP//Source/Synthesis/oscillator.h **** {
  22:../../DaisySP//Source/Synthesis/oscillator.h ****   public:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     Oscillator() {}
  24:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
  79              		.loc 6 24 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 6 24 20 is_stmt 0 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4240:
  89              		.weak	_ZN7daisysp10OscillatorD1Ev
  90              		.thumb_set _ZN7daisysp10OscillatorD1Ev,_ZN7daisysp10OscillatorD2Ev
  91              		.section	.text._Z17getBoardKnobValuei,"ax",%progbits
  92              		.align	1
  93              		.p2align 2,,3
  94              		.global	_Z17getBoardKnobValuei
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_Z17getBoardKnobValuei:
 101              	.LVL2:
 102              	.LFB4681:
 103              		.file 7 "analogBreakoutBoard.cpp"
   1:analogBreakoutBoard.cpp **** #include "daisy_seed.h"
   2:analogBreakoutBoard.cpp **** #include "daisysp.h"
   3:analogBreakoutBoard.cpp **** 
   4:analogBreakoutBoard.cpp **** using namespace daisy;
   5:analogBreakoutBoard.cpp **** using namespace daisysp;
   6:analogBreakoutBoard.cpp **** 
   7:analogBreakoutBoard.cpp **** DaisySeed hw;
   8:analogBreakoutBoard.cpp **** static Oscillator osc;
   9:analogBreakoutBoard.cpp **** GPIO board0;
  10:analogBreakoutBoard.cpp **** GPIO board1;
  11:analogBreakoutBoard.cpp **** GPIO board2;
  12:analogBreakoutBoard.cpp **** 
  13:analogBreakoutBoard.cpp **** // function to read the ADC value for the selected knob
  14:analogBreakoutBoard.cpp **** // knobPin is the number of the knob to read (0-7)
  15:analogBreakoutBoard.cpp **** float getBoardKnobValue(int knobPin)
  16:analogBreakoutBoard.cpp **** {
 104              		.loc 7 16 1 is_stmt 1 view -0
 105              		.cfi_startproc
 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
  17:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 108              		.loc 7 17 2 view .LVU13
 109              	.LBB166:
 110              		.loc 7 17 17 view .LVU14
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 10


 111              	.LBE166:
  16:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 112              		.loc 7 16 1 is_stmt 0 view .LVU15
 113 0000 38B5     		push	{r3, r4, r5, lr}
 114              		.cfi_def_cfa_offset 16
 115              		.cfi_offset 3, -16
 116              		.cfi_offset 4, -12
 117              		.cfi_offset 5, -8
 118              		.cfi_offset 14, -4
  16:analogBreakoutBoard.cpp **** 	for (int i=0; i<3; i++)
 119              		.loc 7 16 1 view .LVU16
 120 0002 0124     		movs	r4, #1
 121 0004 0546     		mov	r5, r0
 122 0006 621E     		subs	r2, r4, #1
 123              	.LVL3:
 124              	.LBB167:
  18:analogBreakoutBoard.cpp **** 	{
  19:analogBreakoutBoard.cpp **** 		if (knobPin & (1<<i))
 125              		.loc 7 19 3 is_stmt 1 view .LVU17
 126              		.loc 7 19 15 is_stmt 0 view .LVU18
 127 0008 45FA02F3 		asr	r3, r5, r2
 128              		.loc 7 19 3 view .LVU19
 129 000c 13F00101 		ands	r1, r3, #1
 130 0010 11D0     		beq	.L5
 131              	.LVL4:
 132              	.L20:
  20:analogBreakoutBoard.cpp **** 			switch (i)
 133              		.loc 7 20 4 is_stmt 1 view .LVU20
 134 0012 012A     		cmp	r2, #1
 135 0014 1CD0     		beq	.L6
 136              		.loc 7 20 4 is_stmt 0 view .LVU21
 137 0016 022A     		cmp	r2, #2
  21:analogBreakoutBoard.cpp **** 			{
  22:analogBreakoutBoard.cpp **** 			case 0:
  23:analogBreakoutBoard.cpp **** 				board0.Write(true);
 138              		.loc 7 23 17 view .LVU22
 139 0018 4FF00101 		mov	r1, #1
  20:analogBreakoutBoard.cpp **** 			switch (i)
 140              		.loc 7 20 4 view .LVU23
 141 001c 0FD0     		beq	.L12
 142              	.L19:
  24:analogBreakoutBoard.cpp **** 				break;
  25:analogBreakoutBoard.cpp **** 			case 1:
  26:analogBreakoutBoard.cpp **** 				board1.Write(true);
  27:analogBreakoutBoard.cpp **** 				break;
  28:analogBreakoutBoard.cpp **** 			case 2:
  29:analogBreakoutBoard.cpp **** 				board2.Write(true);
  30:analogBreakoutBoard.cpp **** 				break;
  31:analogBreakoutBoard.cpp **** 			}
  32:analogBreakoutBoard.cpp **** 		else
  33:analogBreakoutBoard.cpp **** 			switch (i)
  34:analogBreakoutBoard.cpp **** 			{
  35:analogBreakoutBoard.cpp **** 			case 0:
 143              		.loc 7 35 4 is_stmt 1 view .LVU24
  36:analogBreakoutBoard.cpp **** 				board0.Write(false);
 144              		.loc 7 36 5 view .LVU25
 145              		.loc 7 36 17 is_stmt 0 view .LVU26
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 11


 146 001e 1148     		ldr	r0, .L21
 147 0020 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 148              	.LVL5:
  37:analogBreakoutBoard.cpp **** 				break;
 149              		.loc 7 37 5 is_stmt 1 view .LVU27
  17:analogBreakoutBoard.cpp **** 	{
 150              		.loc 7 17 2 view .LVU28
  17:analogBreakoutBoard.cpp **** 	{
 151              		.loc 7 17 17 view .LVU29
 152 0024 032C     		cmp	r4, #3
 153 0026 0DD0     		beq	.L10
 154              	.LVL6:
 155              	.L14:
  17:analogBreakoutBoard.cpp **** 	{
 156              		.loc 7 17 17 is_stmt 0 view .LVU30
 157 0028 0134     		adds	r4, r4, #1
 158 002a 621E     		subs	r2, r4, #1
 159              	.LVL7:
  19:analogBreakoutBoard.cpp **** 			switch (i)
 160              		.loc 7 19 3 is_stmt 1 view .LVU31
  19:analogBreakoutBoard.cpp **** 			switch (i)
 161              		.loc 7 19 15 is_stmt 0 view .LVU32
 162 002c 45FA02F3 		asr	r3, r5, r2
  19:analogBreakoutBoard.cpp **** 			switch (i)
 163              		.loc 7 19 3 view .LVU33
 164 0030 13F00101 		ands	r1, r3, #1
 165 0034 EDD1     		bne	.L20
 166              	.L5:
  33:analogBreakoutBoard.cpp **** 			{
 167              		.loc 7 33 4 is_stmt 1 view .LVU34
 168 0036 012A     		cmp	r2, #1
 169 0038 0FD0     		beq	.L11
  33:analogBreakoutBoard.cpp **** 			{
 170              		.loc 7 33 4 is_stmt 0 view .LVU35
 171 003a 022A     		cmp	r2, #2
 172 003c EFD1     		bne	.L19
 173              	.L12:
  38:analogBreakoutBoard.cpp **** 			case 1:
  39:analogBreakoutBoard.cpp **** 				board1.Write(false);
  40:analogBreakoutBoard.cpp **** 				break;
  41:analogBreakoutBoard.cpp **** 			case 2:
 174              		.loc 7 41 4 is_stmt 1 view .LVU36
  42:analogBreakoutBoard.cpp **** 				board2.Write(false);
 175              		.loc 7 42 5 view .LVU37
 176              		.loc 7 42 17 is_stmt 0 view .LVU38
 177 003e 0A48     		ldr	r0, .L21+4
 178 0040 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 179              	.LVL8:
  43:analogBreakoutBoard.cpp **** 				break;
 180              		.loc 7 43 5 is_stmt 1 view .LVU39
 181              	.L10:
  17:analogBreakoutBoard.cpp **** 	{
 182              		.loc 7 17 2 view .LVU40
  17:analogBreakoutBoard.cpp **** 	{
 183              		.loc 7 17 17 view .LVU41
  17:analogBreakoutBoard.cpp **** 	{
 184              		.loc 7 17 17 is_stmt 0 view .LVU42
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 12


 185              	.LBE167:
  44:analogBreakoutBoard.cpp **** 			}
  45:analogBreakoutBoard.cpp **** 	}
  46:analogBreakoutBoard.cpp **** 		
  47:analogBreakoutBoard.cpp **** 	return hw.adc.GetFloat(0);
 186              		.loc 7 47 2 is_stmt 1 view .LVU43
 187              		.loc 7 47 24 is_stmt 0 view .LVU44
 188 0044 0021     		movs	r1, #0
 189 0046 0948     		ldr	r0, .L21+8
  48:analogBreakoutBoard.cpp **** }
 190              		.loc 7 48 1 view .LVU45
 191 0048 BDE83840 		pop	{r3, r4, r5, lr}
 192              		.cfi_remember_state
 193              		.cfi_restore 14
 194              		.cfi_restore 5
 195              		.cfi_restore 4
 196              		.cfi_restore 3
 197              		.cfi_def_cfa_offset 0
 198              	.LVL9:
  47:analogBreakoutBoard.cpp **** }
 199              		.loc 7 47 24 view .LVU46
 200 004c FFF7FEBF 		b	_ZNK5daisy9AdcHandle8GetFloatEh
 201              	.LVL10:
 202              	.L6:
 203              		.cfi_restore_state
 204              	.LBB168:
  25:analogBreakoutBoard.cpp **** 				board1.Write(true);
 205              		.loc 7 25 4 is_stmt 1 view .LVU47
  26:analogBreakoutBoard.cpp **** 				break;
 206              		.loc 7 26 5 view .LVU48
  26:analogBreakoutBoard.cpp **** 				break;
 207              		.loc 7 26 17 is_stmt 0 view .LVU49
 208 0050 1146     		mov	r1, r2
 209 0052 0748     		ldr	r0, .L21+12
 210 0054 FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 211              	.LVL11:
  27:analogBreakoutBoard.cpp **** 			case 2:
 212              		.loc 7 27 5 is_stmt 1 view .LVU50
 213 0058 E6E7     		b	.L14
 214              	.LVL12:
 215              	.L11:
  38:analogBreakoutBoard.cpp **** 				board1.Write(false);
 216              		.loc 7 38 4 view .LVU51
  39:analogBreakoutBoard.cpp **** 				break;
 217              		.loc 7 39 5 view .LVU52
  39:analogBreakoutBoard.cpp **** 				break;
 218              		.loc 7 39 17 is_stmt 0 view .LVU53
 219 005a 0548     		ldr	r0, .L21+12
 220 005c FFF7FEFF 		bl	_ZN5daisy4GPIO5WriteEb
 221              	.LVL13:
  40:analogBreakoutBoard.cpp **** 			case 2:
 222              		.loc 7 40 5 is_stmt 1 view .LVU54
 223 0060 E2E7     		b	.L14
 224              	.L22:
 225 0062 00BF     		.align	2
 226              	.L21:
 227 0064 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 13


 228 0068 00000000 		.word	.LANCHOR2
 229 006c 18000000 		.word	.LANCHOR3+24
 230 0070 00000000 		.word	.LANCHOR1
 231              	.LBE168:
 232              		.cfi_endproc
 233              	.LFE4681:
 235              		.section	.rodata._Z13AudioCallbackPKPKfPPfj.str1.4,"aMS",%progbits,1
 236              		.align	2
 237              	.LC0:
 238 0000 4D792046 		.ascii	"My Float: %c%d.%06d\000"
 238      6C6F6174 
 238      3A202563 
 238      25642E25 
 238      30366400 
 239              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 240              		.align	1
 241              		.p2align 2,,3
 242              		.global	_Z13AudioCallbackPKPKfPPfj
 243              		.syntax unified
 244              		.thumb
 245              		.thumb_func
 246              		.fpu fpv5-d16
 248              	_Z13AudioCallbackPKPKfPPfj:
 249              	.LVL14:
 250              	.LFB4682:
  49:analogBreakoutBoard.cpp **** 
  50:analogBreakoutBoard.cpp **** void AudioCallback(AudioHandle::InputBuffer in, AudioHandle::OutputBuffer out, size_t size)
  51:analogBreakoutBoard.cpp **** {
 251              		.loc 7 51 1 view -0
 252              		.cfi_startproc
 253              		@ args = 0, pretend = 0, frame = 0
 254              		@ frame_needed = 0, uses_anonymous_args = 0
  52:analogBreakoutBoard.cpp **** 	float sig;
 255              		.loc 7 52 2 view .LVU56
  53:analogBreakoutBoard.cpp **** 	for (size_t i = 0; i < size; i+=2)
 256              		.loc 7 53 2 view .LVU57
 257              	.LBB169:
 258              		.loc 7 53 23 view .LVU58
 259 0000 002A     		cmp	r2, #0
 260 0002 51D0     		beq	.L30
 261              	.LBE169:
  51:analogBreakoutBoard.cpp **** 	float sig;
 262              		.loc 7 51 1 is_stmt 0 view .LVU59
 263 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 264              		.cfi_def_cfa_offset 24
 265              		.cfi_offset 3, -24
 266              		.cfi_offset 4, -20
 267              		.cfi_offset 5, -16
 268              		.cfi_offset 6, -12
 269              		.cfi_offset 7, -8
 270              		.cfi_offset 14, -4
 271 0006 0D46     		mov	r5, r1
 272 0008 1746     		mov	r7, r2
 273              	.LBB199:
 274              		.loc 7 53 14 view .LVU60
 275 000a 0024     		movs	r4, #0
 276 000c 2A4E     		ldr	r6, .L33+8
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 14


 277              	.LBE199:
  51:analogBreakoutBoard.cpp **** 	float sig;
 278              		.loc 7 51 1 view .LVU61
 279 000e 2DED028B 		vpush.64	{d8}
 280              		.cfi_def_cfa_offset 32
 281              		.cfi_offset 80, -32
 282              		.cfi_offset 81, -28
 283              	.LVL15:
 284              	.L24:
 285              	.LBB200:
 286              	.LBB170:
  54:analogBreakoutBoard.cpp **** 	{
  55:analogBreakoutBoard.cpp **** 		float knobValue = getBoardKnobValue(0);
 287              		.loc 7 55 3 is_stmt 1 view .LVU62
 288              		.loc 7 55 38 is_stmt 0 view .LVU63
 289 0012 0020     		movs	r0, #0
  56:analogBreakoutBoard.cpp **** 		hw.PrintLine("My Float: " FLT_FMT(6), FLT_VAR(6, knobValue));
 290              		.loc 7 56 15 view .LVU64
 291 0014 DFED298A 		vldr.32	s17, .L33+12
  55:analogBreakoutBoard.cpp **** 		hw.PrintLine("My Float: " FLT_FMT(6), FLT_VAR(6, knobValue));
 292              		.loc 7 55 38 view .LVU65
 293 0018 FFF7FEFF 		bl	_Z17getBoardKnobValuei
 294              	.LVL16:
 295              	.LBB171:
 296              	.LBB172:
 297              		.file 8 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
   1:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // -*- C++ -*- C library enhancements header.
   2:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
   3:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Copyright (C) 2016-2020 Free Software Foundation, Inc.
   4:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** //
   5:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // software; you can redistribute it and/or modify it under the
   7:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // terms of the GNU General Public License as published by the
   8:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // any later version.
  10:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  11:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // This library is distributed in the hope that it will be useful,
  12:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // GNU General Public License for more details.
  15:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  16:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 3.1, as published by the Free Software Foundation.
  19:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  20:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // You should have received a copy of the GNU General Public License and
  21:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // <http://www.gnu.org/licenses/>.
  24:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  25:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** /** @file include/bits/std_abs.h
  26:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  This is an internal header file, included by other library headers.
  27:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  *  Do not attempt to use it directly. @headername{cmath, cstdlib}
  28:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****  */
  29:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  30:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef _GLIBCXX_BITS_STD_ABS_H
  31:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_BITS_STD_ABS_H
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 15


  32:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  33:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #pragma GCC system_header
  34:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  35:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include <bits/c++config.h>
  36:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  37:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #define _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  38:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #include_next <stdlib.h>
  39:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef __CORRECT_ISO_CPP_MATH_H_PROTO
  40:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** # include_next <math.h>
  41:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  42:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef _GLIBCXX_INCLUDE_NEXT_C_HEADERS
  43:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  44:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #undef abs
  45:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  46:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** extern "C++"
  47:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  48:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  49:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** {
  50:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  51:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  52:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   using ::abs;
  53:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  54:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
  55:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long
  56:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long __i) { return __builtin_labs(__i); }
  57:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  58:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  59:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifdef _GLIBCXX_USE_LONG_LONG
  60:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline long long
  61:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(long long __x) { return __builtin_llabs (__x); }
  62:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #endif
  63:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  64:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // _GLIBCXX_RESOLVE_LIB_DEFECTS
  65:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2192. Validity and return type of std::abs(0u) is unclear
  66:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2294. <cstdlib> should declare abs(double)
  67:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** // 2735. std::abs(short), std::abs(signed char) and others should return int
  68:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  69:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  70:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR double
  71:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(double __x)
  72:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabs(__x); }
  73:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h **** 
  74:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   inline _GLIBCXX_CONSTEXPR float
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   abs(float __x)
  76:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
 298              		.loc 8 76 31 view .LVU66
 299 001c B0EEC07A 		vabs.f32	s14, s0
 300              	.LBE172:
 301              	.LBE171:
 302              		.loc 7 56 15 view .LVU67
 303 0020 B4EEE80A 		vcmpe.f32	s0, s17
 304              	.LBB174:
 305              	.LBB175:
  23:../../libDaisy//src/daisy_seed.h **** 
  24:../../libDaisy//src/daisy_seed.h ****     /** This function used to provide a pre-initialization configuraiton 
  25:../../libDaisy//src/daisy_seed.h ****      *  it has since been deprecated, and does nothing.
  26:../../libDaisy//src/daisy_seed.h ****      */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 16


  27:../../libDaisy//src/daisy_seed.h ****     void Configure();
  28:../../libDaisy//src/daisy_seed.h **** 
  29:../../libDaisy//src/daisy_seed.h ****     /** 
  30:../../libDaisy//src/daisy_seed.h ****     Initializes the Daisy Seed and the following peripherals:
  31:../../libDaisy//src/daisy_seed.h ****     SDRAM, QSPI, 24-bit 48kHz Audio via AK4556, Internal USB,
  32:../../libDaisy//src/daisy_seed.h ****     as well as the built-in LED and Testpoint.
  33:../../libDaisy//src/daisy_seed.h **** 
  34:../../libDaisy//src/daisy_seed.h ****     ADCs, DACs, and other special peripherals (such as I2C, SPI, etc.)
  35:../../libDaisy//src/daisy_seed.h ****     can be initialized using their specific initializers within libdaisy
  36:../../libDaisy//src/daisy_seed.h ****     for a specific application.
  37:../../libDaisy//src/daisy_seed.h ****     */
  38:../../libDaisy//src/daisy_seed.h ****     void Init(bool boost = false);
  39:../../libDaisy//src/daisy_seed.h **** 
  40:../../libDaisy//src/daisy_seed.h ****     /** 
  41:../../libDaisy//src/daisy_seed.h ****     Deinitializes all peripherals automatically handled by `Init`.
  42:../../libDaisy//src/daisy_seed.h ****     */
  43:../../libDaisy//src/daisy_seed.h ****     void DeInit();
  44:../../libDaisy//src/daisy_seed.h **** 
  45:../../libDaisy//src/daisy_seed.h ****     /** 
  46:../../libDaisy//src/daisy_seed.h ****     Wait some ms before going on.
  47:../../libDaisy//src/daisy_seed.h ****     \param del Delay time in ms.
  48:../../libDaisy//src/daisy_seed.h ****     */
  49:../../libDaisy//src/daisy_seed.h ****     void DelayMs(size_t del);
  50:../../libDaisy//src/daisy_seed.h **** 
  51:../../libDaisy//src/daisy_seed.h ****     /** 
  52:../../libDaisy//src/daisy_seed.h ****     Returns the gpio_pin corresponding to the index 0-31.
  53:../../libDaisy//src/daisy_seed.h ****     For the given GPIO on the Daisy Seed (labeled 1-32 in docs).
  54:../../libDaisy//src/daisy_seed.h ****     */
  55:../../libDaisy//src/daisy_seed.h ****     static dsy_gpio_pin GetPin(uint8_t pin_idx);
  56:../../libDaisy//src/daisy_seed.h **** 
  57:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  58:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  59:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  60:../../libDaisy//src/daisy_seed.h ****     */
  61:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::InterleavingAudioCallback cb);
  62:../../libDaisy//src/daisy_seed.h **** 
  63:../../libDaisy//src/daisy_seed.h ****     /** Begins the audio for the seeds builtin audio.
  64:../../libDaisy//src/daisy_seed.h ****     the specified callback will get called whenever
  65:../../libDaisy//src/daisy_seed.h ****     new data is ready to be prepared.
  66:../../libDaisy//src/daisy_seed.h ****     This will use the newer non-interleaved callback.
  67:../../libDaisy//src/daisy_seed.h ****     */
  68:../../libDaisy//src/daisy_seed.h ****     void StartAudio(AudioHandle::AudioCallback cb);
  69:../../libDaisy//src/daisy_seed.h **** 
  70:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new interleaved callback
  71:../../libDaisy//src/daisy_seed.h ****      */
  72:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::InterleavingAudioCallback cb);
  73:../../libDaisy//src/daisy_seed.h **** 
  74:../../libDaisy//src/daisy_seed.h ****     /** Changes to a new multichannel callback
  75:../../libDaisy//src/daisy_seed.h ****      */
  76:../../libDaisy//src/daisy_seed.h ****     void ChangeAudioCallback(AudioHandle::AudioCallback cb);
  77:../../libDaisy//src/daisy_seed.h **** 
  78:../../libDaisy//src/daisy_seed.h ****     /** Stops the audio if it is running. */
  79:../../libDaisy//src/daisy_seed.h ****     void StopAudio();
  80:../../libDaisy//src/daisy_seed.h **** 
  81:../../libDaisy//src/daisy_seed.h ****     /** Updates the Audio Sample Rate, and reinitializes.
  82:../../libDaisy//src/daisy_seed.h ****      ** Audio must be stopped for this to work.
  83:../../libDaisy//src/daisy_seed.h ****      */
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 17


  84:../../libDaisy//src/daisy_seed.h ****     void SetAudioSampleRate(SaiHandle::Config::SampleRate samplerate);
  85:../../libDaisy//src/daisy_seed.h **** 
  86:../../libDaisy//src/daisy_seed.h ****     /** Returns the audio sample rate in Hz as a floating point number.
  87:../../libDaisy//src/daisy_seed.h ****      */
  88:../../libDaisy//src/daisy_seed.h ****     float AudioSampleRate();
  89:../../libDaisy//src/daisy_seed.h **** 
  90:../../libDaisy//src/daisy_seed.h ****     /** Sets the number of samples processed per channel by the audio callback.
  91:../../libDaisy//src/daisy_seed.h ****      */
  92:../../libDaisy//src/daisy_seed.h ****     void SetAudioBlockSize(size_t blocksize);
  93:../../libDaisy//src/daisy_seed.h **** 
  94:../../libDaisy//src/daisy_seed.h ****     /** Returns the number of samples per channel in a block of audio. */
  95:../../libDaisy//src/daisy_seed.h ****     size_t AudioBlockSize();
  96:../../libDaisy//src/daisy_seed.h **** 
  97:../../libDaisy//src/daisy_seed.h ****     /** Returns the rate in Hz that the Audio callback is called */
  98:../../libDaisy//src/daisy_seed.h ****     float AudioCallbackRate() const;
  99:../../libDaisy//src/daisy_seed.h **** 
 100:../../libDaisy//src/daisy_seed.h ****     /** Returns the SAI Handle for the Daisy Seed 
 101:../../libDaisy//src/daisy_seed.h ****      *  This can be useful when adding a secondary codec,
 102:../../libDaisy//src/daisy_seed.h ****      *  the result of this function can be passed to the audio reinit 
 103:../../libDaisy//src/daisy_seed.h ****      *  with an SAI2 configuration
 104:../../libDaisy//src/daisy_seed.h ****      */
 105:../../libDaisy//src/daisy_seed.h ****     const SaiHandle& AudioSaiHandle() const;
 106:../../libDaisy//src/daisy_seed.h **** 
 107:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the built in LED
 108:../../libDaisy//src/daisy_seed.h ****      */
 109:../../libDaisy//src/daisy_seed.h ****     void SetLed(bool state);
 110:../../libDaisy//src/daisy_seed.h **** 
 111:../../libDaisy//src/daisy_seed.h ****     /** Sets the state of the test point near pin 10
 112:../../libDaisy//src/daisy_seed.h ****      */
 113:../../libDaisy//src/daisy_seed.h ****     void SetTestPoint(bool state);
 114:../../libDaisy//src/daisy_seed.h **** 
 115:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message
 116:../../libDaisy//src/daisy_seed.h ****      */
 117:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 118:../../libDaisy//src/daisy_seed.h ****     static void Print(const char* format, VA... va)
 119:../../libDaisy//src/daisy_seed.h ****     {
 120:../../libDaisy//src/daisy_seed.h ****         Log::Print(format, va...);
 121:../../libDaisy//src/daisy_seed.h ****     }
 122:../../libDaisy//src/daisy_seed.h **** 
 123:../../libDaisy//src/daisy_seed.h ****     /** Print formatted debug log message with automatic line termination
 124:../../libDaisy//src/daisy_seed.h ****     */
 125:../../libDaisy//src/daisy_seed.h ****     template <typename... VA>
 126:../../libDaisy//src/daisy_seed.h ****     static void PrintLine(const char* format, VA... va)
 127:../../libDaisy//src/daisy_seed.h ****     {
 128:../../libDaisy//src/daisy_seed.h ****         Log::PrintLine(format, va...);
 306              		.loc 1 128 23 view .LVU68
 307 0024 2648     		ldr	r0, .L33+16
 308              	.LBE175:
 309              	.LBE174:
  55:analogBreakoutBoard.cpp **** 		hw.PrintLine("My Float: " FLT_FMT(6), FLT_VAR(6, knobValue));
 310              		.loc 7 55 38 view .LVU69
 311 0026 B0EE408A 		vmov.f32	s16, s0
 312              	.LVL17:
 313              		.loc 7 56 3 is_stmt 1 view .LVU70
 314              	.LBB178:
 315              	.LBI171:
  75:c:\program files\daisytoolchain\arm-none-eabi\include\c++\10.2.1\bits\std_abs.h ****   { return __builtin_fabsf(__x); }
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 18


 316              		.loc 8 75 3 view .LVU71
 317              	.LBB173:
 318              		.loc 8 76 5 view .LVU72
 319              		.loc 8 76 5 is_stmt 0 view .LVU73
 320              	.LBE173:
 321              	.LBE178:
 322              		.loc 7 56 15 view .LVU74
 323 002a FDEEC77A 		vcvt.s32.f32	s15, s14
 324              	.LVL18:
 325              		.loc 7 56 15 view .LVU75
 326              	.LBE170:
 327              	.LBE200:
 328              		.loc 8 76 5 is_stmt 1 view .LVU76
 329              		.loc 8 76 5 view .LVU77
 330              	.LBB201:
 331              	.LBB195:
 332              	.LBB179:
 333              	.LBI174:
 126:../../libDaisy//src/daisy_seed.h ****     {
 334              		.loc 1 126 17 view .LVU78
 335              	.LBE179:
 336              		.loc 7 56 15 is_stmt 0 view .LVU79
 337 002e F1EE10FA 		vmrs	APSR_nzcv, FPSCR
 338              	.LBB180:
 339              	.LBB181:
 340              	.LBB182:
 341              		.file 9 "../../DaisySP//Source/Utility/dsp.h"
   1:../../DaisySP//Source/Utility/dsp.h **** /*
   2:../../DaisySP//Source/Utility/dsp.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../DaisySP//Source/Utility/dsp.h **** 
   4:../../DaisySP//Source/Utility/dsp.h **** Use of this source code is governed by an MIT-style
   5:../../DaisySP//Source/Utility/dsp.h **** license that can be found in the LICENSE file or at
   6:../../DaisySP//Source/Utility/dsp.h **** https://opensource.org/licenses/MIT.
   7:../../DaisySP//Source/Utility/dsp.h **** */
   8:../../DaisySP//Source/Utility/dsp.h **** 
   9:../../DaisySP//Source/Utility/dsp.h **** /** Helpful defines, functions, and other utilities for use in/with daisysp modules.
  10:../../DaisySP//Source/Utility/dsp.h **** */
  11:../../DaisySP//Source/Utility/dsp.h **** #pragma once
  12:../../DaisySP//Source/Utility/dsp.h **** #ifndef DSY_CORE_DSP
  13:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CORE_DSP
  14:../../DaisySP//Source/Utility/dsp.h **** #include <cassert>
  15:../../DaisySP//Source/Utility/dsp.h **** #include <cstdint>
  16:../../DaisySP//Source/Utility/dsp.h **** #include <random>
  17:../../DaisySP//Source/Utility/dsp.h **** #include <cmath>
  18:../../DaisySP//Source/Utility/dsp.h **** 
  19:../../DaisySP//Source/Utility/dsp.h **** /** PIs
  20:../../DaisySP//Source/Utility/dsp.h **** */
  21:../../DaisySP//Source/Utility/dsp.h **** #define PI_F 3.1415927410125732421875f
  22:../../DaisySP//Source/Utility/dsp.h **** #define TWOPI_F (2.0f * PI_F)
  23:../../DaisySP//Source/Utility/dsp.h **** #define HALFPI_F (PI_F * 0.5f)
  24:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MIN(in, mn) (in < mn ? in : mn)
  25:../../DaisySP//Source/Utility/dsp.h **** #define DSY_MAX(in, mx) (in > mx ? in : mx)
  26:../../DaisySP//Source/Utility/dsp.h **** #define DSY_CLAMP(in, mn, mx) (DSY_MIN(DSY_MAX(in, mn), mx))
  27:../../DaisySP//Source/Utility/dsp.h **** #define DSY_COUNTOF(_arr) (sizeof(_arr) / sizeof(_arr[0]))
  28:../../DaisySP//Source/Utility/dsp.h **** 
  29:../../DaisySP//Source/Utility/dsp.h **** namespace daisysp
  30:../../DaisySP//Source/Utility/dsp.h **** {
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 19


  31:../../DaisySP//Source/Utility/dsp.h **** //Avoids division for random floats. e.g. rand() * kRandFrac
  32:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kRandFrac = 1.f / (float)RAND_MAX;
  33:../../DaisySP//Source/Utility/dsp.h **** 
  34:../../DaisySP//Source/Utility/dsp.h **** //Convert from semitones to other units. e.g. 2 ^ (kOneTwelfth * x)
  35:../../DaisySP//Source/Utility/dsp.h **** static constexpr float kOneTwelfth = 1.f / 12.f;
  36:../../DaisySP//Source/Utility/dsp.h **** 
  37:../../DaisySP//Source/Utility/dsp.h **** /** efficient floating point min/max
  38:../../DaisySP//Source/Utility/dsp.h **** c/o stephen mccaul
  39:../../DaisySP//Source/Utility/dsp.h **** */
  40:../../DaisySP//Source/Utility/dsp.h **** inline float fmax(float a, float b)
  41:../../DaisySP//Source/Utility/dsp.h **** {
  42:../../DaisySP//Source/Utility/dsp.h ****     float r;
  43:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  44:../../DaisySP//Source/Utility/dsp.h ****     asm("vmaxnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
 342              		.loc 9 44 5 view .LVU80
 343              		.syntax unified
 344              	@ 44 "../../DaisySP//Source/Utility/dsp.h" 1
 345 0032 88FE288A 		vmaxnm.f32 s16, s16, s17
 346              	@ 0 "" 2
 347              		.thumb
 348              		.syntax unified
 349              	.LBE182:
 350              	.LBE181:
 351              	.LBE180:
 352              		.loc 7 56 41 view .LVU81
 353 0036 F8EEE75A 		vcvt.f32.s32	s11, s15
 354              	.LVL19:
 355              	.LBB187:
 356              	.LBB176:
 357              		.loc 1 128 23 view .LVU82
 358 003a 17EE902A 		vmov	r2, s15	@ int
 359 003e 4CBF     		ite	mi
 360 0040 2D21     		movmi	r1, #45
 361 0042 2021     		movpl	r1, #32
 362              	.LBE176:
 363              	.LBE187:
 364              		.loc 7 56 41 view .LVU83
 365 0044 37EE657A 		vsub.f32	s14, s14, s11
 366              	.LVL20:
 367              		.loc 7 56 41 view .LVU84
 368 0048 9FED196B 		vldr.64	d6, .L33
 369 004c B7EEC77A 		vcvt.f64.f32	d7, s14
 370 0050 27EE067B 		vmul.f64	d7, d7, d6
 371              	.LBB188:
 372              	.LBB177:
 373              		.loc 1 128 23 view .LVU85
 374 0054 FDEEC77B 		vcvt.s32.f64	s15, d7
 375              	.LVL21:
 376              		.loc 1 128 23 view .LVU86
 377 0058 17EE903A 		vmov	r3, s15	@ int
 378 005c FFF7FEFF 		bl	_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
 379              	.LVL22:
 380              		.loc 1 128 23 view .LVU87
 381              	.LBE177:
 382              	.LBE188:
  57:analogBreakoutBoard.cpp **** 		osc.SetFreq(24.0 + (fclamp(knobValue, 0.0f, 1.0f) * 60) );
 383              		.loc 7 57 3 is_stmt 1 view .LVU88
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 20


 384              	.LBB189:
 385              	.LBI180:
  45:../../DaisySP//Source/Utility/dsp.h **** #else
  46:../../DaisySP//Source/Utility/dsp.h ****     r = (a > b) ? a : b;
  47:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  48:../../DaisySP//Source/Utility/dsp.h ****     return r;
  49:../../DaisySP//Source/Utility/dsp.h **** }
  50:../../DaisySP//Source/Utility/dsp.h **** 
  51:../../DaisySP//Source/Utility/dsp.h **** inline float fmin(float a, float b)
  52:../../DaisySP//Source/Utility/dsp.h **** {
  53:../../DaisySP//Source/Utility/dsp.h ****     float r;
  54:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
  55:../../DaisySP//Source/Utility/dsp.h ****     asm("vminnm.f32 %[d], %[n], %[m]" : [d] "=t"(r) : [n] "t"(a), [m] "t"(b) :);
  56:../../DaisySP//Source/Utility/dsp.h **** #else
  57:../../DaisySP//Source/Utility/dsp.h ****     r = (a < b) ? a : b;
  58:../../DaisySP//Source/Utility/dsp.h **** #endif // __arm__
  59:../../DaisySP//Source/Utility/dsp.h ****     return r;
  60:../../DaisySP//Source/Utility/dsp.h **** }
  61:../../DaisySP//Source/Utility/dsp.h **** 
  62:../../DaisySP//Source/Utility/dsp.h **** /** quick fp clamp
  63:../../DaisySP//Source/Utility/dsp.h **** */
  64:../../DaisySP//Source/Utility/dsp.h **** inline float fclamp(float in, float min, float max)
 386              		.loc 9 64 14 view .LVU89
 387              	.LBE189:
 388              	.LBE195:
 389              	.LBE201:
  65:../../DaisySP//Source/Utility/dsp.h **** {
  66:../../DaisySP//Source/Utility/dsp.h ****     return fmin(fmax(in, min), max);
 390              		.loc 9 66 5 view .LVU90
 391              	.LBB202:
 392              	.LBB196:
 393              	.LBB190:
 394              	.LBB184:
 395              	.LBI181:
  40:../../DaisySP//Source/Utility/dsp.h **** {
 396              		.loc 9 40 14 view .LVU91
 397              	.LBB183:
  42:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 398              		.loc 9 42 5 view .LVU92
  44:../../DaisySP//Source/Utility/dsp.h **** #else
 399              		.loc 9 44 5 view .LVU93
  48:../../DaisySP//Source/Utility/dsp.h **** }
 400              		.loc 9 48 5 view .LVU94
  48:../../DaisySP//Source/Utility/dsp.h **** }
 401              		.loc 9 48 5 is_stmt 0 view .LVU95
 402              	.LBE183:
 403              	.LBE184:
 404              	.LBB185:
 405              	.LBI185:
  51:../../DaisySP//Source/Utility/dsp.h **** {
 406              		.loc 9 51 14 is_stmt 1 view .LVU96
 407              	.LBB186:
  53:../../DaisySP//Source/Utility/dsp.h **** #ifdef __arm__
 408              		.loc 9 53 5 view .LVU97
  55:../../DaisySP//Source/Utility/dsp.h **** #else
 409              		.loc 9 55 5 view .LVU98
 410 0060 B3EE080A 		vmov.f32	s0, #2.4e+1
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 21


 411 0064 DFED177A 		vldr.32	s15, .L33+20
 412 0068 B7EE007A 		vmov.f32	s14, #1.0e+0
 413              		.syntax unified
 414              	@ 55 "../../DaisySP//Source/Utility/dsp.h" 1
 415 006c 88FE478A 		vminnm.f32 s16, s16, s14
 416              	@ 0 "" 2
 417              	.LVL23:
  59:../../DaisySP//Source/Utility/dsp.h **** }
 418              		.loc 9 59 5 view .LVU99
  59:../../DaisySP//Source/Utility/dsp.h **** }
 419              		.loc 9 59 5 is_stmt 0 view .LVU100
 420              		.thumb
 421              		.syntax unified
 422 0070 A8EE270A 		vfma.f32	s0, s16, s15
 423              	.LVL24:
  59:../../DaisySP//Source/Utility/dsp.h **** }
 424              		.loc 9 59 5 view .LVU101
 425              	.LBE186:
 426              	.LBE185:
 427              	.LBE190:
 428              	.LBB191:
 429              	.LBI191:
  25:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Choices for output waveforms, POLYBLEP are appropriately labeled. Others are naive forms.
  26:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  27:../../DaisySP//Source/Synthesis/oscillator.h ****     enum
  28:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  29:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SIN,
  30:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_TRI,
  31:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SAW,
  32:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_RAMP,
  33:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_SQUARE,
  34:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_TRI,
  35:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SAW,
  36:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_POLYBLEP_SQUARE,
  37:../../DaisySP//Source/Synthesis/oscillator.h ****         WAVE_LAST,
  38:../../DaisySP//Source/Synthesis/oscillator.h ****     };
  39:../../DaisySP//Source/Synthesis/oscillator.h **** 
  40:../../DaisySP//Source/Synthesis/oscillator.h **** 
  41:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Initializes the Oscillator
  42:../../DaisySP//Source/Synthesis/oscillator.h **** 
  43:../../DaisySP//Source/Synthesis/oscillator.h ****         \param sample_rate - sample rate of the audio engine being run, and the frequency that the 
  44:../../DaisySP//Source/Synthesis/oscillator.h **** 
  45:../../DaisySP//Source/Synthesis/oscillator.h ****         Defaults:
  46:../../DaisySP//Source/Synthesis/oscillator.h ****         - freq_ = 100 Hz
  47:../../DaisySP//Source/Synthesis/oscillator.h ****         - amp_ = 0.5
  48:../../DaisySP//Source/Synthesis/oscillator.h ****         - waveform_ = sine wave.
  49:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     void Init(float sample_rate)
  51:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_        = sample_rate;
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 22


  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
  61:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
  62:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  63:../../DaisySP//Source/Synthesis/oscillator.h **** 
  64:../../DaisySP//Source/Synthesis/oscillator.h **** 
  65:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Changes the frequency of the Oscillator, and recalculates phase increment.
  66:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetFreq(const float f)
 430              		.loc 6 67 17 is_stmt 1 view .LVU102
 431              	.LBB192:
  68:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = f;
 432              		.loc 6 69 9 view .LVU103
  70:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 433              		.loc 6 70 34 is_stmt 0 view .LVU104
 434 0074 1048     		ldr	r0, .L33+8
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 435              		.loc 6 69 20 view .LVU105
 436 0076 86ED020A 		vstr.32	s0, [r6, #8]
 437              		.loc 6 70 9 is_stmt 1 view .LVU106
 438              		.loc 6 70 34 is_stmt 0 view .LVU107
 439 007a FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 440              	.LVL25:
 441              		.loc 6 70 34 view .LVU108
 442              	.LBE192:
 443              	.LBE191:
  58:analogBreakoutBoard.cpp **** 		sig = osc.Process();
 444              		.loc 7 58 20 view .LVU109
 445 007e 0E48     		ldr	r0, .L33+8
 446              	.LBB194:
 447              	.LBB193:
 448              		.loc 6 70 20 view .LVU110
 449 0080 86ED070A 		vstr.32	s0, [r6, #28]
 450              	.LVL26:
 451              		.loc 6 70 20 view .LVU111
 452              	.LBE193:
 453              	.LBE194:
 454              		.loc 7 58 3 is_stmt 1 view .LVU112
 455              		.loc 7 58 20 is_stmt 0 view .LVU113
 456 0084 FFF7FEFF 		bl	_ZN7daisysp10Oscillator7ProcessEv
 457              	.LVL27:
  59:analogBreakoutBoard.cpp **** 
  60:analogBreakoutBoard.cpp **** 		out[0][i] = sig;
  61:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 458              		.loc 7 61 16 view .LVU114
 459 0088 D5E90003 		ldrd	r0, r3, [r5]
 460              	.LVL28:
  60:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 461              		.loc 7 60 3 is_stmt 1 view .LVU115
  60:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 462              		.loc 7 60 13 is_stmt 0 view .LVU116
 463 008c 00EB8400 		add	r0, r0, r4, lsl #2
 464              		.loc 7 61 16 view .LVU117
 465 0090 03EB8403 		add	r3, r3, r4, lsl #2
 466              	.LBE196:
  53:analogBreakoutBoard.cpp **** 	{
 467              		.loc 7 53 32 view .LVU118
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 23


 468 0094 0234     		adds	r4, r4, #2
 469              	.LVL29:
 470              	.LBB197:
  60:analogBreakoutBoard.cpp ****     	out[1][i] = sig;
 471              		.loc 7 60 13 view .LVU119
 472 0096 80ED000A 		vstr.32	s0, [r0]
 473              		.loc 7 61 6 is_stmt 1 view .LVU120
 474              	.LBE197:
  53:analogBreakoutBoard.cpp **** 	{
 475              		.loc 7 53 23 is_stmt 0 view .LVU121
 476 009a A742     		cmp	r7, r4
 477              	.LBB198:
 478              		.loc 7 61 16 view .LVU122
 479 009c 83ED000A 		vstr.32	s0, [r3]
 480              	.LBE198:
  53:analogBreakoutBoard.cpp **** 	{
 481              		.loc 7 53 2 is_stmt 1 view .LVU123
 482              	.LVL30:
  53:analogBreakoutBoard.cpp **** 	{
 483              		.loc 7 53 23 view .LVU124
 484 00a0 B7D8     		bhi	.L24
 485              	.LBE202:
  62:analogBreakoutBoard.cpp **** 	}
  63:analogBreakoutBoard.cpp **** }
 486              		.loc 7 63 1 is_stmt 0 view .LVU125
 487 00a2 BDEC028B 		vldm	sp!, {d8}
 488              		.cfi_restore 80
 489              		.cfi_restore 81
 490              		.cfi_def_cfa_offset 24
 491 00a6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 492              	.LVL31:
 493              	.L30:
 494              		.cfi_def_cfa_offset 0
 495              		.cfi_restore 3
 496              		.cfi_restore 4
 497              		.cfi_restore 5
 498              		.cfi_restore 6
 499              		.cfi_restore 7
 500              		.cfi_restore 14
 501              		.loc 7 63 1 view .LVU126
 502 00a8 7047     		bx	lr
 503              	.L34:
 504 00aa 00BFAFF3 		.align	3
 504      0080
 505              	.L33:
 506 00b0 00000000 		.word	0
 507 00b4 80842E41 		.word	1093567616
 508 00b8 00000000 		.word	.LANCHOR4
 509 00bc 00000000 		.word	0
 510 00c0 00000000 		.word	.LC0
 511 00c4 00007042 		.word	1114636288
 512              		.cfi_endproc
 513              	.LFE4682:
 515              		.section	.text.startup.main,"ax",%progbits
 516              		.align	1
 517              		.p2align 2,,3
 518              		.global	main
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 24


 519              		.syntax unified
 520              		.thumb
 521              		.thumb_func
 522              		.fpu fpv5-d16
 524              	main:
 525              	.LFB4684:
  64:analogBreakoutBoard.cpp **** 
  65:analogBreakoutBoard.cpp **** int main(void)
  66:analogBreakoutBoard.cpp **** {
 526              		.loc 7 66 1 is_stmt 1 view -0
 527              		.cfi_startproc
 528              		@ args = 0, pretend = 0, frame = 24
 529              		@ frame_needed = 0, uses_anonymous_args = 0
  67:analogBreakoutBoard.cpp **** 	float sample_rate;
 530              		.loc 7 67 2 view .LVU128
  68:analogBreakoutBoard.cpp **** 	hw.Configure();
 531              		.loc 7 68 2 view .LVU129
  66:analogBreakoutBoard.cpp **** 	float sample_rate;
 532              		.loc 7 66 1 is_stmt 0 view .LVU130
 533 0000 30B5     		push	{r4, r5, lr}
 534              		.cfi_def_cfa_offset 12
 535              		.cfi_offset 4, -12
 536              		.cfi_offset 5, -8
 537              		.cfi_offset 14, -4
 538              		.loc 7 68 14 view .LVU131
 539 0002 3948     		ldr	r0, .L38
  69:analogBreakoutBoard.cpp **** 	hw.Init();
  70:analogBreakoutBoard.cpp **** 	sample_rate = hw.AudioSampleRate();
  71:analogBreakoutBoard.cpp **** 
  72:analogBreakoutBoard.cpp **** 	// read the ADC on pin 15
  73:analogBreakoutBoard.cpp **** 	// Z pin on the breakout board
  74:analogBreakoutBoard.cpp **** 	AdcChannelConfig adcConfig;
  75:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
  76:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
  77:analogBreakoutBoard.cpp **** 	hw.adc.Start();
  78:analogBreakoutBoard.cpp **** 
  79:analogBreakoutBoard.cpp **** 	// set up the GPIO pins for the breakout board
  80:analogBreakoutBoard.cpp **** 	// S0, S1, S2 on the breakout board
  81:analogBreakoutBoard.cpp **** 	// used to select which knob to read
  82:analogBreakoutBoard.cpp **** 	board0.Init(daisy::seed::D1, GPIO::Mode::OUTPUT);
 540              		.loc 7 82 13 view .LVU132
 541 0004 0024     		movs	r4, #0
 542              	.LBB211:
 543              	.LBB212:
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 544              		.loc 6 55 20 view .LVU133
 545 0006 4FF07C55 		mov	r5, #1056964608
 546              	.LBE212:
 547              	.LBE211:
  66:analogBreakoutBoard.cpp **** 	float sample_rate;
 548              		.loc 7 66 1 view .LVU134
 549 000a 2DED028B 		vpush.64	{d8}
 550              		.cfi_def_cfa_offset 20
 551              		.cfi_offset 80, -20
 552              		.cfi_offset 81, -16
 553 000e 89B0     		sub	sp, sp, #36
 554              		.cfi_def_cfa_offset 56
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 25


  68:analogBreakoutBoard.cpp **** 	hw.Init();
 555              		.loc 7 68 14 view .LVU135
 556 0010 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 557              	.LVL32:
  69:analogBreakoutBoard.cpp **** 	hw.Init();
 558              		.loc 7 69 2 is_stmt 1 view .LVU136
  69:analogBreakoutBoard.cpp **** 	hw.Init();
 559              		.loc 7 69 9 is_stmt 0 view .LVU137
 560 0014 0021     		movs	r1, #0
 561 0016 3448     		ldr	r0, .L38
 562 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 563              	.LVL33:
  70:analogBreakoutBoard.cpp **** 
 564              		.loc 7 70 2 is_stmt 1 view .LVU138
  70:analogBreakoutBoard.cpp **** 
 565              		.loc 7 70 34 is_stmt 0 view .LVU139
 566 001c 3248     		ldr	r0, .L38
 567 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 568              	.LVL34:
  75:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 569              		.loc 7 75 22 view .LVU140
 570 0022 0F20     		movs	r0, #15
  70:analogBreakoutBoard.cpp **** 
 571              		.loc 7 70 34 view .LVU141
 572 0024 B0EE408A 		vmov.f32	s16, s0
 573              	.LVL35:
  74:analogBreakoutBoard.cpp **** 	adcConfig.InitSingle(hw.GetPin(15));
 574              		.loc 7 74 2 is_stmt 1 view .LVU142
  75:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 575              		.loc 7 75 2 view .LVU143
  75:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 576              		.loc 7 75 22 is_stmt 0 view .LVU144
 577 0028 FFF7FEFF 		bl	_ZN5daisy9DaisySeed6GetPinEh
 578              	.LVL36:
  75:analogBreakoutBoard.cpp **** 	hw.adc.Init(&adcConfig, 1);
 579              		.loc 7 75 22 view .LVU145
 580 002c 0346     		mov	r3, r0	@ movhi
 581 002e 0222     		movs	r2, #2
 582 0030 03A8     		add	r0, sp, #12
 583 0032 ADF80830 		strh	r3, [sp, #8]	@ movhi
 584 0036 0299     		ldr	r1, [sp, #8]
 585 0038 FFF7FEFF 		bl	_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
 586              	.LVL37:
  76:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 587              		.loc 7 76 2 is_stmt 1 view .LVU146
  76:analogBreakoutBoard.cpp **** 	hw.adc.Start();
 588              		.loc 7 76 13 is_stmt 0 view .LVU147
 589 003c 0423     		movs	r3, #4
 590 003e 0122     		movs	r2, #1
 591 0040 03A9     		add	r1, sp, #12
 592 0042 2A48     		ldr	r0, .L38+4
 593 0044 FFF7FEFF 		bl	_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
 594              	.LVL38:
  77:analogBreakoutBoard.cpp **** 
 595              		.loc 7 77 2 is_stmt 1 view .LVU148
  77:analogBreakoutBoard.cpp **** 
 596              		.loc 7 77 14 is_stmt 0 view .LVU149
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 26


 597 0048 2848     		ldr	r0, .L38+4
 598 004a FFF7FEFF 		bl	_ZN5daisy9AdcHandle5StartEv
 599              	.LVL39:
 600              		.loc 7 82 2 is_stmt 1 view .LVU150
 601              		.loc 7 82 13 is_stmt 0 view .LVU151
 602 004e 2849     		ldr	r1, .L38+8
 603 0050 2346     		mov	r3, r4
 604 0052 0122     		movs	r2, #1
 605 0054 0968     		ldr	r1, [r1]
 606 0056 2748     		ldr	r0, .L38+12
 607 0058 0094     		str	r4, [sp]
 608 005a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 609              	.LVL40:
  83:analogBreakoutBoard.cpp **** 	board1.Init(daisy::seed::D2, GPIO::Mode::OUTPUT);
 610              		.loc 7 83 2 is_stmt 1 view .LVU152
 611              		.loc 7 83 13 is_stmt 0 view .LVU153
 612 005e 2649     		ldr	r1, .L38+16
 613 0060 2346     		mov	r3, r4
 614 0062 0122     		movs	r2, #1
 615 0064 0968     		ldr	r1, [r1]
 616 0066 2548     		ldr	r0, .L38+20
 617 0068 0094     		str	r4, [sp]
 618 006a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 619              	.LVL41:
  84:analogBreakoutBoard.cpp **** 	board2.Init(daisy::seed::D3, GPIO::Mode::OUTPUT);
 620              		.loc 7 84 2 is_stmt 1 view .LVU154
 621              		.loc 7 84 13 is_stmt 0 view .LVU155
 622 006e 2449     		ldr	r1, .L38+24
 623 0070 2346     		mov	r3, r4
 624 0072 0122     		movs	r2, #1
 625 0074 0968     		ldr	r1, [r1]
 626 0076 2348     		ldr	r0, .L38+28
 627 0078 0094     		str	r4, [sp]
 628 007a FFF7FEFF 		bl	_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
 629              	.LVL42:
  85:analogBreakoutBoard.cpp **** 
  86:analogBreakoutBoard.cpp **** 	hw.SetAudioBlockSize(4); // number of samples handled per callback
 630              		.loc 7 86 2 is_stmt 1 view .LVU156
 631              		.loc 7 86 22 is_stmt 0 view .LVU157
 632 007e 0421     		movs	r1, #4
 633 0080 1948     		ldr	r0, .L38
 634 0082 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 635              	.LVL43:
  87:analogBreakoutBoard.cpp **** 	hw.SetAudioSampleRate(SaiHandle::Config::SampleRate::SAI_48KHZ);
 636              		.loc 7 87 2 is_stmt 1 view .LVU158
 637              		.loc 7 87 23 is_stmt 0 view .LVU159
 638 0086 0321     		movs	r1, #3
 639 0088 1748     		ldr	r0, .L38
 640 008a FFF7FEFF 		bl	_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
 641              	.LVL44:
  88:analogBreakoutBoard.cpp **** 
  89:analogBreakoutBoard.cpp **** 	osc.Init(sample_rate);
 642              		.loc 7 89 2 is_stmt 1 view .LVU160
 643              	.LBB215:
 644              	.LBI211:
  50:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 645              		.loc 6 50 10 view .LVU161
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 27


 646              	.LBB213:
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 647              		.loc 6 52 9 view .LVU162
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 648              		.loc 6 53 27 is_stmt 0 view .LVU163
 649 008e B7EE007A 		vmov.f32	s14, #1.0e+0
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 650              		.loc 6 52 20 view .LVU164
 651 0092 1D4C     		ldr	r4, .L38+32
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 652              		.loc 6 57 20 view .LVU165
 653 0094 0023     		movs	r3, #0
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 654              		.loc 6 54 20 view .LVU166
 655 0096 9FED1D0A 		vldr.32	s0, .L38+36
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 656              		.loc 6 53 27 view .LVU167
 657 009a C7EE087A 		vdiv.f32	s15, s14, s16
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 658              		.loc 6 58 34 view .LVU168
 659 009e 2046     		mov	r0, r4
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 660              		.loc 6 57 20 view .LVU169
 661 00a0 A361     		str	r3, [r4, #24]	@ float
  52:../../DaisySP//Source/Synthesis/oscillator.h ****         sr_recip_  = 1.0f / sample_rate;
 662              		.loc 6 52 20 view .LVU170
 663 00a2 84ED048A 		vstr.32	s16, [r4, #16]
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 664              		.loc 6 53 9 is_stmt 1 view .LVU171
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 665              		.loc 6 54 20 is_stmt 0 view .LVU172
 666 00a6 84ED020A 		vstr.32	s0, [r4, #8]
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 667              		.loc 6 55 20 view .LVU173
 668 00aa 6560     		str	r5, [r4, #4]	@ float
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 669              		.loc 6 56 20 view .LVU174
 670 00ac E560     		str	r5, [r4, #12]	@ float
  53:../../DaisySP//Source/Synthesis/oscillator.h ****         freq_      = 100.0f;
 671              		.loc 6 53 20 view .LVU175
 672 00ae C4ED057A 		vstr.32	s15, [r4, #20]
  54:../../DaisySP//Source/Synthesis/oscillator.h ****         amp_       = 0.5f;
 673              		.loc 6 54 9 is_stmt 1 view .LVU176
  55:../../DaisySP//Source/Synthesis/oscillator.h ****         pw_        = 0.5f;
 674              		.loc 6 55 9 view .LVU177
  56:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_     = 0.0f;
 675              		.loc 6 56 9 view .LVU178
  57:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(freq_);
 676              		.loc 6 57 9 view .LVU179
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 677              		.loc 6 58 9 view .LVU180
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 678              		.loc 6 58 34 is_stmt 0 view .LVU181
 679 00b2 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 680              	.LVL45:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 681              		.loc 6 61 20 view .LVU182
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 28


 682 00b6 40F20112 		movw	r2, #257
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 683              		.loc 6 58 34 view .LVU183
 684 00ba F0EE407A 		vmov.f32	s15, s0
 685              	.LBE213:
 686              	.LBE215:
 687              	.LBB216:
 688              	.LBB217:
  71:../../DaisySP//Source/Synthesis/oscillator.h ****     }
  72:../../DaisySP//Source/Synthesis/oscillator.h **** 
  73:../../DaisySP//Source/Synthesis/oscillator.h **** 
  74:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the amplitude of the waveform.
  75:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetAmp(const float a) { amp_ = a; }
  77:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
  78:../../DaisySP//Source/Synthesis/oscillator.h ****     */
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     inline void SetWaveform(const uint8_t wf)
  80:../../DaisySP//Source/Synthesis/oscillator.h ****     {
  81:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_ = wf < WAVE_LAST ? wf : WAVE_SIN;
 689              		.loc 6 81 19 view .LVU184
 690 00be 0223     		movs	r3, #2
 691              	.LBE217:
 692              	.LBE216:
 693              	.LBB219:
 694              	.LBB220:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 695              		.loc 6 69 20 view .LVU185
 696 00c0 9FED130A 		vldr.32	s0, .L38+40
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 697              		.loc 6 70 34 view .LVU186
 698 00c4 2046     		mov	r0, r4
 699              	.LBE220:
 700              	.LBE219:
 701              	.LBB223:
 702              	.LBB214:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 703              		.loc 6 61 20 view .LVU187
 704 00c6 2285     		strh	r2, [r4, #40]	@ movhi
  58:../../DaisySP//Source/Synthesis/oscillator.h ****         waveform_  = WAVE_SIN;
 705              		.loc 6 58 20 view .LVU188
 706 00c8 C4ED077A 		vstr.32	s15, [r4, #28]
  59:../../DaisySP//Source/Synthesis/oscillator.h ****         eoc_       = true;
 707              		.loc 6 59 9 is_stmt 1 view .LVU189
  60:../../DaisySP//Source/Synthesis/oscillator.h ****         eor_       = true;
 708              		.loc 6 60 9 view .LVU190
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 709              		.loc 6 61 9 view .LVU191
 710              	.LVL46:
  61:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 711              		.loc 6 61 9 is_stmt 0 view .LVU192
 712              	.LBE214:
 713              	.LBE223:
  90:analogBreakoutBoard.cpp **** 	osc.SetWaveform(osc.WAVE_SAW);
 714              		.loc 7 90 2 is_stmt 1 view .LVU193
 715              	.LBB224:
 716              	.LBI216:
  79:../../DaisySP//Source/Synthesis/oscillator.h ****     {
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 29


 717              		.loc 6 79 17 view .LVU194
 718              	.LBB218:
 719              		.loc 6 81 9 view .LVU195
 720              		.loc 6 81 19 is_stmt 0 view .LVU196
 721 00cc 2370     		strb	r3, [r4]
 722              	.LVL47:
 723              		.loc 6 81 19 view .LVU197
 724              	.LBE218:
 725              	.LBE224:
  91:analogBreakoutBoard.cpp ****     osc.SetFreq(440);
 726              		.loc 7 91 5 is_stmt 1 view .LVU198
 727              	.LBB225:
 728              	.LBI219:
  67:../../DaisySP//Source/Synthesis/oscillator.h ****     {
 729              		.loc 6 67 17 view .LVU199
 730              	.LBB221:
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 731              		.loc 6 69 9 view .LVU200
  69:../../DaisySP//Source/Synthesis/oscillator.h ****         phase_inc_ = CalcPhaseInc(f);
 732              		.loc 6 69 20 is_stmt 0 view .LVU201
 733 00ce 84ED020A 		vstr.32	s0, [r4, #8]
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 734              		.loc 6 70 9 is_stmt 1 view .LVU202
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 735              		.loc 6 70 34 is_stmt 0 view .LVU203
 736 00d2 FFF7FEFF 		bl	_ZN7daisysp10Oscillator12CalcPhaseIncEf
 737              	.LVL48:
 738              	.LBE221:
 739              	.LBE225:
  92:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
  93:analogBreakoutBoard.cpp **** 
  94:analogBreakoutBoard.cpp **** 	hw.StartAudio(AudioCallback);
 740              		.loc 7 94 15 view .LVU204
 741 00d6 0F49     		ldr	r1, .L38+44
 742 00d8 0348     		ldr	r0, .L38
 743              	.LBB226:
 744              	.LBB222:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 745              		.loc 6 70 20 view .LVU205
 746 00da 84ED070A 		vstr.32	s0, [r4, #28]
 747              	.LVL49:
  70:../../DaisySP//Source/Synthesis/oscillator.h ****     }
 748              		.loc 6 70 20 view .LVU206
 749              	.LBE222:
 750              	.LBE226:
  92:analogBreakoutBoard.cpp ****     osc.SetAmp(0.5);
 751              		.loc 7 92 5 is_stmt 1 view .LVU207
 752              	.LBB227:
 753              	.LBI227:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 754              		.loc 6 76 17 view .LVU208
 755              	.LBB228:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 756              		.loc 6 76 41 view .LVU209
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 757              		.loc 6 76 46 is_stmt 0 view .LVU210
 758 00de 6560     		str	r5, [r4, #4]	@ float
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 30


 759              	.LVL50:
  76:../../DaisySP//Source/Synthesis/oscillator.h ****     /** Sets the waveform to be synthesized by the Process() function.
 760              		.loc 6 76 46 view .LVU211
 761              	.LBE228:
 762              	.LBE227:
 763              		.loc 7 94 2 is_stmt 1 view .LVU212
 764              		.loc 7 94 15 is_stmt 0 view .LVU213
 765 00e0 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 766              	.LVL51:
 767              	.L36:
  95:analogBreakoutBoard.cpp **** 	while(1) {}
 768              		.loc 7 95 2 is_stmt 1 discriminator 1 view .LVU214
 769              		.loc 7 95 2 discriminator 1 view .LVU215
 770              		.loc 7 95 2 discriminator 1 view .LVU216
 771              		.loc 7 95 2 discriminator 1 view .LVU217
 772 00e4 FEE7     		b	.L36
 773              	.L39:
 774 00e6 00BF     		.align	2
 775              	.L38:
 776 00e8 00000000 		.word	.LANCHOR3
 777 00ec 18000000 		.word	.LANCHOR3+24
 778 00f0 00000000 		.word	.LANCHOR5
 779 00f4 00000000 		.word	.LANCHOR0
 780 00f8 00000000 		.word	.LANCHOR6
 781 00fc 00000000 		.word	.LANCHOR1
 782 0100 00000000 		.word	.LANCHOR7
 783 0104 00000000 		.word	.LANCHOR2
 784 0108 00000000 		.word	.LANCHOR4
 785 010c 0000C842 		.word	1120403456
 786 0110 0000DC43 		.word	1138491392
 787 0114 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 788              		.cfi_endproc
 789              	.LFE4684:
 791              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 792              		.align	1
 793              		.p2align 2,,3
 794              		.syntax unified
 795              		.thumb
 796              		.thumb_func
 797              		.fpu fpv5-d16
 799              	_GLOBAL__sub_I_hw:
 800              	.LFB5248:
  96:analogBreakoutBoard.cpp **** }
 801              		.loc 7 96 1 view -0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 0
 804              		@ frame_needed = 0, uses_anonymous_args = 0
 805              	.LBB276:
 806              	.LBI276:
 807              		.loc 7 96 1 view .LVU219
 808              	.LVL52:
 809              	.LBB277:
 810              	.LBB278:
 811              	.LBI278:
  21:../../libDaisy//src/daisy_seed.h ****     ~DaisySeed() {}
 812              		.loc 1 21 5 view .LVU220
 813              	.LBB279:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 31


 814              	.LBB280:
 815              	.LBI280:
 816              		.file 10 "../../libDaisy//src/per/qspi.h"
   1:../../libDaisy//src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../libDaisy//src/per/qspi.h **** 
   4:../../libDaisy//src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../libDaisy//src/per/qspi.h **** 
   6:../../libDaisy//src/per/qspi.h **** #include <cstdint>
   7:../../libDaisy//src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../libDaisy//src/per/qspi.h **** 
   9:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  11:../../libDaisy//src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  14:../../libDaisy//src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../libDaisy//src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../libDaisy//src/per/qspi.h ****     __attribute__((section( \
  17:../../libDaisy//src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../libDaisy//src/per/qspi.h **** 
  19:../../libDaisy//src/per/qspi.h **** namespace daisy
  20:../../libDaisy//src/per/qspi.h **** {
  21:../../libDaisy//src/per/qspi.h **** /** @addtogroup serial
  22:../../libDaisy//src/per/qspi.h **** @{
  23:../../libDaisy//src/per/qspi.h **** */
  24:../../libDaisy//src/per/qspi.h **** 
  25:../../libDaisy//src/per/qspi.h **** /** 
  26:../../libDaisy//src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../libDaisy//src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../libDaisy//src/per/qspi.h ****     * IS25LP080D
  29:../../libDaisy//src/per/qspi.h **** */
  30:../../libDaisy//src/per/qspi.h **** class QSPIHandle
  31:../../libDaisy//src/per/qspi.h **** {
  32:../../libDaisy//src/per/qspi.h ****   public:
  33:../../libDaisy//src/per/qspi.h ****     enum Result
  34:../../libDaisy//src/per/qspi.h ****     {
  35:../../libDaisy//src/per/qspi.h ****         OK = 0,
  36:../../libDaisy//src/per/qspi.h ****         ERR
  37:../../libDaisy//src/per/qspi.h ****     };
  38:../../libDaisy//src/per/qspi.h **** 
  39:../../libDaisy//src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../libDaisy//src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../libDaisy//src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../libDaisy//src/per/qspi.h ****          * 
  43:../../libDaisy//src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../libDaisy//src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../libDaisy//src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../libDaisy//src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../libDaisy//src/per/qspi.h ****          */
  48:../../libDaisy//src/per/qspi.h ****     enum Status
  49:../../libDaisy//src/per/qspi.h ****     {
  50:../../libDaisy//src/per/qspi.h ****         GOOD = 0,
  51:../../libDaisy//src/per/qspi.h ****         E_HAL_ERROR,
  52:../../libDaisy//src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../libDaisy//src/per/qspi.h ****         E_INVALID_MODE,
  54:../../libDaisy//src/per/qspi.h ****     };
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 32


  55:../../libDaisy//src/per/qspi.h **** 
  56:../../libDaisy//src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../libDaisy//src/per/qspi.h ****     struct Config
  58:../../libDaisy//src/per/qspi.h ****     {
  59:../../libDaisy//src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../libDaisy//src/per/qspi.h ****         enum Device
  61:../../libDaisy//src/per/qspi.h ****         {
  62:../../libDaisy//src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../libDaisy//src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../libDaisy//src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../libDaisy//src/per/qspi.h ****         };
  66:../../libDaisy//src/per/qspi.h **** 
  67:../../libDaisy//src/per/qspi.h ****         /** 
  68:../../libDaisy//src/per/qspi.h ****         Modes of operation.
  69:../../libDaisy//src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../libDaisy//src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../libDaisy//src/per/qspi.h ****         possible in this mode. \n 
  72:../../libDaisy//src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../libDaisy//src/per/qspi.h ****         */
  74:../../libDaisy//src/per/qspi.h ****         enum Mode
  75:../../libDaisy//src/per/qspi.h ****         {
  76:../../libDaisy//src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../libDaisy//src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../libDaisy//src/per/qspi.h ****             MODE_LAST,
  79:../../libDaisy//src/per/qspi.h ****         };
  80:../../libDaisy//src/per/qspi.h **** 
  81:../../libDaisy//src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../libDaisy//src/per/qspi.h ****         struct
  83:../../libDaisy//src/per/qspi.h ****         {
  84:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../libDaisy//src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../libDaisy//src/per/qspi.h ****         } pin_config;
  91:../../libDaisy//src/per/qspi.h **** 
  92:../../libDaisy//src/per/qspi.h ****         Device device;
  93:../../libDaisy//src/per/qspi.h ****         Mode   mode;
  94:../../libDaisy//src/per/qspi.h ****     };
  95:../../libDaisy//src/per/qspi.h **** 
  96:../../libDaisy//src/per/qspi.h ****     /** 
  97:../../libDaisy//src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../libDaisy//src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../libDaisy//src/per/qspi.h ****         */
 101:../../libDaisy//src/per/qspi.h ****     Result Init(const Config& config);
 102:../../libDaisy//src/per/qspi.h **** 
 103:../../libDaisy//src/per/qspi.h ****     /** Returns the current config. */
 104:../../libDaisy//src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../libDaisy//src/per/qspi.h **** 
 106:../../libDaisy//src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../libDaisy//src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../libDaisy//src/per/qspi.h ****     /** 
 109:../../libDaisy//src/per/qspi.h ****         Deinitializes the peripheral
 110:../../libDaisy//src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 33


 112:../../libDaisy//src/per/qspi.h ****         */
 113:../../libDaisy//src/per/qspi.h ****     Result DeInit();
 114:../../libDaisy//src/per/qspi.h **** 
 115:../../libDaisy//src/per/qspi.h ****     /** 
 116:../../libDaisy//src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../libDaisy//src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 119:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 120:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 121:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../libDaisy//src/per/qspi.h ****         */
 123:../../libDaisy//src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../libDaisy//src/per/qspi.h **** 
 125:../../libDaisy//src/per/qspi.h ****     /** 
 126:../../libDaisy//src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../libDaisy//src/per/qspi.h ****         \param address Address to write to
 128:../../libDaisy//src/per/qspi.h ****         \param size Buffer size
 129:../../libDaisy//src/per/qspi.h ****         \param buffer Buffer to write
 130:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../libDaisy//src/per/qspi.h ****         */
 132:../../libDaisy//src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../libDaisy//src/per/qspi.h **** 
 134:../../libDaisy//src/per/qspi.h ****     /** 
 135:../../libDaisy//src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../libDaisy//src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../libDaisy//src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../libDaisy//src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../libDaisy//src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../libDaisy//src/per/qspi.h ****         */
 142:../../libDaisy//src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../libDaisy//src/per/qspi.h **** 
 144:../../libDaisy//src/per/qspi.h ****     /**  
 145:../../libDaisy//src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../libDaisy//src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../libDaisy//src/per/qspi.h ****         \param address Address of sector to erase
 148:../../libDaisy//src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../libDaisy//src/per/qspi.h ****         */
 150:../../libDaisy//src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../libDaisy//src/per/qspi.h **** 
 152:../../libDaisy//src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../libDaisy//src/per/qspi.h ****      *  \returns Status
 154:../../libDaisy//src/per/qspi.h ****      */
 155:../../libDaisy//src/per/qspi.h ****     Status GetStatus();
 156:../../libDaisy//src/per/qspi.h **** 
 157:../../libDaisy//src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../libDaisy//src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../libDaisy//src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../libDaisy//src/per/qspi.h ****      * 
 161:../../libDaisy//src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../libDaisy//src/per/qspi.h ****      *                many bytes into the memory
 163:../../libDaisy//src/per/qspi.h ****     */
 164:../../libDaisy//src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../libDaisy//src/per/qspi.h **** 
 166:../../libDaisy//src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 817              		.loc 10 166 5 view .LVU221
 818              	.LBE280:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 34


 819              	.LBE279:
 820              	.LBE278:
 821              	.LBE277:
 822              	.LBE276:
 823              		.loc 7 96 1 is_stmt 0 view .LVU222
 824 0000 10B5     		push	{r4, lr}
 825              		.cfi_def_cfa_offset 8
 826              		.cfi_offset 4, -8
 827              		.cfi_offset 14, -4
 828              	.LBB342:
 829              	.LBB341:
 830              	.LBB301:
 831              	.LBB299:
 832              	.LBB285:
 833              	.LBB281:
 834              	.LBB282:
 835              		.loc 10 166 34 view .LVU223
 836 0002 1048     		ldr	r0, .L42
 837 0004 0024     		movs	r4, #0
 838              	.LBE282:
 839              	.LBE281:
 840              	.LBE285:
 841              	.LBE299:
 842              	.LBE301:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 843              		.loc 7 7 11 view .LVU224
 844 0006 104A     		ldr	r2, .L42+4
 845 0008 1049     		ldr	r1, .L42+8
 846              	.LBB302:
 847              	.LBB300:
 848              	.LBB286:
 849              	.LBB284:
 850              	.LBB283:
 851              		.loc 10 166 34 view .LVU225
 852 000a 0460     		str	r4, [r0]
 853              	.LVL53:
 854              		.loc 10 166 34 view .LVU226
 855              	.LBE283:
 856              	.LBE284:
 857              	.LBE286:
 858              	.LBB287:
 859              	.LBI287:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 860              		.loc 5 95 5 is_stmt 1 view .LVU227
 861              	.LBB288:
 862              	.LBB289:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 863              		.loc 5 95 35 is_stmt 0 view .LVU228
 864 000c 4461     		str	r4, [r0, #20]
 865              	.LVL54:
  95:../../libDaisy//src/hid/audio.h ****     ~AudioHandle() {}
 866              		.loc 5 95 35 view .LVU229
 867              	.LBE289:
 868              	.LBE288:
 869              	.LBE287:
 870              	.LBB290:
 871              	.LBI290:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 35


 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 872              		.loc 4 109 5 is_stmt 1 view .LVU230
 109:../../libDaisy//src/per/adc.h ****     ~AdcHandle() {}
 873              		.loc 4 109 5 is_stmt 0 view .LVU231
 874              	.LBE290:
 875              	.LBB291:
 876              	.LBI291:
 877              		.file 11 "../../libDaisy//src/per/dac.h"
   1:../../libDaisy//src/per/dac.h **** #pragma once
   2:../../libDaisy//src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../libDaisy//src/per/dac.h **** #define DSY_DAC_H
   4:../../libDaisy//src/per/dac.h **** 
   5:../../libDaisy//src/per/dac.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/dac.h **** 
   7:../../libDaisy//src/per/dac.h **** namespace daisy
   8:../../libDaisy//src/per/dac.h **** {
   9:../../libDaisy//src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../libDaisy//src/per/dac.h ****  *  @ingroup per_analog
  11:../../libDaisy//src/per/dac.h ****  ** 
  12:../../libDaisy//src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../libDaisy//src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../libDaisy//src/per/dac.h ****  **
  15:../../libDaisy//src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../libDaisy//src/per/dac.h ****  **
  17:../../libDaisy//src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../libDaisy//src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../libDaisy//src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../libDaisy//src/per/dac.h ****  ***/
  21:../../libDaisy//src/per/dac.h **** class DacHandle
  22:../../libDaisy//src/per/dac.h **** {
  23:../../libDaisy//src/per/dac.h ****   public:
  24:../../libDaisy//src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../libDaisy//src/per/dac.h ****     enum class Result
  26:../../libDaisy//src/per/dac.h ****     {
  27:../../libDaisy//src/per/dac.h ****         OK,
  28:../../libDaisy//src/per/dac.h ****         ERR,
  29:../../libDaisy//src/per/dac.h ****     };
  30:../../libDaisy//src/per/dac.h **** 
  31:../../libDaisy//src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../libDaisy//src/per/dac.h ****     enum class Channel
  33:../../libDaisy//src/per/dac.h ****     {
  34:../../libDaisy//src/per/dac.h ****         ONE,
  35:../../libDaisy//src/per/dac.h ****         TWO,
  36:../../libDaisy//src/per/dac.h ****         BOTH,
  37:../../libDaisy//src/per/dac.h ****     };
  38:../../libDaisy//src/per/dac.h **** 
  39:../../libDaisy//src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../libDaisy//src/per/dac.h ****      **
  41:../../libDaisy//src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../libDaisy//src/per/dac.h ****      **
  43:../../libDaisy//src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../libDaisy//src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../libDaisy//src/per/dac.h ****      ***/
  46:../../libDaisy//src/per/dac.h ****     enum class Mode
  47:../../libDaisy//src/per/dac.h ****     {
  48:../../libDaisy//src/per/dac.h ****         POLLING,
  49:../../libDaisy//src/per/dac.h ****         DMA,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 36


  50:../../libDaisy//src/per/dac.h ****     };
  51:../../libDaisy//src/per/dac.h **** 
  52:../../libDaisy//src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../libDaisy//src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../libDaisy//src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../libDaisy//src/per/dac.h ****      ***/
  56:../../libDaisy//src/per/dac.h ****     enum class BitDepth
  57:../../libDaisy//src/per/dac.h ****     {
  58:../../libDaisy//src/per/dac.h ****         BITS_8,
  59:../../libDaisy//src/per/dac.h ****         BITS_12
  60:../../libDaisy//src/per/dac.h ****     };
  61:../../libDaisy//src/per/dac.h **** 
  62:../../libDaisy//src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../libDaisy//src/per/dac.h ****     enum class BufferState
  64:../../libDaisy//src/per/dac.h ****     {
  65:../../libDaisy//src/per/dac.h ****         ENABLED,
  66:../../libDaisy//src/per/dac.h ****         DISABLED,
  67:../../libDaisy//src/per/dac.h ****     };
  68:../../libDaisy//src/per/dac.h **** 
  69:../../libDaisy//src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../libDaisy//src/per/dac.h ****     struct Config
  71:../../libDaisy//src/per/dac.h ****     {
  72:../../libDaisy//src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../libDaisy//src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../libDaisy//src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../libDaisy//src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../libDaisy//src/per/dac.h ****         uint32_t target_samplerate;
  77:../../libDaisy//src/per/dac.h **** 
  78:../../libDaisy//src/per/dac.h ****         Channel     chn;
  79:../../libDaisy//src/per/dac.h ****         Mode        mode;
  80:../../libDaisy//src/per/dac.h ****         BitDepth    bitdepth;
  81:../../libDaisy//src/per/dac.h ****         BufferState buff_state;
  82:../../libDaisy//src/per/dac.h ****     };
  83:../../libDaisy//src/per/dac.h **** 
  84:../../libDaisy//src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 878              		.loc 11 84 5 is_stmt 1 view .LVU232
 879              	.LBB292:
 880              	.LBB293:
 881              		.loc 11 84 33 is_stmt 0 view .LVU233
 882 000e 0462     		str	r4, [r0, #32]
 883              	.LVL55:
 884              		.loc 11 84 33 view .LVU234
 885              	.LBE293:
 886              	.LBE292:
 887              	.LBE291:
 888              	.LBB294:
 889              	.LBI294:
  40:../../libDaisy//src/hid/usb.h **** 
 890              		.loc 3 40 5 is_stmt 1 view .LVU235
  40:../../libDaisy//src/hid/usb.h **** 
 891              		.loc 3 40 5 is_stmt 0 view .LVU236
 892              	.LBE294:
 893              	.LBB295:
 894              	.LBI295:
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
 895              		.loc 2 96 5 is_stmt 1 view .LVU237
  96:../../libDaisy//src/sys/system.h ****     ~System() {}
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 37


 896              		.loc 2 96 5 is_stmt 0 view .LVU238
 897              	.LBE295:
 898              	.LBB296:
 899              	.LBI296:
 900              		.file 12 "../../libDaisy//src/per/sai.h"
   1:../../libDaisy//src/per/sai.h **** #pragma once
   2:../../libDaisy//src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../libDaisy//src/per/sai.h **** #define DSY_SAI_H
   4:../../libDaisy//src/per/sai.h **** 
   5:../../libDaisy//src/per/sai.h **** #include "daisy_core.h"
   6:../../libDaisy//src/per/sai.h **** 
   7:../../libDaisy//src/per/sai.h **** namespace daisy
   8:../../libDaisy//src/per/sai.h **** {
   9:../../libDaisy//src/per/sai.h **** /** 
  10:../../libDaisy//src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../libDaisy//src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../libDaisy//src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../libDaisy//src/per/sai.h ****  * 
  14:../../libDaisy//src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../libDaisy//src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../libDaisy//src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../libDaisy//src/per/sai.h ****  *
  18:../../libDaisy//src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../libDaisy//src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../libDaisy//src/per/sai.h ****  * 
  21:../../libDaisy//src/per/sai.h ****  * Use SAI Handle like this:
  22:../../libDaisy//src/per/sai.h ****  * 
  23:../../libDaisy//src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../libDaisy//src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../libDaisy//src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../libDaisy//src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../libDaisy//src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../libDaisy//src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../libDaisy//src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../libDaisy//src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../libDaisy//src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../libDaisy//src/per/sai.h ****  *  // Then Initialize
  37:../../libDaisy//src/per/sai.h ****  *  SaiHandle sai;
  38:../../libDaisy//src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../libDaisy//src/per/sai.h ****  *  // Now you can use it:
  40:../../libDaisy//src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../libDaisy//src/per/sai.h ****  */
  42:../../libDaisy//src/per/sai.h **** class SaiHandle
  43:../../libDaisy//src/per/sai.h **** {
  44:../../libDaisy//src/per/sai.h ****   public:
  45:../../libDaisy//src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../libDaisy//src/per/sai.h ****     struct Config
  47:../../libDaisy//src/per/sai.h ****     {
  48:../../libDaisy//src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../libDaisy//src/per/sai.h ****         enum class Peripheral
  50:../../libDaisy//src/per/sai.h ****         {
  51:../../libDaisy//src/per/sai.h ****             SAI_1,
  52:../../libDaisy//src/per/sai.h ****             SAI_2,
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 38


  53:../../libDaisy//src/per/sai.h ****         };
  54:../../libDaisy//src/per/sai.h **** 
  55:../../libDaisy//src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../libDaisy//src/per/sai.h ****         enum class SampleRate
  57:../../libDaisy//src/per/sai.h ****         {
  58:../../libDaisy//src/per/sai.h ****             SAI_8KHZ,
  59:../../libDaisy//src/per/sai.h ****             SAI_16KHZ,
  60:../../libDaisy//src/per/sai.h ****             SAI_32KHZ,
  61:../../libDaisy//src/per/sai.h ****             SAI_48KHZ,
  62:../../libDaisy//src/per/sai.h ****             SAI_96KHZ,
  63:../../libDaisy//src/per/sai.h ****         };
  64:../../libDaisy//src/per/sai.h **** 
  65:../../libDaisy//src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../libDaisy//src/per/sai.h ****         enum class BitDepth
  67:../../libDaisy//src/per/sai.h ****         {
  68:../../libDaisy//src/per/sai.h ****             SAI_16BIT,
  69:../../libDaisy//src/per/sai.h ****             SAI_24BIT,
  70:../../libDaisy//src/per/sai.h ****             SAI_32BIT,
  71:../../libDaisy//src/per/sai.h ****         };
  72:../../libDaisy//src/per/sai.h **** 
  73:../../libDaisy//src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../libDaisy//src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../libDaisy//src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../libDaisy//src/per/sai.h ****          */
  77:../../libDaisy//src/per/sai.h ****         enum class Sync
  78:../../libDaisy//src/per/sai.h ****         {
  79:../../libDaisy//src/per/sai.h ****             MASTER,
  80:../../libDaisy//src/per/sai.h ****             SLAVE,
  81:../../libDaisy//src/per/sai.h ****         };
  82:../../libDaisy//src/per/sai.h **** 
  83:../../libDaisy//src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../libDaisy//src/per/sai.h ****         enum class Direction
  85:../../libDaisy//src/per/sai.h ****         {
  86:../../libDaisy//src/per/sai.h ****             TRANSMIT,
  87:../../libDaisy//src/per/sai.h ****             RECEIVE,
  88:../../libDaisy//src/per/sai.h ****         };
  89:../../libDaisy//src/per/sai.h **** 
  90:../../libDaisy//src/per/sai.h ****         Peripheral periph;
  91:../../libDaisy//src/per/sai.h ****         struct
  92:../../libDaisy//src/per/sai.h ****         {
  93:../../libDaisy//src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../libDaisy//src/per/sai.h ****         } pin_config;
  95:../../libDaisy//src/per/sai.h ****         SampleRate sr;
  96:../../libDaisy//src/per/sai.h ****         BitDepth   bit_depth;
  97:../../libDaisy//src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../libDaisy//src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../libDaisy//src/per/sai.h ****     };
 100:../../libDaisy//src/per/sai.h **** 
 101:../../libDaisy//src/per/sai.h ****     /** Return values for SAI functions */
 102:../../libDaisy//src/per/sai.h ****     enum class Result
 103:../../libDaisy//src/per/sai.h ****     {
 104:../../libDaisy//src/per/sai.h ****         OK,
 105:../../libDaisy//src/per/sai.h ****         ERR,
 106:../../libDaisy//src/per/sai.h ****     };
 107:../../libDaisy//src/per/sai.h **** 
 108:../../libDaisy//src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 901              		.loc 12 108 5 is_stmt 1 view .LVU239
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 39


 902              	.LBB297:
 903              	.LBB298:
 904              		.loc 12 108 33 is_stmt 0 view .LVU240
 905 0010 C463     		str	r4, [r0, #60]
 906              	.LVL56:
 907              		.loc 12 108 33 view .LVU241
 908              	.LBE298:
 909              	.LBE297:
 910              	.LBE296:
 911              	.LBE300:
 912              	.LBE302:
   7:analogBreakoutBoard.cpp **** static Oscillator osc;
 913              		.loc 7 7 11 view .LVU242
 914 0012 FFF7FEFF 		bl	__aeabi_atexit
 915              	.LVL57:
 916              	.LBB303:
 917              	.LBI303:
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 918              		.loc 6 23 5 is_stmt 1 view .LVU243
  23:../../DaisySP//Source/Synthesis/oscillator.h ****     ~Oscillator() {}
 919              		.loc 6 23 5 is_stmt 0 view .LVU244
 920              	.LBE303:
   8:analogBreakoutBoard.cpp **** GPIO board0;
 921              		.loc 7 8 19 view .LVU245
 922 0016 0C4A     		ldr	r2, .L42+4
 923 0018 0D49     		ldr	r1, .L42+12
 924 001a 0E48     		ldr	r0, .L42+16
 925 001c FFF7FEFF 		bl	__aeabi_atexit
 926              	.LVL58:
 927              	.LBB304:
 928              	.LBI304:
 929              		.file 13 "../../libDaisy//src/per/gpio.h"
   1:../../libDaisy//src/per/gpio.h **** #pragma once
   2:../../libDaisy//src/per/gpio.h **** #ifndef DSY_GPIO_H
   3:../../libDaisy//src/per/gpio.h **** #define DSY_GPIO_H
   4:../../libDaisy//src/per/gpio.h **** #include "daisy_core.h"
   5:../../libDaisy//src/per/gpio.h **** 
   6:../../libDaisy//src/per/gpio.h **** #ifdef __cplusplus
   7:../../libDaisy//src/per/gpio.h **** 
   8:../../libDaisy//src/per/gpio.h **** namespace daisy
   9:../../libDaisy//src/per/gpio.h **** {
  10:../../libDaisy//src/per/gpio.h **** /** @brief General Purpose I/O control 
  11:../../libDaisy//src/per/gpio.h ****  *  @details peripheral control over a single GPIO
  12:../../libDaisy//src/per/gpio.h ****  *  @ingroup peripheral
  13:../../libDaisy//src/per/gpio.h ****  *   
  14:../../libDaisy//src/per/gpio.h ****  *  Button Input (with internal Pullup resistor)
  15:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Input.cpp 
  16:../../libDaisy//src/per/gpio.h ****  * 
  17:../../libDaisy//src/per/gpio.h ****  *  Output Example (perfect for blinking an LED)
  18:../../libDaisy//src/per/gpio.h ****  *  @include GPIO_Output.cpp
  19:../../libDaisy//src/per/gpio.h ****  * 
  20:../../libDaisy//src/per/gpio.h **** */
  21:../../libDaisy//src/per/gpio.h **** class GPIO
  22:../../libDaisy//src/per/gpio.h **** {
  23:../../libDaisy//src/per/gpio.h ****   public:
  24:../../libDaisy//src/per/gpio.h ****     /** @brief Mode of operation for the specified GPIO */
  25:../../libDaisy//src/per/gpio.h ****     enum class Mode
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 40


  26:../../libDaisy//src/per/gpio.h ****     {
  27:../../libDaisy//src/per/gpio.h ****         INPUT,     /**< Input for reading state of pin */
  28:../../libDaisy//src/per/gpio.h ****         OUTPUT,    /**< Output w/ push-pull configuration */
  29:../../libDaisy//src/per/gpio.h ****         OUTPUT_OD, /**< Output w/ open-drain configuration */
  30:../../libDaisy//src/per/gpio.h ****         ANALOG,    /**< Analog for connection to ADC or DAC peripheral */
  31:../../libDaisy//src/per/gpio.h ****     };
  32:../../libDaisy//src/per/gpio.h **** 
  33:../../libDaisy//src/per/gpio.h ****     /** @brief Configures whether an internal Pull up or Pull down resistor is used. 
  34:../../libDaisy//src/per/gpio.h ****      *  
  35:../../libDaisy//src/per/gpio.h ****      * Internal Pull up/down resistors are typically 40k ohms, and will be between
  36:../../libDaisy//src/per/gpio.h ****      * 30k and 50k
  37:../../libDaisy//src/per/gpio.h ****      * 
  38:../../libDaisy//src/per/gpio.h ****      * When the Pin is configured in Analog mode, the pull up/down resistors are
  39:../../libDaisy//src/per/gpio.h ****      * disabled by hardware. 
  40:../../libDaisy//src/per/gpio.h ****      */
  41:../../libDaisy//src/per/gpio.h ****     enum class Pull
  42:../../libDaisy//src/per/gpio.h ****     {
  43:../../libDaisy//src/per/gpio.h ****         NOPULL,   /**< No pull up resistor */
  44:../../libDaisy//src/per/gpio.h ****         PULLUP,   /**< Internal pull up enabled */
  45:../../libDaisy//src/per/gpio.h ****         PULLDOWN, /**< Internal pull down enabled*/
  46:../../libDaisy//src/per/gpio.h ****     };
  47:../../libDaisy//src/per/gpio.h **** 
  48:../../libDaisy//src/per/gpio.h ****     /** @brief Output speed controls the drive strength, and slew rate of the pin */
  49:../../libDaisy//src/per/gpio.h ****     enum class Speed
  50:../../libDaisy//src/per/gpio.h ****     {
  51:../../libDaisy//src/per/gpio.h ****         LOW,
  52:../../libDaisy//src/per/gpio.h ****         MEDIUM,
  53:../../libDaisy//src/per/gpio.h ****         HIGH,
  54:../../libDaisy//src/per/gpio.h ****         VERY_HIGH,
  55:../../libDaisy//src/per/gpio.h ****     };
  56:../../libDaisy//src/per/gpio.h **** 
  57:../../libDaisy//src/per/gpio.h ****     /** @brief Configuration for a given GPIO */
  58:../../libDaisy//src/per/gpio.h ****     struct Config
  59:../../libDaisy//src/per/gpio.h ****     {
  60:../../libDaisy//src/per/gpio.h ****         Pin   pin;
  61:../../libDaisy//src/per/gpio.h ****         Mode  mode;
  62:../../libDaisy//src/per/gpio.h ****         Pull  pull;
  63:../../libDaisy//src/per/gpio.h ****         Speed speed;
  64:../../libDaisy//src/per/gpio.h **** 
  65:../../libDaisy//src/per/gpio.h ****         /** Constructor with no arguments will prepare an invalid GPIO set as
  66:../../libDaisy//src/per/gpio.h ****          *  an input, with no pullup. 
  67:../../libDaisy//src/per/gpio.h ****          */
  68:../../libDaisy//src/per/gpio.h ****         Config()
  69:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
  70:../../libDaisy//src/per/gpio.h ****         {
  71:../../libDaisy//src/per/gpio.h ****         }
  72:../../libDaisy//src/per/gpio.h ****     };
  73:../../libDaisy//src/per/gpio.h **** 
  74:../../libDaisy//src/per/gpio.h ****     GPIO() {}
 930              		.loc 13 74 5 is_stmt 1 view .LVU246
 931              	.LBB305:
 932              	.LBB306:
 933              	.LBI306:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 934              		.loc 13 68 9 view .LVU247
 935              	.LBB307:
 936              	.LBB308:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 41


 937              	.LBB309:
 938              	.LBI309:
 939              		.file 14 "../../libDaisy//src/daisy_core.h"
   1:../../libDaisy//src/daisy_core.h **** #pragma once
   2:../../libDaisy//src/daisy_core.h **** #ifndef DSY_CORE_HW_H
   3:../../libDaisy//src/daisy_core.h **** #define DSY_CORE_HW_H /**< & */
   4:../../libDaisy//src/daisy_core.h **** #include <stdint.h>
   5:../../libDaisy//src/daisy_core.h **** #include <stdlib.h>
   6:../../libDaisy//src/daisy_core.h **** 
   7:../../libDaisy//src/daisy_core.h **** #if defined(_MSC_VER)
   8:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE __forceinline /**< & */
   9:../../libDaisy//src/daisy_core.h **** #elif defined(__clang__)
  10:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  11:../../libDaisy//src/daisy_core.h **** #pragma clang diagnostic ignored "-Wduplicate-decl-specifier"
  12:../../libDaisy//src/daisy_core.h **** #elif defined(__GNUC__)
  13:../../libDaisy//src/daisy_core.h **** #define FORCE_INLINE inline __attribute__((always_inline)) /**< & */
  14:../../libDaisy//src/daisy_core.h **** #else
  15:../../libDaisy//src/daisy_core.h **** #error unknown compiler
  16:../../libDaisy//src/daisy_core.h **** #endif
  17:../../libDaisy//src/daisy_core.h **** 
  18:../../libDaisy//src/daisy_core.h **** /** @addtogroup utility
  19:../../libDaisy//src/daisy_core.h ****     @{
  20:../../libDaisy//src/daisy_core.h **** */
  21:../../libDaisy//src/daisy_core.h **** 
  22:../../libDaisy//src/daisy_core.h **** /** Macro for area of memory that is configured as cacheless
  23:../../libDaisy//src/daisy_core.h **** This should be used primarily for DMA buffers, and the like.
  24:../../libDaisy//src/daisy_core.h **** */
  25:../../libDaisy//src/daisy_core.h **** #define DMA_BUFFER_MEM_SECTION __attribute__((section(".sram1_bss")))
  26:../../libDaisy//src/daisy_core.h **** /** 
  27:../../libDaisy//src/daisy_core.h **** THE DTCM RAM section is also non-cached. However, is not suitable 
  28:../../libDaisy//src/daisy_core.h **** for DMA transfers. Performance is on par with internal SRAM w/ 
  29:../../libDaisy//src/daisy_core.h **** cache enabled.
  30:../../libDaisy//src/daisy_core.h **** */
  31:../../libDaisy//src/daisy_core.h **** #define DTCM_MEM_SECTION __attribute__((section(".dtcmram_bss")))
  32:../../libDaisy//src/daisy_core.h **** 
  33:../../libDaisy//src/daisy_core.h **** #define FBIPMAX 0.999985f             /**< close to 1.0f-LSB at 16 bit */
  34:../../libDaisy//src/daisy_core.h **** #define FBIPMIN (-FBIPMAX)            /**< - (1 - LSB) */
  35:../../libDaisy//src/daisy_core.h **** #define U82F_SCALE 0.0078740f         /**< 1 / 127 */
  36:../../libDaisy//src/daisy_core.h **** #define F2U8_SCALE 127.0f             /**< 128 - 1 */
  37:../../libDaisy//src/daisy_core.h **** #define S82F_SCALE 0.0078125f         /**< 1 / (2**7) */
  38:../../libDaisy//src/daisy_core.h **** #define F2S8_SCALE 127.0f             /**< (2 ** 7) - 1 */
  39:../../libDaisy//src/daisy_core.h **** #define S162F_SCALE 3.0517578125e-05f /**< 1 / (2** 15) */
  40:../../libDaisy//src/daisy_core.h **** #define F2S16_SCALE 32767.0f          /**< (2 ** 15) - 1 */
  41:../../libDaisy//src/daisy_core.h **** #define F2S24_SCALE 8388608.0f        /**< 2 ** 23 */
  42:../../libDaisy//src/daisy_core.h **** #define S242F_SCALE 1.192092896e-07f  /**< 1 / (2 ** 23) */
  43:../../libDaisy//src/daisy_core.h **** #define S24SIGN 0x800000              /**< 2 ** 23 */
  44:../../libDaisy//src/daisy_core.h **** #define S322F_SCALE 4.6566129e-10f    /**< 1 / (2** 31) */
  45:../../libDaisy//src/daisy_core.h **** #define F2S32_SCALE 2147483647.f      /**< (2 ** 31) - 1 */
  46:../../libDaisy//src/daisy_core.h **** 
  47:../../libDaisy//src/daisy_core.h **** 
  48:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  49:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  50:../../libDaisy//src/daisy_core.h **** #define OUT_L out[0]
  51:../../libDaisy//src/daisy_core.h **** 
  52:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  53:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved output buffer named out */
  54:../../libDaisy//src/daisy_core.h **** #define OUT_R out[1]
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 42


  55:../../libDaisy//src/daisy_core.h **** 
  56:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the left 
  57:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  58:../../libDaisy//src/daisy_core.h **** #define IN_L in[0]
  59:../../libDaisy//src/daisy_core.h **** 
  60:../../libDaisy//src/daisy_core.h **** /** shorthand macro for simplifying the reading of the right 
  61:../../libDaisy//src/daisy_core.h ****  *  channel of a non-interleaved input buffer named in */
  62:../../libDaisy//src/daisy_core.h **** #define IN_R in[1]
  63:../../libDaisy//src/daisy_core.h **** 
  64:../../libDaisy//src/daisy_core.h **** /** 
  65:../../libDaisy//src/daisy_core.h ****     Computes cube.
  66:../../libDaisy//src/daisy_core.h ****     \param x Number to be cubed
  67:../../libDaisy//src/daisy_core.h ****     \return x ^ 3
  68:../../libDaisy//src/daisy_core.h **** */
  69:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float cube(float x)
  70:../../libDaisy//src/daisy_core.h **** {
  71:../../libDaisy//src/daisy_core.h ****     return (x * x) * x;
  72:../../libDaisy//src/daisy_core.h **** }
  73:../../libDaisy//src/daisy_core.h **** 
  74:../../libDaisy//src/daisy_core.h **** /** 
  75:../../libDaisy//src/daisy_core.h ****     Converts unsigned 8-bit to float
  76:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  77:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  78:../../libDaisy//src/daisy_core.h **** */
  79:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float u82f(uint8_t x)
  80:../../libDaisy//src/daisy_core.h **** {
  81:../../libDaisy//src/daisy_core.h ****     return ((float)x - 127.f) * U82F_SCALE;
  82:../../libDaisy//src/daisy_core.h **** }
  83:../../libDaisy//src/daisy_core.h **** 
  84:../../libDaisy//src/daisy_core.h **** /**
  85:../../libDaisy//src/daisy_core.h ****     Converts float to unsigned 8-bit
  86:../../libDaisy//src/daisy_core.h **** */
  87:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t f2u8(float x)
  88:../../libDaisy//src/daisy_core.h **** {
  89:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
  90:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
  91:../../libDaisy//src/daisy_core.h ****     return (uint8_t)((x * F2U8_SCALE) + F2U8_SCALE);
  92:../../libDaisy//src/daisy_core.h **** }
  93:../../libDaisy//src/daisy_core.h **** 
  94:../../libDaisy//src/daisy_core.h **** 
  95:../../libDaisy//src/daisy_core.h **** /** 
  96:../../libDaisy//src/daisy_core.h ****     Converts Signed 8-bit to float
  97:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
  98:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
  99:../../libDaisy//src/daisy_core.h **** */
 100:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s82f(int8_t x)
 101:../../libDaisy//src/daisy_core.h **** {
 102:../../libDaisy//src/daisy_core.h ****     return (float)x * S82F_SCALE;
 103:../../libDaisy//src/daisy_core.h **** }
 104:../../libDaisy//src/daisy_core.h **** 
 105:../../libDaisy//src/daisy_core.h **** /**
 106:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 8-bit
 107:../../libDaisy//src/daisy_core.h **** */
 108:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int8_t f2s8(float x)
 109:../../libDaisy//src/daisy_core.h **** {
 110:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 111:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 43


 112:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S8_SCALE);
 113:../../libDaisy//src/daisy_core.h **** }
 114:../../libDaisy//src/daisy_core.h **** 
 115:../../libDaisy//src/daisy_core.h **** /** 
 116:../../libDaisy//src/daisy_core.h ****     Converts Signed 16-bit to float
 117:../../libDaisy//src/daisy_core.h ****     \param x Number to be scaled.
 118:../../libDaisy//src/daisy_core.h ****     \return Scaled number.
 119:../../libDaisy//src/daisy_core.h **** */
 120:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s162f(int16_t x)
 121:../../libDaisy//src/daisy_core.h **** {
 122:../../libDaisy//src/daisy_core.h ****     return (float)x * S162F_SCALE;
 123:../../libDaisy//src/daisy_core.h **** }
 124:../../libDaisy//src/daisy_core.h **** 
 125:../../libDaisy//src/daisy_core.h **** /**
 126:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 16-bit
 127:../../libDaisy//src/daisy_core.h **** */
 128:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int16_t f2s16(float x)
 129:../../libDaisy//src/daisy_core.h **** {
 130:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 131:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 132:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S16_SCALE);
 133:../../libDaisy//src/daisy_core.h **** }
 134:../../libDaisy//src/daisy_core.h **** 
 135:../../libDaisy//src/daisy_core.h **** /**
 136:../../libDaisy//src/daisy_core.h ****     Converts Signed 24-bit to float
 137:../../libDaisy//src/daisy_core.h ****  */
 138:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s242f(int32_t x)
 139:../../libDaisy//src/daisy_core.h **** {
 140:../../libDaisy//src/daisy_core.h ****     x = (x ^ S24SIGN) - S24SIGN; //sign extend aka ((x<<8)>>8)
 141:../../libDaisy//src/daisy_core.h ****     return (float)x * S242F_SCALE;
 142:../../libDaisy//src/daisy_core.h **** }
 143:../../libDaisy//src/daisy_core.h **** /**
 144:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 145:../../libDaisy//src/daisy_core.h ****  */
 146:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s24(float x)
 147:../../libDaisy//src/daisy_core.h **** {
 148:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 149:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 150:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S24_SCALE);
 151:../../libDaisy//src/daisy_core.h **** }
 152:../../libDaisy//src/daisy_core.h **** 
 153:../../libDaisy//src/daisy_core.h **** /**
 154:../../libDaisy//src/daisy_core.h ****     Converts Signed 32-bit to float
 155:../../libDaisy//src/daisy_core.h ****  */
 156:../../libDaisy//src/daisy_core.h **** FORCE_INLINE float s322f(int32_t x)
 157:../../libDaisy//src/daisy_core.h **** {
 158:../../libDaisy//src/daisy_core.h ****     return (float)x * S322F_SCALE;
 159:../../libDaisy//src/daisy_core.h **** }
 160:../../libDaisy//src/daisy_core.h **** /**
 161:../../libDaisy//src/daisy_core.h ****     Converts float to Signed 24-bit
 162:../../libDaisy//src/daisy_core.h ****  */
 163:../../libDaisy//src/daisy_core.h **** FORCE_INLINE int32_t f2s32(float x)
 164:../../libDaisy//src/daisy_core.h **** {
 165:../../libDaisy//src/daisy_core.h ****     x = x <= FBIPMIN ? FBIPMIN : x;
 166:../../libDaisy//src/daisy_core.h ****     x = x >= FBIPMAX ? FBIPMAX : x;
 167:../../libDaisy//src/daisy_core.h ****     return (int32_t)(x * F2S32_SCALE);
 168:../../libDaisy//src/daisy_core.h **** }
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 44


 169:../../libDaisy//src/daisy_core.h **** 
 170:../../libDaisy//src/daisy_core.h **** 
 171:../../libDaisy//src/daisy_core.h **** /** Enums and a simple struct for defining a hardware pin on the MCU
 172:../../libDaisy//src/daisy_core.h ****  *  These correlate with the stm32 datasheet, and are used to configure
 173:../../libDaisy//src/daisy_core.h ****  *  the hardware.
 174:../../libDaisy//src/daisy_core.h ****  * 
 175:../../libDaisy//src/daisy_core.h ****  *  This along with the dsy_gpio_pin class should no longer be used.
 176:../../libDaisy//src/daisy_core.h ****  *  They are available for backwards compatability. 
 177:../../libDaisy//src/daisy_core.h ****  * 
 178:../../libDaisy//src/daisy_core.h ****  *  Please use GPIOPort enum and the Pin struct instead.
 179:../../libDaisy//src/daisy_core.h ****  */
 180:../../libDaisy//src/daisy_core.h **** typedef enum
 181:../../libDaisy//src/daisy_core.h **** {
 182:../../libDaisy//src/daisy_core.h ****     DSY_GPIOA, /**< & */
 183:../../libDaisy//src/daisy_core.h ****     DSY_GPIOB, /**< & */
 184:../../libDaisy//src/daisy_core.h ****     DSY_GPIOC, /**< & */
 185:../../libDaisy//src/daisy_core.h ****     DSY_GPIOD, /**< & */
 186:../../libDaisy//src/daisy_core.h ****     DSY_GPIOE, /**< & */
 187:../../libDaisy//src/daisy_core.h ****     DSY_GPIOF, /**< & */
 188:../../libDaisy//src/daisy_core.h ****     DSY_GPIOG, /**< & */
 189:../../libDaisy//src/daisy_core.h ****     DSY_GPIOH, /**< & */
 190:../../libDaisy//src/daisy_core.h ****     DSY_GPIOI, /**< & */
 191:../../libDaisy//src/daisy_core.h ****     DSY_GPIOJ, /**< & */
 192:../../libDaisy//src/daisy_core.h ****     DSY_GPIOK, /**< & */
 193:../../libDaisy//src/daisy_core.h ****     DSY_GPIOX, /** This is a non-existant port for unsupported bits of hardware. */
 194:../../libDaisy//src/daisy_core.h ****     DSY_GPIO_LAST, /** Final enum member */
 195:../../libDaisy//src/daisy_core.h **** } dsy_gpio_port;
 196:../../libDaisy//src/daisy_core.h **** 
 197:../../libDaisy//src/daisy_core.h **** /** Hardware define pins 
 198:../../libDaisy//src/daisy_core.h ****  *  
 199:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 200:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 201:../../libDaisy//src/daisy_core.h ****  * 
 202:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 203:../../libDaisy//src/daisy_core.h ****  */
 204:../../libDaisy//src/daisy_core.h **** typedef struct
 205:../../libDaisy//src/daisy_core.h **** {
 206:../../libDaisy//src/daisy_core.h ****     dsy_gpio_port port; /**< & */
 207:../../libDaisy//src/daisy_core.h ****     uint8_t       pin;  /**< number 0-15 */
 208:../../libDaisy//src/daisy_core.h **** } dsy_gpio_pin;
 209:../../libDaisy//src/daisy_core.h **** 
 210:../../libDaisy//src/daisy_core.h **** /** Helper for creating pins from port/pin combos easily
 211:../../libDaisy//src/daisy_core.h ****  * 
 212:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 213:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 214:../../libDaisy//src/daisy_core.h ****  * 
 215:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 216:../../libDaisy//src/daisy_core.h **** */
 217:../../libDaisy//src/daisy_core.h **** FORCE_INLINE dsy_gpio_pin dsy_pin(dsy_gpio_port port, uint8_t pin)
 218:../../libDaisy//src/daisy_core.h **** {
 219:../../libDaisy//src/daisy_core.h ****     dsy_gpio_pin p;
 220:../../libDaisy//src/daisy_core.h ****     p.port = port;
 221:../../libDaisy//src/daisy_core.h ****     p.pin  = pin;
 222:../../libDaisy//src/daisy_core.h ****     return p;
 223:../../libDaisy//src/daisy_core.h **** }
 224:../../libDaisy//src/daisy_core.h **** 
 225:../../libDaisy//src/daisy_core.h **** /** Helper for testing sameness of two dsy_gpio_pins
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 45


 226:../../libDaisy//src/daisy_core.h ****  *  \return    1 if same, 0 if different
 227:../../libDaisy//src/daisy_core.h ****  * 
 228:../../libDaisy//src/daisy_core.h ****  *  The dsy_gpio_pin struct should no longer be used, and is only available for
 229:../../libDaisy//src/daisy_core.h ****  *  backwards compatability.
 230:../../libDaisy//src/daisy_core.h ****  * 
 231:../../libDaisy//src/daisy_core.h ****  *  Please use Pin struct instead.
 232:../../libDaisy//src/daisy_core.h ****  */
 233:../../libDaisy//src/daisy_core.h **** FORCE_INLINE uint8_t dsy_pin_cmp(dsy_gpio_pin *a, dsy_gpio_pin *b)
 234:../../libDaisy//src/daisy_core.h **** {
 235:../../libDaisy//src/daisy_core.h ****     return ((a->port == b->port) && (a->pin == b->pin));
 236:../../libDaisy//src/daisy_core.h **** }
 237:../../libDaisy//src/daisy_core.h **** 
 238:../../libDaisy//src/daisy_core.h **** #ifdef __cplusplus
 239:../../libDaisy//src/daisy_core.h **** 
 240:../../libDaisy//src/daisy_core.h **** namespace daisy
 241:../../libDaisy//src/daisy_core.h **** {
 242:../../libDaisy//src/daisy_core.h **** /** @brief GPIO Port names */
 243:../../libDaisy//src/daisy_core.h **** enum GPIOPort
 244:../../libDaisy//src/daisy_core.h **** {
 245:../../libDaisy//src/daisy_core.h ****     PORTA, /**< Port A */
 246:../../libDaisy//src/daisy_core.h ****     PORTB, /**< Port B */
 247:../../libDaisy//src/daisy_core.h ****     PORTC, /**< Port C */
 248:../../libDaisy//src/daisy_core.h ****     PORTD, /**< Port D */
 249:../../libDaisy//src/daisy_core.h ****     PORTE, /**< Port E */
 250:../../libDaisy//src/daisy_core.h ****     PORTF, /**< Port F */
 251:../../libDaisy//src/daisy_core.h ****     PORTG, /**< Port G */
 252:../../libDaisy//src/daisy_core.h ****     PORTH, /**< Port H */
 253:../../libDaisy//src/daisy_core.h ****     PORTI, /**< Port I */
 254:../../libDaisy//src/daisy_core.h ****     PORTJ, /**< Port J */
 255:../../libDaisy//src/daisy_core.h ****     PORTK, /**< Port K */
 256:../../libDaisy//src/daisy_core.h ****     PORTX, /**< Used as a dummy port to signal an invalid pin. */
 257:../../libDaisy//src/daisy_core.h **** };
 258:../../libDaisy//src/daisy_core.h **** 
 259:../../libDaisy//src/daisy_core.h **** /** @brief representation of hardware port/pin combination */
 260:../../libDaisy//src/daisy_core.h **** struct Pin
 261:../../libDaisy//src/daisy_core.h **** {
 262:../../libDaisy//src/daisy_core.h ****     GPIOPort port;
 263:../../libDaisy//src/daisy_core.h ****     uint8_t  pin;
 264:../../libDaisy//src/daisy_core.h **** 
 265:../../libDaisy//src/daisy_core.h ****     /** @brief Constructor creates a valid pin. 
 266:../../libDaisy//src/daisy_core.h ****      *  @param pt GPIOPort between PA, and PK corresponding to STM32 Port.
 267:../../libDaisy//src/daisy_core.h ****      *  @param pn pin number in range of 0-15
 268:../../libDaisy//src/daisy_core.h ****     */
 269:../../libDaisy//src/daisy_core.h ****     constexpr Pin(const GPIOPort pt, const uint8_t pn) : port(pt), pin(pn) {}
 270:../../libDaisy//src/daisy_core.h **** 
 271:../../libDaisy//src/daisy_core.h ****     /** @brief Basic Constructor creates an invalid Pin object */
 272:../../libDaisy//src/daisy_core.h ****     constexpr Pin() : port(PORTX), pin(255) {}
 940              		.loc 14 272 15 view .LVU248
 941              		.loc 14 272 15 is_stmt 0 view .LVU249
 942              	.LBE309:
 943              	.LBE308:
 944              	.LBE307:
 945              	.LBE306:
 946              		.loc 13 74 12 view .LVU250
 947 0020 0D49     		ldr	r1, .L42+20
 948 0022 4FF60B70 		movw	r0, #65291
 949              	.LBE305:
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 46


 950              	.LBE304:
 951              	.LBB318:
 952              	.LBB319:
 953 0026 0D4A     		ldr	r2, .L42+24
 954              	.LBE319:
 955              	.LBE318:
 956              	.LBB329:
 957              	.LBB330:
 958 0028 0D4B     		ldr	r3, .L42+28
 959              	.LBE330:
 960              	.LBE329:
 961              	.LBB336:
 962              	.LBB316:
 963              	.LBB314:
 964              	.LBB312:
 965              	.LBB310:
  69:../../libDaisy//src/per/gpio.h ****         {
 966              		.loc 13 69 73 view .LVU251
 967 002a CC60     		str	r4, [r1, #12]
 968              	.LVL59:
  69:../../libDaisy//src/per/gpio.h ****         {
 969              		.loc 13 69 73 view .LVU252
 970              	.LBE310:
 971              	.LBE312:
 972              	.LBE314:
 973              	.LBE316:
 974              	.LBE336:
 975              	.LBB337:
 976              	.LBI318:
 977              		.loc 13 74 5 is_stmt 1 view .LVU253
 978              	.LBB327:
 979              	.LBB320:
 980              	.LBI320:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 981              		.loc 13 68 9 view .LVU254
 982              	.LBB321:
 983              	.LBB322:
 984              	.LBB323:
 985              	.LBI323:
 986              		.loc 14 272 15 view .LVU255
 987              		.loc 14 272 15 is_stmt 0 view .LVU256
 988              	.LBE323:
 989              	.LBE322:
 990              	.LBE321:
 991              	.LBE320:
 992              	.LBE327:
 993              	.LBE337:
 994              	.LBB338:
 995              	.LBB317:
 996              		.loc 13 74 12 view .LVU257
 997 002c 0860     		str	r0, [r1]
 998              	.LBB315:
 999              	.LBB313:
 1000              	.LBB311:
  69:../../libDaisy//src/per/gpio.h ****         {
 1001              		.loc 13 69 73 view .LVU258
 1002 002e C1E90144 		strd	r4, r4, [r1, #4]
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 47


 1003              	.LBE311:
 1004              	.LBE313:
 1005              	.LBE315:
 1006              	.LBE317:
 1007              	.LBE338:
 1008              	.LBB339:
 1009              	.LBB328:
 1010              	.LBB326:
 1011              	.LBB325:
 1012              	.LBB324:
 1013 0032 C2E90004 		strd	r0, r4, [r2]
 1014 0036 C2E90244 		strd	r4, r4, [r2, #8]
 1015              	.LVL60:
  69:../../libDaisy//src/per/gpio.h ****         {
 1016              		.loc 13 69 73 view .LVU259
 1017              	.LBE324:
 1018              	.LBE325:
 1019              	.LBE326:
 1020              	.LBE328:
 1021              	.LBE339:
 1022              	.LBB340:
 1023              	.LBI329:
 1024              		.loc 13 74 5 is_stmt 1 view .LVU260
 1025              	.LBB335:
 1026              	.LBB331:
 1027              	.LBI331:
  68:../../libDaisy//src/per/gpio.h ****         : pin(), mode(Mode::INPUT), pull(Pull::NOPULL), speed(Speed::LOW)
 1028              		.loc 13 68 9 view .LVU261
 1029              	.LBB332:
 1030              	.LBB333:
 1031              	.LBB334:
 1032              	.LBI334:
 1033              		.loc 14 272 15 view .LVU262
 1034              		.loc 14 272 15 is_stmt 0 view .LVU263
 1035              	.LBE334:
  69:../../libDaisy//src/per/gpio.h ****         {
 1036              		.loc 13 69 73 view .LVU264
 1037 003a C3E90004 		strd	r0, r4, [r3]
 1038 003e C3E90244 		strd	r4, r4, [r3, #8]
 1039              	.LVL61:
  69:../../libDaisy//src/per/gpio.h ****         {
 1040              		.loc 13 69 73 view .LVU265
 1041              	.LBE333:
 1042              	.LBE332:
 1043              	.LBE331:
 1044              	.LBE335:
 1045              	.LBE340:
 1046              	.LBE341:
 1047              	.LBE342:
 1048              		.loc 7 96 1 view .LVU266
 1049 0042 10BD     		pop	{r4, pc}
 1050              	.L43:
 1051              		.align	2
 1052              	.L42:
 1053 0044 00000000 		.word	.LANCHOR3
 1054 0048 00000000 		.word	__dso_handle
 1055 004c 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 48


 1056 0050 00000000 		.word	_ZN7daisysp10OscillatorD1Ev
 1057 0054 00000000 		.word	.LANCHOR4
 1058 0058 00000000 		.word	.LANCHOR0
 1059 005c 00000000 		.word	.LANCHOR1
 1060 0060 00000000 		.word	.LANCHOR2
 1061              		.cfi_endproc
 1062              	.LFE5248:
 1064              		.section	.init_array,"aw",%init_array
 1065              		.align	2
 1066 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 1067              		.global	board2
 1068              		.global	board1
 1069              		.global	board0
 1070              		.global	hw
 1071              		.section	.bss._ZL3osc,"aw",%nobits
 1072              		.align	2
 1073              		.set	.LANCHOR4,. + 0
 1076              	_ZL3osc:
 1077 0000 00000000 		.space	44
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1078              		.section	.bss.board0,"aw",%nobits
 1079              		.align	2
 1080              		.set	.LANCHOR0,. + 0
 1083              	board0:
 1084 0000 00000000 		.space	20
 1084      00000000 
 1084      00000000 
 1084      00000000 
 1084      00000000 
 1085              		.section	.bss.board1,"aw",%nobits
 1086              		.align	2
 1087              		.set	.LANCHOR1,. + 0
 1090              	board1:
 1091 0000 00000000 		.space	20
 1091      00000000 
 1091      00000000 
 1091      00000000 
 1091      00000000 
 1092              		.section	.bss.board2,"aw",%nobits
 1093              		.align	2
 1094              		.set	.LANCHOR2,. + 0
 1097              	board2:
 1098 0000 00000000 		.space	20
 1098      00000000 
 1098      00000000 
 1098      00000000 
 1098      00000000 
 1099              		.section	.bss.hw,"aw",%nobits
 1100              		.align	2
 1101              		.set	.LANCHOR3,. + 0
 1104              	hw:
 1105 0000 00000000 		.space	64
 1105      00000000 
 1105      00000000 
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 49


 1105      00000000 
 1105      00000000 
 1106              		.section	.rodata._ZN5daisy4seedL2D1E,"a"
 1107              		.align	2
 1108              		.set	.LANCHOR5,. + 0
 1111              	_ZN5daisy4seedL2D1E:
 1112 0000 02       		.byte	2
 1113 0001 0B       		.byte	11
 1114              		.section	.rodata._ZN5daisy4seedL2D2E,"a"
 1115              		.align	2
 1116              		.set	.LANCHOR6,. + 0
 1119              	_ZN5daisy4seedL2D2E:
 1120 0000 02       		.byte	2
 1121 0001 0A       		.byte	10
 1122              		.section	.rodata._ZN5daisy4seedL2D3E,"a"
 1123              		.align	2
 1124              		.set	.LANCHOR7,. + 0
 1127              	_ZN5daisy4seedL2D3E:
 1128 0000 02       		.byte	2
 1129 0001 09       		.byte	9
 1130              		.text
 1131              	.Letext0:
 1132              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 1133              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 1134              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 1135              		.file 18 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 1136              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 1137              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 1138              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 1139              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 1140              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 1141              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 1142              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 1143              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 1144              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 1145              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 1146              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 1147              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 1148              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 1149              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 1150              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 1151              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 1152              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 1153              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 1154              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 1155              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 1156              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 1157              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 1158              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 1159              		.file 42 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 1160              		.file 43 "../../libDaisy//src/per/tim.h"
 1161              		.file 44 "../../libDaisy//src/hid/logger_impl.h"
 1162              		.file 45 "../../libDaisy//src/util/wav_format.h"
 1163              		.file 46 "../../libDaisy//src/dev/max11300.h"
 1164              		.file 47 "../../libDaisy//src/hid/logger.h"
 1165              		.file 48 "../../libDaisy//src/dev/sdram.h"
 1166              		.file 49 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 50


 1167              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 1168              		.file 51 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 1169              		.file 52 "../../DaisySP//Source/Control/adenv.h"
 1170              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 1171              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 1172              		.file 55 "../../libDaisy//src/dev/sr_595.h"
 1173              		.file 56 "<built-in>"
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 51


DEFINED SYMBOLS
                            *ABS*:00000000 analogBreakoutBoard.cpp
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:67     .text._ZN7daisysp10OscillatorD2Ev:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD2Ev
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:75     .text._ZN7daisysp10OscillatorD2Ev:00000000 _ZN7daisysp10OscillatorD1Ev
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:92     .text._Z17getBoardKnobValuei:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:100    .text._Z17getBoardKnobValuei:00000000 _Z17getBoardKnobValuei
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:227    .text._Z17getBoardKnobValuei:00000064 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:236    .rodata._Z13AudioCallbackPKPKfPPfj.str1.4:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:240    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:248    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:506    .text._Z13AudioCallbackPKPKfPPfj:000000b0 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:516    .text.startup.main:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:524    .text.startup.main:00000000 main
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:776    .text.startup.main:000000e8 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:792    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:799    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1053   .text.startup._GLOBAL__sub_I_hw:00000044 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1065   .init_array:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1097   .bss.board2:00000000 board2
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1090   .bss.board1:00000000 board1
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1083   .bss.board0:00000000 board0
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1104   .bss.hw:00000000 hw
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1072   .bss._ZL3osc:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1076   .bss._ZL3osc:00000000 _ZL3osc
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1079   .bss.board0:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1086   .bss.board1:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1093   .bss.board2:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1100   .bss.hw:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1107   .rodata._ZN5daisy4seedL2D1E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1111   .rodata._ZN5daisy4seedL2D1E:00000000 _ZN5daisy4seedL2D1E
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1115   .rodata._ZN5daisy4seedL2D2E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1119   .rodata._ZN5daisy4seedL2D2E:00000000 _ZN5daisy4seedL2D2E
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1123   .rodata._ZN5daisy4seedL2D3E:00000000 $d
C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s:1127   .rodata._ZN5daisy4seedL2D3E:00000000 _ZN5daisy4seedL2D3E
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp10OscillatorD5Ev

UNDEFINED SYMBOLS
_ZN5daisy4GPIO5WriteEb
_ZNK5daisy9AdcHandle8GetFloatEh
_ZN5daisy6LoggerILNS_17LoggerDestinationE1EE9PrintLineEPKcz
_ZN7daisysp10Oscillator12CalcPhaseIncEf
_ZN7daisysp10Oscillator7ProcessEv
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN5daisy9DaisySeed6GetPinEh
_ZN5daisy16AdcChannelConfig10InitSingleE12dsy_gpio_pinNS0_15ConversionSpeedE
_ZN5daisy9AdcHandle4InitEPNS_16AdcChannelConfigEjNS0_12OverSamplingE
_ZN5daisy9AdcHandle5StartEv
_ZN5daisy4GPIO4InitENS_3PinENS0_4ModeENS0_4PullENS0_5SpeedE
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed18SetAudioSampleRateENS_9SaiHandle6Config10SampleRateE
ARM GAS  C:\Users\jaude\AppData\Local\Temp\ccQZecDe.s 			page 52


_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
