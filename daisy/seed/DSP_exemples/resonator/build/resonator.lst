ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"resonator.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../../libDaisy/src/daisy_seed.h"
   1:../../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../../libDaisy/src/daisy_seed.h **** 
   5:../../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../../libDaisy/src/daisy_seed.h **** 
   7:../../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../../libDaisy/src/daisy_seed.h **** 
  10:../../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../../libDaisy/src/daisy_seed.h **** {
  12:../../../libDaisy/src/daisy_seed.h **** /**
  13:../../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../../libDaisy/src/daisy_seed.h **** 
  16:../../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../../libDaisy/src/daisy_seed.h **** */
  18:../../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../../libDaisy/src/daisy_seed.h **** {
  20:../../../libDaisy/src/daisy_seed.h ****   public:
  21:../../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB88:
  36              	.LBI88:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 2


  37              		.file 2 "../../../libDaisy/src/sys/system.h"
   1:../../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../../libDaisy/src/sys/system.h **** 
   4:../../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../../libDaisy/src/sys/system.h **** 
   6:../../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../../libDaisy/src/sys/system.h **** 
   9:../../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../../libDaisy/src/sys/system.h **** {
  11:../../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../../libDaisy/src/sys/system.h ****  **
  15:../../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../../libDaisy/src/sys/system.h ****  */
  18:../../../libDaisy/src/sys/system.h **** class System
  19:../../../libDaisy/src/sys/system.h **** {
  20:../../../libDaisy/src/sys/system.h ****   public:
  21:../../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../../libDaisy/src/sys/system.h ****     struct Config
  23:../../../libDaisy/src/sys/system.h ****     {
  24:../../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../../libDaisy/src/sys/system.h ****         {
  27:../../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../../libDaisy/src/sys/system.h ****         };
  30:../../../libDaisy/src/sys/system.h **** 
  31:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../../libDaisy/src/sys/system.h ****          ** */
  35:../../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../../libDaisy/src/sys/system.h ****         {
  37:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../../libDaisy/src/sys/system.h ****         }
  42:../../../libDaisy/src/sys/system.h **** 
  43:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../../libDaisy/src/sys/system.h ****          ** */
  47:../../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../../libDaisy/src/sys/system.h ****         {
  49:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../../libDaisy/src/sys/system.h ****         }
  54:../../../libDaisy/src/sys/system.h **** 
  55:../../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../../libDaisy/src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 3


  57:../../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../../libDaisy/src/sys/system.h ****     };
  60:../../../libDaisy/src/sys/system.h **** 
  61:../../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../../libDaisy/src/sys/system.h ****     {
  64:../../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../../libDaisy/src/sys/system.h ****     };
  74:../../../libDaisy/src/sys/system.h **** 
  75:../../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../../libDaisy/src/sys/system.h ****     {
  78:../../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../../../libDaisy/src/sys/system.h ****         {
  80:../../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../../libDaisy/src/sys/system.h ****         } status;
  85:../../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../../libDaisy/src/sys/system.h ****         {
  88:../../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../../libDaisy/src/sys/system.h ****             LAST
  93:../../../libDaisy/src/sys/system.h ****         } version;
  94:../../../libDaisy/src/sys/system.h ****     };
  95:../../../libDaisy/src/sys/system.h **** 
  96:../../../libDaisy/src/sys/system.h ****     System() {}
  97:../../../libDaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE88:
  41              	.LBB89:
  42              	.LBI89:
  43              		.file 3 "../../../libDaisy/src/hid/usb.h"
   1:../../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../../libDaisy/src/hid/usb.h **** 
   7:../../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../../libDaisy/src/hid/usb.h ****     @{
  10:../../../libDaisy/src/hid/usb.h **** */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 4


  11:../../../libDaisy/src/hid/usb.h **** 
  12:../../../libDaisy/src/hid/usb.h **** {
  13:../../../libDaisy/src/hid/usb.h **** /** 
  14:../../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../../libDaisy/src/hid/usb.h **** */
  18:../../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../../libDaisy/src/hid/usb.h **** {
  20:../../../libDaisy/src/hid/usb.h ****   public:
  21:../../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../../libDaisy/src/hid/usb.h ****     {
  24:../../../libDaisy/src/hid/usb.h ****         OK,
  25:../../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../../libDaisy/src/hid/usb.h ****     };
  27:../../../libDaisy/src/hid/usb.h **** 
  28:../../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../../libDaisy/src/hid/usb.h ****     {
  31:../../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../../libDaisy/src/hid/usb.h ****     };
  35:../../../libDaisy/src/hid/usb.h **** 
  36:../../../libDaisy/src/hid/usb.h **** 
  37:../../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../../libDaisy/src/hid/usb.h **** 
  40:../../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../../libDaisy/src/hid/usb.h **** 
  42:../../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE89:
  47              	.LBB90:
  48              	.LBI90:
  49              		.file 4 "../../../libDaisy/src/per/adc.h"
   1:../../../libDaisy/src/per/adc.h **** #pragma once
   2:../../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../../libDaisy/src/per/adc.h **** 
   9:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../../libDaisy/src/per/adc.h **** 
  11:../../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../../libDaisy/src/per/adc.h **** {
  13:../../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../../libDaisy/src/per/adc.h ****     @{
  15:../../../libDaisy/src/per/adc.h **** */
  16:../../../libDaisy/src/per/adc.h **** 
  17:../../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 5


  20:../../../libDaisy/src/per/adc.h **** */
  21:../../../libDaisy/src/per/adc.h **** 
  22:../../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../../libDaisy/src/per/adc.h **** */
  31:../../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../../libDaisy/src/per/adc.h **** {
  33:../../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../../libDaisy/src/per/adc.h ****     {
  36:../../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../../libDaisy/src/per/adc.h ****     };
  41:../../../libDaisy/src/per/adc.h **** 
  42:../../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../../libDaisy/src/per/adc.h ****     {
  45:../../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../../libDaisy/src/per/adc.h ****     };
  54:../../../libDaisy/src/per/adc.h **** 
  55:../../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../../libDaisy/src/per/adc.h ****      */
  59:../../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../../libDaisy/src/per/adc.h **** 
  61:../../../libDaisy/src/per/adc.h ****     /** 
  62:../../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../../libDaisy/src/per/adc.h ****     */
  74:../../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 6


  77:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../../libDaisy/src/per/adc.h **** 
  81:../../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../../libDaisy/src/per/adc.h **** };
  86:../../../libDaisy/src/per/adc.h **** 
  87:../../../libDaisy/src/per/adc.h **** /**
  88:../../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../../libDaisy/src/per/adc.h **** */
  90:../../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../../libDaisy/src/per/adc.h **** {
  92:../../../libDaisy/src/per/adc.h ****   public:
  93:../../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../../libDaisy/src/per/adc.h ****     {
  96:../../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../../libDaisy/src/per/adc.h ****     };
 108:../../../libDaisy/src/per/adc.h **** 
 109:../../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE90:
  53              	.LBB91:
  54              	.LBI91:
  55              		.file 5 "../../../libDaisy/src/hid/audio.h"
   1:../../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../../libDaisy/src/hid/audio.h **** 
   4:../../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../../libDaisy/src/hid/audio.h **** 
   6:../../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../../libDaisy/src/hid/audio.h **** {
   8:../../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 7


  18:../../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../../libDaisy/src/hid/audio.h ****  */
  22:../../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../../libDaisy/src/hid/audio.h **** {
  24:../../../libDaisy/src/hid/audio.h ****   public:
  25:../../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../../libDaisy/src/hid/audio.h ****     {
  29:../../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../../libDaisy/src/hid/audio.h **** 
  32:../../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../../libDaisy/src/hid/audio.h **** 
  35:../../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../../libDaisy/src/hid/audio.h **** 
  38:../../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../../libDaisy/src/hid/audio.h ****          */
  41:../../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../../libDaisy/src/hid/audio.h **** 
  43:../../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../../libDaisy/src/hid/audio.h ****         Config()
  45:../../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../../libDaisy/src/hid/audio.h ****         {
  50:../../../libDaisy/src/hid/audio.h ****         }
  51:../../../libDaisy/src/hid/audio.h ****     };
  52:../../../libDaisy/src/hid/audio.h **** 
  53:../../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../../libDaisy/src/hid/audio.h ****     {
  55:../../../libDaisy/src/hid/audio.h ****         OK,
  56:../../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../../libDaisy/src/hid/audio.h ****     };
  58:../../../libDaisy/src/hid/audio.h **** 
  59:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../../libDaisy/src/hid/audio.h ****      */
  63:../../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../../libDaisy/src/hid/audio.h **** 
  65:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../../libDaisy/src/hid/audio.h ****      */
  68:../../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../../libDaisy/src/hid/audio.h **** 
  70:../../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../../libDaisy/src/hid/audio.h ****      */
  73:../../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 8


  75:../../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../../libDaisy/src/hid/audio.h **** 
  77:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../../libDaisy/src/hid/audio.h ****     */
  81:../../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../../libDaisy/src/hid/audio.h **** 
  83:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../../libDaisy/src/hid/audio.h ****     */
  86:../../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../../libDaisy/src/hid/audio.h **** 
  88:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../../libDaisy/src/hid/audio.h ****      */
  91:../../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../../libDaisy/src/hid/audio.h **** 
  95:../../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE91:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp9ResonatorD2Ev,"axG",%progbits,_ZN7daisysp9ResonatorD5Ev,comdat
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp9ResonatorD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp9ResonatorD2Ev:
  76              	.LVL1:
  77              	.LFB4549:
  78              		.file 6 "../../../DaisySP/Source/PhysicalModeling/resonator.h"
   1:../../../DaisySP/Source/PhysicalModeling/resonator.h **** /*
   2:../../../DaisySP/Source/PhysicalModeling/resonator.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
   4:../../../DaisySP/Source/PhysicalModeling/resonator.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/PhysicalModeling/resonator.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/PhysicalModeling/resonator.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/PhysicalModeling/resonator.h **** */
   8:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
   9:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #pragma once
  10:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #ifndef DSY_RESONATOR_H
  11:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #define DSY_RESONATOR_H
  12:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  13:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #include <stdint.h>
  14:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #include <stddef.h>
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 9


  15:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #include "Utility/dsp.h"
  16:../../../DaisySP/Source/PhysicalModeling/resonator.h **** #ifdef __cplusplus
  17:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  18:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  19:../../../DaisySP/Source/PhysicalModeling/resonator.h **** /** @file resonator.h */
  20:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  21:../../../DaisySP/Source/PhysicalModeling/resonator.h **** namespace daisysp
  22:../../../DaisySP/Source/PhysicalModeling/resonator.h **** {
  23:../../../DaisySP/Source/PhysicalModeling/resonator.h **** // We render 4 modes simultaneously since there are enough registers to hold
  24:../../../DaisySP/Source/PhysicalModeling/resonator.h **** // all state variables.
  25:../../../DaisySP/Source/PhysicalModeling/resonator.h **** /**  
  26:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @brief SVF for use in the Resonator Class \n 
  27:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @author Ported by Ben Sergentanis 
  28:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @date Jan 2021 
  29:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        Ported from pichenettes/eurorack/plaits/dsp/physical_modelling/resonator.h \n
  30:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        to an independent module. \n
  31:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        Original code written by Emilie Gillet in 2016. \n
  32:../../../DaisySP/Source/PhysicalModeling/resonator.h **** */
  33:../../../DaisySP/Source/PhysicalModeling/resonator.h **** template <int batch_size>
  34:../../../DaisySP/Source/PhysicalModeling/resonator.h **** class ResonatorSvf
  35:../../../DaisySP/Source/PhysicalModeling/resonator.h **** {
  36:../../../DaisySP/Source/PhysicalModeling/resonator.h ****   public:
  37:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     enum FilterMode
  38:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     {
  39:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         LOW_PASS,
  40:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         BAND_PASS,
  41:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         BAND_PASS_NORMALIZED,
  42:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         HIGH_PASS
  43:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     };
  44:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  45:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     ResonatorSvf() {}
  46:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     ~ResonatorSvf() {}
  47:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  48:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     void Init()
  49:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     {
  50:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         for(int i = 0; i < batch_size; ++i)
  51:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
  52:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_1_[i] = state_2_[i] = 0.0f;
  53:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
  54:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     }
  55:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  56:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     template <FilterMode mode, bool add>
  57:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     void Process(const float* f,
  58:../../../DaisySP/Source/PhysicalModeling/resonator.h ****                  const float* q,
  59:../../../DaisySP/Source/PhysicalModeling/resonator.h ****                  const float* gain,
  60:../../../DaisySP/Source/PhysicalModeling/resonator.h ****                  const float  in,
  61:../../../DaisySP/Source/PhysicalModeling/resonator.h ****                  float*       out)
  62:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     {
  63:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float g[batch_size];
  64:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float r[batch_size];
  65:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float r_plus_g[batch_size];
  66:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float h[batch_size];
  67:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float state_1[batch_size];
  68:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float state_2[batch_size];
  69:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float gains[batch_size];
  70:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         for(int i = 0; i < batch_size; ++i)
  71:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 10


  72:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             g[i]        = fasttan(f[i]);
  73:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             r[i]        = 1.0f / q[i];
  74:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             h[i]        = 1.0f / (1.0f + r[i] * g[i] + g[i] * g[i]);
  75:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             r_plus_g[i] = r[i] + g[i];
  76:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_1[i]  = state_1_[i];
  77:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_2[i]  = state_2_[i];
  78:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             gains[i]    = gain[i];
  79:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
  80:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
  81:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float s_in  = in;
  82:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float s_out = 0.0f;
  83:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         for(int i = 0; i < batch_size; ++i)
  84:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
  85:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             const float hp
  86:../../../DaisySP/Source/PhysicalModeling/resonator.h ****                 = (s_in - r_plus_g[i] * state_1[i] - state_2[i]) * h[i];
  87:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             const float bp = g[i] * hp + state_1[i];
  88:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_1[i]     = g[i] * hp + bp;
  89:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             const float lp = g[i] * bp + state_2[i];
  90:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_2[i]     = g[i] * bp + lp;
  91:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             s_out += gains[i] * ((mode == LOW_PASS) ? lp : bp);
  92:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
  93:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         if(add)
  94:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
  95:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             *out++ += s_out;
  96:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
  97:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         else
  98:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
  99:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             *out++ = s_out;
 100:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
 101:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
 102:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         for(int i = 0; i < batch_size; ++i)
 103:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         {
 104:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_1_[i] = state_1[i];
 105:../../../DaisySP/Source/PhysicalModeling/resonator.h ****             state_2_[i] = state_2[i];
 106:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         }
 107:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     }
 108:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
 109:../../../DaisySP/Source/PhysicalModeling/resonator.h ****   private:
 110:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     static constexpr float kPiPow3 = PI_F * PI_F * PI_F;
 111:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     static constexpr float kPiPow5 = kPiPow3 * PI_F * PI_F;
 112:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     static inline float    fasttan(float f)
 113:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     {
 114:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         const float a  = 3.260e-01 * kPiPow3;
 115:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         const float b  = 1.823e-01 * kPiPow5;
 116:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         float       f2 = f * f;
 117:../../../DaisySP/Source/PhysicalModeling/resonator.h ****         return f * (PI_F + f2 * (a + b * f2));
 118:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     }
 119:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
 120:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     float state_1_[batch_size];
 121:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     float state_2_[batch_size];
 122:../../../DaisySP/Source/PhysicalModeling/resonator.h **** };
 123:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
 124:../../../DaisySP/Source/PhysicalModeling/resonator.h **** 
 125:../../../DaisySP/Source/PhysicalModeling/resonator.h **** /**         
 126:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @brief Resonant Body Simulation
 127:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @author Ported by Ben Sergentanis 
 128:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        @date Jan 2021 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 11


 129:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        Ported from pichenettes/eurorack/plaits/dsp/physical_modelling/resonator.h \n
 130:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        to an independent module. \n
 131:../../../DaisySP/Source/PhysicalModeling/resonator.h ****        Original code written by Emilie Gillet in 2016. \n 
 132:../../../DaisySP/Source/PhysicalModeling/resonator.h **** */
 133:../../../DaisySP/Source/PhysicalModeling/resonator.h **** class Resonator
 134:../../../DaisySP/Source/PhysicalModeling/resonator.h **** {
 135:../../../DaisySP/Source/PhysicalModeling/resonator.h ****   public:
 136:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     Resonator() {}
 137:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     ~Resonator() {}
  79              		.loc 6 137 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              		.loc 6 137 19 is_stmt 0 view .LVU11
  85 0000 7047     		bx	lr
  86              		.cfi_endproc
  87              	.LFE4549:
  89              		.weak	_ZN7daisysp9ResonatorD1Ev
  90              		.thumb_set _ZN7daisysp9ResonatorD1Ev,_ZN7daisysp9ResonatorD2Ev
  91              		.section	.text._ZN7daisysp5MetroD2Ev,"axG",%progbits,_ZN7daisysp5MetroD5Ev,comdat
  92              		.align	1
  93              		.p2align 2,,3
  94              		.weak	_ZN7daisysp5MetroD2Ev
  95              		.syntax unified
  96              		.thumb
  97              		.thumb_func
  98              		.fpu fpv5-d16
 100              	_ZN7daisysp5MetroD2Ev:
 101              	.LVL2:
 102              	.LFB4660:
 103              		.file 7 "../../../DaisySP/Source/Utility/metro.h"
   1:../../../DaisySP/Source/Utility/metro.h **** /*
   2:../../../DaisySP/Source/Utility/metro.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../../DaisySP/Source/Utility/metro.h **** 
   4:../../../DaisySP/Source/Utility/metro.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Utility/metro.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Utility/metro.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Utility/metro.h **** */
   8:../../../DaisySP/Source/Utility/metro.h **** 
   9:../../../DaisySP/Source/Utility/metro.h **** #pragma once
  10:../../../DaisySP/Source/Utility/metro.h **** #ifndef DSY_METRO_H
  11:../../../DaisySP/Source/Utility/metro.h **** #define DSY_METRO_H
  12:../../../DaisySP/Source/Utility/metro.h **** #include <stdint.h>
  13:../../../DaisySP/Source/Utility/metro.h **** #ifdef __cplusplus
  14:../../../DaisySP/Source/Utility/metro.h **** 
  15:../../../DaisySP/Source/Utility/metro.h **** namespace daisysp
  16:../../../DaisySP/Source/Utility/metro.h **** {
  17:../../../DaisySP/Source/Utility/metro.h **** /** Creates a clock signal at a specific frequency.
  18:../../../DaisySP/Source/Utility/metro.h **** */
  19:../../../DaisySP/Source/Utility/metro.h **** class Metro
  20:../../../DaisySP/Source/Utility/metro.h **** {
  21:../../../DaisySP/Source/Utility/metro.h ****   public:
  22:../../../DaisySP/Source/Utility/metro.h ****     Metro() {}
  23:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 104              		.loc 7 23 5 is_stmt 1 view -0
 105              		.cfi_startproc
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 12


 106              		@ args = 0, pretend = 0, frame = 0
 107              		@ frame_needed = 0, uses_anonymous_args = 0
 108              		@ link register save eliminated.
 109              		.loc 7 23 15 is_stmt 0 view .LVU13
 110 0000 7047     		bx	lr
 111              		.cfi_endproc
 112              	.LFE4660:
 114              		.weak	_ZN7daisysp5MetroD1Ev
 115              		.thumb_set _ZN7daisysp5MetroD1Ev,_ZN7daisysp5MetroD2Ev
 116              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 117              		.align	1
 118              		.p2align 2,,3
 119              		.global	_Z13AudioCallbackPKPKfPPfj
 120              		.syntax unified
 121              		.thumb
 122              		.thumb_func
 123              		.fpu fpv5-d16
 125              	_Z13AudioCallbackPKPKfPPfj:
 126              	.LVL3:
 127              	.LFB4681:
 128              		.file 8 "resonator.cpp"
   1:resonator.cpp **** #include "daisy_seed.h"
   2:resonator.cpp **** #include "daisysp.h"
   3:resonator.cpp **** 
   4:resonator.cpp **** using namespace daisy;
   5:resonator.cpp **** using namespace daisysp;
   6:resonator.cpp **** 
   7:resonator.cpp **** DaisySeed hw;
   8:resonator.cpp **** Resonator res;
   9:resonator.cpp **** Metro     tick;
  10:resonator.cpp **** 
  11:resonator.cpp **** float frac;
  12:resonator.cpp **** 
  13:resonator.cpp **** void AudioCallback(AudioHandle::InputBuffer  in,
  14:resonator.cpp ****                    AudioHandle::OutputBuffer out,
  15:resonator.cpp ****                    size_t                    size)
  16:resonator.cpp **** {
 129              		.loc 8 16 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ args = 0, pretend = 0, frame = 0
 132              		@ frame_needed = 0, uses_anonymous_args = 0
  17:resonator.cpp ****     for(size_t i = 0; i < size; i++)
 133              		.loc 8 17 5 view .LVU15
 134              	.LBB92:
 135              		.loc 8 17 25 view .LVU16
 136 0000 002A     		cmp	r2, #0
 137 0002 79D0     		beq	.L17
 138              	.LBE92:
  16:resonator.cpp ****     for(size_t i = 0; i < size; i++)
 139              		.loc 8 16 1 is_stmt 0 view .LVU17
 140 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 141              		.cfi_def_cfa_offset 24
 142              		.cfi_offset 3, -24
 143              		.cfi_offset 4, -20
 144              		.cfi_offset 5, -16
 145              		.cfi_offset 6, -12
 146              		.cfi_offset 7, -8
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 13


 147              		.cfi_offset 14, -4
 148 0006 0D46     		mov	r5, r1
 149 0008 1646     		mov	r6, r2
 150              	.LBB97:
 151              		.loc 8 17 16 view .LVU18
 152 000a 0024     		movs	r4, #0
 153              	.LBE97:
  16:resonator.cpp ****     for(size_t i = 0; i < size; i++)
 154              		.loc 8 16 1 view .LVU19
 155 000c 2DED028B 		vpush.64	{d8}
 156              		.cfi_def_cfa_offset 32
 157              		.cfi_offset 80, -32
 158              		.cfi_offset 81, -28
 159 0010 11E0     		b	.L8
 160              	.LVL4:
 161              	.L7:
 162              	.LBB98:
 163              	.LBB93:
  18:resonator.cpp ****     {
  19:resonator.cpp ****         float t_sig = tick.Process();
  20:resonator.cpp ****         if(t_sig)
  21:resonator.cpp ****         {
  22:resonator.cpp ****             res.SetFreq(rand() * frac * 770.f + 110.f); //110 - 880
  23:resonator.cpp ****             res.SetStructure(rand() * frac);
  24:resonator.cpp ****             res.SetBrightness(rand() * frac * .7f);
  25:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
  26:resonator.cpp **** 
  27:resonator.cpp ****             tick.SetFreq(rand() * frac * 7.f + 1);
  28:resonator.cpp ****         }
  29:resonator.cpp ****         float sig = res.Process(t_sig);
 164              		.loc 8 29 9 is_stmt 1 discriminator 2 view .LVU20
 165              		.loc 8 29 32 is_stmt 0 discriminator 2 view .LVU21
 166 0012 3A48     		ldr	r0, .L21
 167 0014 B0EE480A 		vmov.f32	s0, s16
 168 0018 FFF7FEFF 		bl	_ZN7daisysp9Resonator7ProcessEf
 169              	.LVL5:
  30:resonator.cpp ****         out[0][i] = out[1][i] = sig;
 170              		.loc 8 30 19 discriminator 2 view .LVU22
 171 001c D5E90030 		ldrd	r3, r0, [r5]
 172              	.LVL6:
 173              		.loc 8 30 9 is_stmt 1 discriminator 2 view .LVU23
 174              		.loc 8 30 31 is_stmt 0 discriminator 2 view .LVU24
 175 0020 00EB8400 		add	r0, r0, r4, lsl #2
 176              		.loc 8 30 19 discriminator 2 view .LVU25
 177 0024 03EB8403 		add	r3, r3, r4, lsl #2
 178              	.LBE93:
  17:resonator.cpp ****     {
 179              		.loc 8 17 5 discriminator 2 view .LVU26
 180 0028 0134     		adds	r4, r4, #1
 181              	.LVL7:
 182              	.LBB94:
 183              		.loc 8 30 31 discriminator 2 view .LVU27
 184 002a 80ED000A 		vstr.32	s0, [r0]
 185              	.LBE94:
  17:resonator.cpp ****     {
 186              		.loc 8 17 25 discriminator 2 view .LVU28
 187 002e A642     		cmp	r6, r4
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 14


 188              	.LBB95:
 189              		.loc 8 30 19 discriminator 2 view .LVU29
 190 0030 83ED000A 		vstr.32	s0, [r3]
 191              	.LBE95:
  17:resonator.cpp ****     {
 192              		.loc 8 17 5 is_stmt 1 discriminator 2 view .LVU30
 193              	.LVL8:
  17:resonator.cpp ****     {
 194              		.loc 8 17 25 discriminator 2 view .LVU31
 195 0034 5DD0     		beq	.L20
 196              	.LVL9:
 197              	.L8:
 198              	.LBB96:
  19:resonator.cpp ****         if(t_sig)
 199              		.loc 8 19 9 view .LVU32
  19:resonator.cpp ****         if(t_sig)
 200              		.loc 8 19 35 is_stmt 0 view .LVU33
 201 0036 3248     		ldr	r0, .L21+4
 202 0038 FFF7FEFF 		bl	_ZN7daisysp5Metro7ProcessEv
 203              	.LVL10:
  19:resonator.cpp ****         if(t_sig)
 204              		.loc 8 19 36 view .LVU34
 205 003c 07EE900A 		vmov	s15, r0	@ int
 206 0040 B8EE678A 		vcvt.f32.u32	s16, s15
 207              	.LVL11:
  20:resonator.cpp ****         {
 208              		.loc 8 20 9 is_stmt 1 view .LVU35
 209 0044 0028     		cmp	r0, #0
 210 0046 E4D0     		beq	.L7
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 211              		.loc 8 22 13 view .LVU36
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 212              		.loc 8 22 29 is_stmt 0 view .LVU37
 213 0048 FFF7FEFF 		bl	rand
 214              	.LVL12:
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 215              		.loc 8 22 32 view .LVU38
 216 004c 07EE900A 		vmov	s15, r0	@ int
 217 0050 2C4F     		ldr	r7, .L21+8
 218 0052 F8EEE77A 		vcvt.f32.s32	s15, s15
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 219              		.loc 8 22 24 view .LVU39
 220 0056 9FED2C7A 		vldr.32	s14, .L21+12
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 221              		.loc 8 22 32 view .LVU40
 222 005a D7ED006A 		vldr.32	s13, [r7]
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 223              		.loc 8 22 24 view .LVU41
 224 005e 9FED2B0A 		vldr.32	s0, .L21+16
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 225              		.loc 8 22 32 view .LVU42
 226 0062 67EEA67A 		vmul.f32	s15, s15, s13
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 227              		.loc 8 22 24 view .LVU43
 228 0066 2548     		ldr	r0, .L21
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 229              		.loc 8 24 30 view .LVU44
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 15


 230 0068 DFED298A 		vldr.32	s17, .L21+20
  22:resonator.cpp ****             res.SetStructure(rand() * frac);
 231              		.loc 8 22 24 view .LVU45
 232 006c A7EE870A 		vfma.f32	s0, s15, s14
 233 0070 FFF7FEFF 		bl	_ZN7daisysp9Resonator7SetFreqEf
 234              	.LVL13:
  23:resonator.cpp ****             res.SetBrightness(rand() * frac * .7f);
 235              		.loc 8 23 13 is_stmt 1 view .LVU46
  23:resonator.cpp ****             res.SetBrightness(rand() * frac * .7f);
 236              		.loc 8 23 34 is_stmt 0 view .LVU47
 237 0074 FFF7FEFF 		bl	rand
 238              	.LVL14:
 239 0078 07EE900A 		vmov	s15, r0	@ int
  23:resonator.cpp ****             res.SetBrightness(rand() * frac * .7f);
 240              		.loc 8 23 29 view .LVU48
 241 007c 97ED000A 		vldr.32	s0, [r7]
 242 0080 F8EEE77A 		vcvt.f32.s32	s15, s15
 243 0084 1D48     		ldr	r0, .L21
 244 0086 27EE800A 		vmul.f32	s0, s15, s0
 245 008a FFF7FEFF 		bl	_ZN7daisysp9Resonator12SetStructureEf
 246              	.LVL15:
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 247              		.loc 8 24 13 is_stmt 1 view .LVU49
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 248              		.loc 8 24 35 is_stmt 0 view .LVU50
 249 008e FFF7FEFF 		bl	rand
 250              	.LVL16:
 251 0092 00EE100A 		vmov	s0, r0	@ int
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 252              		.loc 8 24 38 view .LVU51
 253 0096 D7ED007A 		vldr.32	s15, [r7]
 254 009a B8EEC00A 		vcvt.f32.s32	s0, s0
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 255              		.loc 8 24 30 view .LVU52
 256 009e 1748     		ldr	r0, .L21
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 257              		.loc 8 24 38 view .LVU53
 258 00a0 20EE270A 		vmul.f32	s0, s0, s15
  24:resonator.cpp ****             res.SetDamping(rand() * frac * .7f);
 259              		.loc 8 24 30 view .LVU54
 260 00a4 20EE280A 		vmul.f32	s0, s0, s17
 261 00a8 FFF7FEFF 		bl	_ZN7daisysp9Resonator13SetBrightnessEf
 262              	.LVL17:
  25:resonator.cpp **** 
 263              		.loc 8 25 13 is_stmt 1 view .LVU55
  25:resonator.cpp **** 
 264              		.loc 8 25 32 is_stmt 0 view .LVU56
 265 00ac FFF7FEFF 		bl	rand
 266              	.LVL18:
 267 00b0 00EE100A 		vmov	s0, r0	@ int
  25:resonator.cpp **** 
 268              		.loc 8 25 35 view .LVU57
 269 00b4 D7ED007A 		vldr.32	s15, [r7]
 270 00b8 B8EEC00A 		vcvt.f32.s32	s0, s0
  25:resonator.cpp **** 
 271              		.loc 8 25 27 view .LVU58
 272 00bc 0F48     		ldr	r0, .L21
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 16


  25:resonator.cpp **** 
 273              		.loc 8 25 35 view .LVU59
 274 00be 20EE270A 		vmul.f32	s0, s0, s15
  25:resonator.cpp **** 
 275              		.loc 8 25 27 view .LVU60
 276 00c2 20EE280A 		vmul.f32	s0, s0, s17
 277 00c6 FFF7FEFF 		bl	_ZN7daisysp9Resonator10SetDampingEf
 278              	.LVL19:
  27:resonator.cpp ****         }
 279              		.loc 8 27 13 is_stmt 1 view .LVU61
  27:resonator.cpp ****         }
 280              		.loc 8 27 30 is_stmt 0 view .LVU62
 281 00ca FFF7FEFF 		bl	rand
 282              	.LVL20:
  27:resonator.cpp ****         }
 283              		.loc 8 27 33 view .LVU63
 284 00ce 07EE900A 		vmov	s15, r0	@ int
 285 00d2 D7ED006A 		vldr.32	s13, [r7]
  27:resonator.cpp ****         }
 286              		.loc 8 27 25 view .LVU64
 287 00d6 B1EE0C7A 		vmov.f32	s14, #7.0e+0
  27:resonator.cpp ****         }
 288              		.loc 8 27 33 view .LVU65
 289 00da F8EEE77A 		vcvt.f32.s32	s15, s15
  27:resonator.cpp ****         }
 290              		.loc 8 27 25 view .LVU66
 291 00de 0848     		ldr	r0, .L21+4
 292 00e0 B7EE000A 		vmov.f32	s0, #1.0e+0
  27:resonator.cpp ****         }
 293              		.loc 8 27 33 view .LVU67
 294 00e4 67EEA67A 		vmul.f32	s15, s15, s13
  27:resonator.cpp ****         }
 295              		.loc 8 27 25 view .LVU68
 296 00e8 A7EE870A 		vfma.f32	s0, s15, s14
 297 00ec FFF7FEFF 		bl	_ZN7daisysp5Metro7SetFreqEf
 298              	.LVL21:
 299 00f0 8FE7     		b	.L7
 300              	.LVL22:
 301              	.L20:
  27:resonator.cpp ****         }
 302              		.loc 8 27 25 view .LVU69
 303              	.LBE96:
 304              	.LBE98:
  31:resonator.cpp ****     }
  32:resonator.cpp **** }
 305              		.loc 8 32 1 view .LVU70
 306 00f2 BDEC028B 		vldm	sp!, {d8}
 307              		.cfi_restore 80
 308              		.cfi_restore 81
 309              		.cfi_def_cfa_offset 24
 310              	.LVL23:
 311              		.loc 8 32 1 view .LVU71
 312 00f6 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 313              	.LVL24:
 314              	.L17:
 315              		.cfi_def_cfa_offset 0
 316              		.cfi_restore 3
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 17


 317              		.cfi_restore 4
 318              		.cfi_restore 5
 319              		.cfi_restore 6
 320              		.cfi_restore 7
 321              		.cfi_restore 14
 322              		.loc 8 32 1 view .LVU72
 323 00f8 7047     		bx	lr
 324              	.L22:
 325 00fa 00BF     		.align	2
 326              	.L21:
 327 00fc 00000000 		.word	.LANCHOR2
 328 0100 00000000 		.word	.LANCHOR0
 329 0104 00000000 		.word	.LANCHOR1
 330 0108 00804044 		.word	1145077760
 331 010c 0000DC42 		.word	1121714176
 332 0110 3333333F 		.word	1060320051
 333              		.cfi_endproc
 334              	.LFE4681:
 336              		.section	.text.startup.main,"ax",%progbits
 337              		.align	1
 338              		.p2align 2,,3
 339              		.global	main
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 343              		.fpu fpv5-d16
 345              	main:
 346              	.LFB4682:
  33:resonator.cpp **** 
  34:resonator.cpp **** int main(void)
  35:resonator.cpp **** {
 347              		.loc 8 35 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 0, pretend = 0, frame = 8
 350              		@ frame_needed = 0, uses_anonymous_args = 0
  36:resonator.cpp ****     hw.Configure();
 351              		.loc 8 36 5 view .LVU74
  35:resonator.cpp ****     hw.Configure();
 352              		.loc 8 35 1 is_stmt 0 view .LVU75
 353 0000 00B5     		push	{lr}
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 14, -4
 356              		.loc 8 36 17 view .LVU76
 357 0002 1748     		ldr	r0, .L26
  35:resonator.cpp ****     hw.Configure();
 358              		.loc 8 35 1 view .LVU77
 359 0004 83B0     		sub	sp, sp, #12
 360              		.cfi_def_cfa_offset 16
 361              		.loc 8 36 17 view .LVU78
 362 0006 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 363              	.LVL25:
  37:resonator.cpp ****     hw.Init();
 364              		.loc 8 37 5 is_stmt 1 view .LVU79
 365              		.loc 8 37 12 is_stmt 0 view .LVU80
 366 000a 0021     		movs	r1, #0
 367 000c 1448     		ldr	r0, .L26
 368 000e FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 18


 369              	.LVL26:
  38:resonator.cpp ****     hw.SetAudioBlockSize(4);
 370              		.loc 8 38 5 is_stmt 1 view .LVU81
 371              		.loc 8 38 25 is_stmt 0 view .LVU82
 372 0012 0421     		movs	r1, #4
 373 0014 1248     		ldr	r0, .L26
 374 0016 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 375              	.LVL27:
  39:resonator.cpp ****     float sample_rate = hw.AudioSampleRate();
 376              		.loc 8 39 5 is_stmt 1 view .LVU83
 377              		.loc 8 39 43 is_stmt 0 view .LVU84
 378 001a 1148     		ldr	r0, .L26
 379 001c FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 380              	.LVL28:
 381 0020 F0EE400A 		vmov.f32	s1, s0
  40:resonator.cpp **** 
  41:resonator.cpp ****     res.Init(.015, 24, sample_rate);
 382              		.loc 8 41 13 view .LVU85
 383 0024 1821     		movs	r1, #24
 384 0026 9FED0F0A 		vldr.32	s0, .L26+4
 385              	.LVL29:
 386              		.loc 8 41 5 is_stmt 1 view .LVU86
 387              		.loc 8 41 13 is_stmt 0 view .LVU87
 388 002a 0F48     		ldr	r0, .L26+8
 389 002c CDED010A 		vstr.32	s1, [sp, #4]	@ int
 390 0030 FFF7FEFF 		bl	_ZN7daisysp9Resonator4InitEfif
 391              	.LVL30:
  42:resonator.cpp ****     res.SetStructure(-7.f);
 392              		.loc 8 42 5 is_stmt 1 view .LVU88
 393              		.loc 8 42 21 is_stmt 0 view .LVU89
 394 0034 B9EE0C0A 		vmov.f32	s0, #-7.0e+0
 395 0038 0B48     		ldr	r0, .L26+8
 396 003a FFF7FEFF 		bl	_ZN7daisysp9Resonator12SetStructureEf
 397              	.LVL31:
  43:resonator.cpp **** 
  44:resonator.cpp ****     tick.Init(1.f, sample_rate);
 398              		.loc 8 44 5 is_stmt 1 view .LVU90
 399              		.loc 8 44 14 is_stmt 0 view .LVU91
 400 003e 0B48     		ldr	r0, .L26+12
 401 0040 B7EE000A 		vmov.f32	s0, #1.0e+0
 402 0044 DDED010A 		vldr.32	s1, [sp, #4]	@ int
 403 0048 FFF7FEFF 		bl	_ZN7daisysp5Metro4InitEff
 404              	.LVL32:
  45:resonator.cpp **** 
  46:resonator.cpp ****     frac = 1.f / RAND_MAX;
 405              		.loc 8 46 5 is_stmt 1 view .LVU92
 406              		.loc 8 46 10 is_stmt 0 view .LVU93
 407 004c 084B     		ldr	r3, .L26+16
 408 004e 4FF04052 		mov	r2, #805306368
  47:resonator.cpp **** 
  48:resonator.cpp ****     hw.StartAudio(AudioCallback);
 409              		.loc 8 48 18 view .LVU94
 410 0052 0849     		ldr	r1, .L26+20
 411 0054 0248     		ldr	r0, .L26
  46:resonator.cpp **** 
 412              		.loc 8 46 10 view .LVU95
 413 0056 1A60     		str	r2, [r3]	@ float
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 19


 414              		.loc 8 48 5 is_stmt 1 view .LVU96
 415              		.loc 8 48 18 is_stmt 0 view .LVU97
 416 0058 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 417              	.LVL33:
 418              	.L24:
  49:resonator.cpp ****     while(1) {}
 419              		.loc 8 49 5 is_stmt 1 discriminator 1 view .LVU98
 420              		.loc 8 49 5 discriminator 1 view .LVU99
 421              		.loc 8 49 5 discriminator 1 view .LVU100
 422              		.loc 8 49 5 discriminator 1 view .LVU101
 423 005c FEE7     		b	.L24
 424              	.L27:
 425 005e 00BF     		.align	2
 426              	.L26:
 427 0060 00000000 		.word	.LANCHOR3
 428 0064 8FC2753C 		.word	1014350479
 429 0068 00000000 		.word	.LANCHOR2
 430 006c 00000000 		.word	.LANCHOR0
 431 0070 00000000 		.word	.LANCHOR1
 432 0074 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 433              		.cfi_endproc
 434              	.LFE4682:
 436              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 437              		.align	1
 438              		.p2align 2,,3
 439              		.syntax unified
 440              		.thumb
 441              		.thumb_func
 442              		.fpu fpv5-d16
 444              	_GLOBAL__sub_I_hw:
 445              	.LFB5245:
  50:resonator.cpp **** }...
 446              		.loc 8 50 1 view -0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450              	.LBB125:
 451              	.LBI125:
 452              		.loc 8 50 1 view .LVU103
 453              	.LVL34:
 454              	.LBB126:
 455              	.LBB127:
 456              	.LBI127:
  21:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 457              		.loc 1 21 5 view .LVU104
 458              	.LBB128:
 459              	.LBB129:
 460              	.LBI129:
 461              		.file 9 "../../../libDaisy/src/per/qspi.h"
   1:../../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../../libDaisy/src/per/qspi.h **** 
   4:../../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../../libDaisy/src/per/qspi.h **** 
   6:../../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../../libDaisy/src/per/qspi.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 20


   9:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../../libDaisy/src/per/qspi.h **** 
  19:../../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../../libDaisy/src/per/qspi.h **** {
  21:../../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../../libDaisy/src/per/qspi.h **** @{
  23:../../../libDaisy/src/per/qspi.h **** */
  24:../../../libDaisy/src/per/qspi.h **** 
  25:../../../libDaisy/src/per/qspi.h **** /** 
  26:../../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../../libDaisy/src/per/qspi.h **** */
  30:../../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../../libDaisy/src/per/qspi.h **** {
  32:../../../libDaisy/src/per/qspi.h ****   public:
  33:../../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../../libDaisy/src/per/qspi.h ****     {
  35:../../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../../libDaisy/src/per/qspi.h ****         ERR
  37:../../../libDaisy/src/per/qspi.h ****     };
  38:../../../libDaisy/src/per/qspi.h **** 
  39:../../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../../libDaisy/src/per/qspi.h ****          * 
  43:../../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../../libDaisy/src/per/qspi.h ****          */
  48:../../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../../libDaisy/src/per/qspi.h ****     {
  50:../../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../../libDaisy/src/per/qspi.h ****     };
  55:../../../libDaisy/src/per/qspi.h **** 
  56:../../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../../libDaisy/src/per/qspi.h ****     {
  59:../../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../../libDaisy/src/per/qspi.h ****         {
  62:../../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../../libDaisy/src/per/qspi.h ****         };
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 21


  66:../../../libDaisy/src/per/qspi.h **** 
  67:../../../libDaisy/src/per/qspi.h ****         /** 
  68:../../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../../libDaisy/src/per/qspi.h ****         */
  74:../../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../../libDaisy/src/per/qspi.h ****         {
  76:../../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../../libDaisy/src/per/qspi.h ****         };
  80:../../../libDaisy/src/per/qspi.h **** 
  81:../../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../../libDaisy/src/per/qspi.h ****         struct
  83:../../../libDaisy/src/per/qspi.h ****         {
  84:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../../libDaisy/src/per/qspi.h **** 
  92:../../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../../libDaisy/src/per/qspi.h ****     };
  95:../../../libDaisy/src/per/qspi.h **** 
  96:../../../libDaisy/src/per/qspi.h ****     /** 
  97:../../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../../libDaisy/src/per/qspi.h ****         */
 101:../../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../../libDaisy/src/per/qspi.h **** 
 103:../../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../../libDaisy/src/per/qspi.h **** 
 106:../../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../../libDaisy/src/per/qspi.h ****     /** 
 109:../../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../../libDaisy/src/per/qspi.h ****         */
 113:../../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../../libDaisy/src/per/qspi.h **** 
 115:../../../libDaisy/src/per/qspi.h ****     /** 
 116:../../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../../libDaisy/src/per/qspi.h ****         */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 22


 123:../../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../../libDaisy/src/per/qspi.h **** 
 125:../../../libDaisy/src/per/qspi.h ****     /** 
 126:../../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../../libDaisy/src/per/qspi.h ****         */
 132:../../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
 133:../../../libDaisy/src/per/qspi.h **** 
 134:../../../libDaisy/src/per/qspi.h ****     /** 
 135:../../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../../libDaisy/src/per/qspi.h ****         */
 142:../../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../../libDaisy/src/per/qspi.h **** 
 144:../../../libDaisy/src/per/qspi.h ****     /**  
 145:../../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../../libDaisy/src/per/qspi.h ****         */
 150:../../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../../libDaisy/src/per/qspi.h **** 
 152:../../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../../libDaisy/src/per/qspi.h ****      */
 155:../../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../../libDaisy/src/per/qspi.h **** 
 157:../../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../../libDaisy/src/per/qspi.h ****      * 
 161:../../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../../libDaisy/src/per/qspi.h ****     */
 164:../../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../../libDaisy/src/per/qspi.h **** 
 166:../../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 462              		.loc 9 166 5 view .LVU105
 463              	.LBE129:
 464              	.LBE128:
 465              	.LBE127:
 466              	.LBE126:
 467              	.LBE125:
 468              		.loc 8 50 1 is_stmt 0 view .LVU106
 469 0000 08B5     		push	{r3, lr}
 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 3, -8
 472              		.cfi_offset 14, -4
 473              	.LBB157:
 474              	.LBB154:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 23


 475              	.LBB150:
 476              	.LBB148:
 477              	.LBB134:
 478              	.LBB130:
 479              	.LBB131:
 480              		.loc 9 166 34 view .LVU107
 481 0002 0B48     		ldr	r0, .L30
 482 0004 0023     		movs	r3, #0
 483              	.LBE131:
 484              	.LBE130:
 485              	.LBE134:
 486              	.LBE148:
 487              	.LBE150:
   7:resonator.cpp **** DaisySeed hw;
 488              		.loc 8 7 11 view .LVU108
 489 0006 0B4A     		ldr	r2, .L30+4
 490              	.LBB151:
 491              	.LBB149:
 492              	.LBB135:
 493              	.LBB133:
 494              	.LBB132:
 495              		.loc 9 166 34 view .LVU109
 496 0008 0360     		str	r3, [r0]
 497              	.LVL35:
 498              		.loc 9 166 34 view .LVU110
 499              	.LBE132:
 500              	.LBE133:
 501              	.LBE135:
 502              	.LBB136:
 503              	.LBI136:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 504              		.loc 5 95 5 is_stmt 1 view .LVU111
 505              	.LBB137:
 506              	.LBB138:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 507              		.loc 5 95 35 is_stmt 0 view .LVU112
 508 000a 4361     		str	r3, [r0, #20]
 509              	.LVL36:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 510              		.loc 5 95 35 view .LVU113
 511              	.LBE138:
 512              	.LBE137:
 513              	.LBE136:
 514              	.LBB139:
 515              	.LBI139:
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 516              		.loc 4 109 5 is_stmt 1 view .LVU114
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 517              		.loc 4 109 5 is_stmt 0 view .LVU115
 518              	.LBE139:
 519              	.LBB140:
 520              	.LBI140:
 521              		.file 10 "../../../libDaisy/src/per/dac.h"
   1:../../../libDaisy/src/per/dac.h **** #pragma once
   2:../../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../../libDaisy/src/per/dac.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 24


   5:../../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/dac.h **** 
   7:../../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../../libDaisy/src/per/dac.h **** {
   9:../../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../../libDaisy/src/per/dac.h ****  ** 
  12:../../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../../libDaisy/src/per/dac.h ****  **
  15:../../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../../libDaisy/src/per/dac.h ****  **
  17:../../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../../libDaisy/src/per/dac.h ****  ***/
  21:../../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../../libDaisy/src/per/dac.h **** {
  23:../../../libDaisy/src/per/dac.h ****   public:
  24:../../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../../libDaisy/src/per/dac.h ****     {
  27:../../../libDaisy/src/per/dac.h ****         OK,
  28:../../../libDaisy/src/per/dac.h ****         ERR,
  29:../../../libDaisy/src/per/dac.h ****     };
  30:../../../libDaisy/src/per/dac.h **** 
  31:../../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../../libDaisy/src/per/dac.h ****     {
  34:../../../libDaisy/src/per/dac.h ****         ONE,
  35:../../../libDaisy/src/per/dac.h ****         TWO,
  36:../../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../../libDaisy/src/per/dac.h ****     };
  38:../../../libDaisy/src/per/dac.h **** 
  39:../../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../../libDaisy/src/per/dac.h ****      **
  41:../../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../../libDaisy/src/per/dac.h ****      **
  43:../../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../../libDaisy/src/per/dac.h ****      ***/
  46:../../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../../libDaisy/src/per/dac.h ****     {
  48:../../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../../libDaisy/src/per/dac.h ****         DMA,
  50:../../../libDaisy/src/per/dac.h ****     };
  51:../../../libDaisy/src/per/dac.h **** 
  52:../../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../../libDaisy/src/per/dac.h ****      ***/
  56:../../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../../libDaisy/src/per/dac.h ****     {
  58:../../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../../libDaisy/src/per/dac.h ****     };
  61:../../../libDaisy/src/per/dac.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 25


  62:../../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../../libDaisy/src/per/dac.h ****     {
  65:../../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../../libDaisy/src/per/dac.h ****     };
  68:../../../libDaisy/src/per/dac.h **** 
  69:../../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../../libDaisy/src/per/dac.h ****     struct Config
  71:../../../libDaisy/src/per/dac.h ****     {
  72:../../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../../libDaisy/src/per/dac.h **** 
  78:../../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../../libDaisy/src/per/dac.h ****     };
  83:../../../libDaisy/src/per/dac.h **** 
  84:../../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 522              		.loc 10 84 5 is_stmt 1 view .LVU116
 523              	.LBB141:
 524              	.LBB142:
 525              		.loc 10 84 33 is_stmt 0 view .LVU117
 526 000c 0362     		str	r3, [r0, #32]
 527              	.LVL37:
 528              		.loc 10 84 33 view .LVU118
 529              	.LBE142:
 530              	.LBE141:
 531              	.LBE140:
 532              	.LBB143:
 533              	.LBI143:
  40:../../../libDaisy/src/hid/usb.h **** 
 534              		.loc 3 40 5 is_stmt 1 view .LVU119
  40:../../../libDaisy/src/hid/usb.h **** 
 535              		.loc 3 40 5 is_stmt 0 view .LVU120
 536              	.LBE143:
 537              	.LBB144:
 538              	.LBI144:
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 539              		.loc 2 96 5 is_stmt 1 view .LVU121
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 540              		.loc 2 96 5 is_stmt 0 view .LVU122
 541              	.LBE144:
 542              	.LBB145:
 543              	.LBI145:
 544              		.file 11 "../../../libDaisy/src/per/sai.h"
   1:../../../libDaisy/src/per/sai.h **** #pragma once
   2:../../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../../libDaisy/src/per/sai.h **** 
   5:../../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/sai.h **** 
   7:../../../libDaisy/src/per/sai.h **** namespace daisy
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 26


   8:../../../libDaisy/src/per/sai.h **** {
   9:../../../libDaisy/src/per/sai.h **** /** 
  10:../../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../../libDaisy/src/per/sai.h ****  * 
  14:../../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../../libDaisy/src/per/sai.h ****  *
  18:../../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../../libDaisy/src/per/sai.h ****  * 
  21:../../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../../libDaisy/src/per/sai.h ****  * 
  23:../../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../../libDaisy/src/per/sai.h ****  */
  42:../../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../../libDaisy/src/per/sai.h **** {
  44:../../../libDaisy/src/per/sai.h ****   public:
  45:../../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../../libDaisy/src/per/sai.h ****     struct Config
  47:../../../libDaisy/src/per/sai.h ****     {
  48:../../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../../libDaisy/src/per/sai.h ****         {
  51:../../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../../libDaisy/src/per/sai.h ****         };
  54:../../../libDaisy/src/per/sai.h **** 
  55:../../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../../libDaisy/src/per/sai.h ****         {
  58:../../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../../libDaisy/src/per/sai.h ****         };
  64:../../../libDaisy/src/per/sai.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 27


  65:../../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../../libDaisy/src/per/sai.h ****         {
  68:../../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../../libDaisy/src/per/sai.h ****         };
  72:../../../libDaisy/src/per/sai.h **** 
  73:../../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
  75:../../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../../libDaisy/src/per/sai.h ****          */
  77:../../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../../libDaisy/src/per/sai.h ****         {
  79:../../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../../libDaisy/src/per/sai.h ****         };
  82:../../../libDaisy/src/per/sai.h **** 
  83:../../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../../libDaisy/src/per/sai.h ****         {
  86:../../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../../../libDaisy/src/per/sai.h ****         };
  89:../../../libDaisy/src/per/sai.h **** 
  90:../../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../../libDaisy/src/per/sai.h ****         struct
  92:../../../libDaisy/src/per/sai.h ****         {
  93:../../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../../libDaisy/src/per/sai.h ****     };
 100:../../../libDaisy/src/per/sai.h **** 
 101:../../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../../libDaisy/src/per/sai.h ****     {
 104:../../../libDaisy/src/per/sai.h ****         OK,
 105:../../../libDaisy/src/per/sai.h ****         ERR,
 106:../../../libDaisy/src/per/sai.h ****     };
 107:../../../libDaisy/src/per/sai.h **** 
 108:../../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 545              		.loc 11 108 5 is_stmt 1 view .LVU123
 546              	.LBB146:
 547              	.LBB147:
 548              		.loc 11 108 33 is_stmt 0 view .LVU124
 549 000e C363     		str	r3, [r0, #60]
 550              	.LVL38:
 551              		.loc 11 108 33 view .LVU125
 552              	.LBE147:
 553              	.LBE146:
 554              	.LBE145:
 555              	.LBE149:
 556              	.LBE151:
   7:resonator.cpp **** DaisySeed hw;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 28


 557              		.loc 8 7 11 view .LVU126
 558 0010 0949     		ldr	r1, .L30+8
 559 0012 FFF7FEFF 		bl	__aeabi_atexit
 560              	.LVL39:
 561              	.LBB152:
 562              	.LBI152:
 136:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     ~Resonator() {}
 563              		.loc 6 136 5 is_stmt 1 view .LVU127
 564              	.LBE152:
 565              	.LBE154:
 566              	.LBE157:
 136:../../../DaisySP/Source/PhysicalModeling/resonator.h ****     ~Resonator() {}
 567              		.loc 6 136 17 view .LVU128
 568              	.LBB158:
 569              	.LBB155:
   8:resonator.cpp **** Resonator res;
 570              		.loc 8 8 11 is_stmt 0 view .LVU129
 571 0016 074A     		ldr	r2, .L30+4
 572 0018 0849     		ldr	r1, .L30+12
 573 001a 0948     		ldr	r0, .L30+16
 574 001c FFF7FEFF 		bl	__aeabi_atexit
 575              	.LVL40:
 576              	.LBB153:
 577              	.LBI153:
  22:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 578              		.loc 7 22 5 is_stmt 1 view .LVU130
  22:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 579              		.loc 7 22 5 is_stmt 0 view .LVU131
 580              	.LBE153:
   9:resonator.cpp **** Metro     tick;
 581              		.loc 8 9 11 view .LVU132
 582 0020 044A     		ldr	r2, .L30+4
 583 0022 0849     		ldr	r1, .L30+20
 584 0024 0848     		ldr	r0, .L30+24
 585              	.LBE155:
 586              	.LBE158:
 587              		.loc 8 50 1 view .LVU133
 588 0026 BDE80840 		pop	{r3, lr}
 589              		.cfi_restore 14
 590              		.cfi_restore 3
 591              		.cfi_def_cfa_offset 0
 592              	.LBB159:
 593              	.LBB156:
   9:resonator.cpp **** Metro     tick;
 594              		.loc 8 9 11 view .LVU134
 595 002a FFF7FEBF 		b	__aeabi_atexit
 596              	.LVL41:
 597              	.L31:
 598 002e 00BF     		.align	2
 599              	.L30:
 600 0030 00000000 		.word	.LANCHOR3
 601 0034 00000000 		.word	__dso_handle
 602 0038 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 603 003c 00000000 		.word	_ZN7daisysp9ResonatorD1Ev
 604 0040 00000000 		.word	.LANCHOR2
 605 0044 00000000 		.word	_ZN7daisysp5MetroD1Ev
 606 0048 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 29


 607              	.LBE156:
 608              	.LBE159:
 609              		.cfi_endproc
 610              	.LFE5245:
 612              		.section	.init_array,"aw",%init_array
 613              		.align	2
 614 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 615              		.global	frac
 616              		.global	tick
 617              		.global	res
 618              		.global	hw
 619              		.section	.bss.frac,"aw",%nobits
 620              		.align	2
 621              		.set	.LANCHOR1,. + 0
 624              	frac:
 625 0000 00000000 		.space	4
 626              		.section	.bss.hw,"aw",%nobits
 627              		.align	2
 628              		.set	.LANCHOR3,. + 0
 631              	hw:
 632 0000 00000000 		.space	64
 632      00000000 
 632      00000000 
 632      00000000 
 632      00000000 
 633              		.section	.bss.res,"aw",%nobits
 634              		.align	2
 635              		.set	.LANCHOR2,. + 0
 638              	res:
 639 0000 00000000 		.space	312
 639      00000000 
 639      00000000 
 639      00000000 
 639      00000000 
 640              		.section	.bss.tick,"aw",%nobits
 641              		.align	2
 642              		.set	.LANCHOR0,. + 0
 645              	tick:
 646 0000 00000000 		.space	16
 646      00000000 
 646      00000000 
 646      00000000 
 647              		.text
 648              	.Letext0:
 649              		.file 12 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 650              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 651              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 652              		.file 15 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 653              		.file 16 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 654              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 655              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 656              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 657              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 658              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 659              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 660              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
 661              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 30


 662              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 663              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 664              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 665              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 666              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 667              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 668              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 669              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 670              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 671              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 672              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 673              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 674              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 675              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 676              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 677              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 678              		.file 41 "../../../libDaisy/src/daisy_core.h"
 679              		.file 42 "../../../libDaisy/src/per/tim.h"
 680              		.file 43 "../../../libDaisy/src/util/wav_format.h"
 681              		.file 44 "../../../libDaisy/src/dev/max11300.h"
 682              		.file 45 "../../../libDaisy/src/per/gpio.h"
 683              		.file 46 "../../../libDaisy/src/dev/sdram.h"
 684              		.file 47 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 685              		.file 48 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 686              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 687              		.file 50 "../../../DaisySP/Source/Control/adenv.h"
 688              		.file 51 "../../../DaisySP/Source/Utility/dsp.h"
 689              		.file 52 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 690              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 691              		.file 54 "<built-in>"
 692              		.file 55 "../../../libDaisy/src/dev/sr_595.h"
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s 			page 31


DEFINED SYMBOLS
                            *ABS*:00000000 resonator.cpp
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:67     .text._ZN7daisysp9ResonatorD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:75     .text._ZN7daisysp9ResonatorD2Ev:00000000 _ZN7daisysp9ResonatorD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:75     .text._ZN7daisysp9ResonatorD2Ev:00000000 _ZN7daisysp9ResonatorD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:92     .text._ZN7daisysp5MetroD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:100    .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:100    .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:117    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:125    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:327    .text._Z13AudioCallbackPKPKfPPfj:000000fc $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:337    .text.startup.main:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:345    .text.startup.main:00000000 main
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:427    .text.startup.main:00000060 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:437    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:444    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:600    .text.startup._GLOBAL__sub_I_hw:00000030 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:613    .init_array:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:624    .bss.frac:00000000 frac
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:645    .bss.tick:00000000 tick
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:638    .bss.res:00000000 res
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:631    .bss.hw:00000000 hw
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:620    .bss.frac:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:627    .bss.hw:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:634    .bss.res:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccPbuBUK.s:641    .bss.tick:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp9ResonatorD5Ev
                           .group:00000000 _ZN7daisysp5MetroD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp9Resonator7ProcessEf
_ZN7daisysp5Metro7ProcessEv
rand
_ZN7daisysp9Resonator7SetFreqEf
_ZN7daisysp9Resonator12SetStructureEf
_ZN7daisysp9Resonator13SetBrightnessEf
_ZN7daisysp9Resonator10SetDampingEf
_ZN7daisysp5Metro7SetFreqEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp9Resonator4InitEfif
_ZN7daisysp5Metro4InitEff
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
