ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 1


   1              		.cpu cortex-m7
   2              		.eabi_attribute 28, 1
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 34, 1
  11              		.eabi_attribute 18, 4
  12              		.file	"synthsnaredrum.cpp"
  13              		.text
  14              	.Ltext0:
  15              		.cfi_sections	.debug_frame
  16              		.section	.text._ZN5daisy9DaisySeedD2Ev,"axG",%progbits,_ZN5daisy9DaisySeedD5Ev,comdat
  17              		.align	1
  18              		.p2align 2,,3
  19              		.weak	_ZN5daisy9DaisySeedD2Ev
  20              		.arch armv7e-m
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  24              		.fpu fpv5-d16
  26              	_ZN5daisy9DaisySeedD2Ev:
  27              	.LVL0:
  28              	.LFB2555:
  29              		.file 1 "../../../libDaisy/src/daisy_seed.h"
   1:../../../libDaisy/src/daisy_seed.h **** #pragma once
   2:../../../libDaisy/src/daisy_seed.h **** #ifndef DSY_SEED_H
   3:../../../libDaisy/src/daisy_seed.h **** #define DSY_SEED_H
   4:../../../libDaisy/src/daisy_seed.h **** 
   5:../../../libDaisy/src/daisy_seed.h **** #include "daisy.h"
   6:../../../libDaisy/src/daisy_seed.h **** 
   7:../../../libDaisy/src/daisy_seed.h **** //Uncomment this out if you're still using the rev2 hardware
   8:../../../libDaisy/src/daisy_seed.h **** //#define SEED_REV2
   9:../../../libDaisy/src/daisy_seed.h **** 
  10:../../../libDaisy/src/daisy_seed.h **** namespace daisy
  11:../../../libDaisy/src/daisy_seed.h **** {
  12:../../../libDaisy/src/daisy_seed.h **** /**
  13:../../../libDaisy/src/daisy_seed.h ****    @brief This is the higher-level interface for the Daisy board. \n 
  14:../../../libDaisy/src/daisy_seed.h ****     All basic peripheral configuration/initialization is setup here. \n
  15:../../../libDaisy/src/daisy_seed.h **** 
  16:../../../libDaisy/src/daisy_seed.h ****    @ingroup boards
  17:../../../libDaisy/src/daisy_seed.h **** */
  18:../../../libDaisy/src/daisy_seed.h **** class DaisySeed
  19:../../../libDaisy/src/daisy_seed.h **** {
  20:../../../libDaisy/src/daisy_seed.h ****   public:
  21:../../../libDaisy/src/daisy_seed.h ****     DaisySeed() {}
  22:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
  30              		.loc 1 22 5 view -0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 0
  33              		@ frame_needed = 0, uses_anonymous_args = 0
  34              		@ link register save eliminated.
  35              	.LBB108:
  36              	.LBI108:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 2


  37              		.file 2 "../../../libDaisy/src/sys/system.h"
   1:../../../libDaisy/src/sys/system.h **** #ifndef DSY_SYSTEM_H
   2:../../../libDaisy/src/sys/system.h **** #define DSY_SYSTEM_H
   3:../../../libDaisy/src/sys/system.h **** 
   4:../../../libDaisy/src/sys/system.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation is provided below
   5:../../../libDaisy/src/sys/system.h **** 
   6:../../../libDaisy/src/sys/system.h **** #include <cstdint>
   7:../../../libDaisy/src/sys/system.h **** #include "per/tim.h"
   8:../../../libDaisy/src/sys/system.h **** 
   9:../../../libDaisy/src/sys/system.h **** namespace daisy
  10:../../../libDaisy/src/sys/system.h **** {
  11:../../../libDaisy/src/sys/system.h **** /** A handle for interacting with the Core System.
  12:../../../libDaisy/src/sys/system.h ****  ** This includes the Clock tree, MPU, global DMA initialization,
  13:../../../libDaisy/src/sys/system.h ****  ** cache handling, and any other necessary global initiailzation
  14:../../../libDaisy/src/sys/system.h ****  **
  15:../../../libDaisy/src/sys/system.h ****  ** @author shensley
  16:../../../libDaisy/src/sys/system.h ****  ** @ingroup system
  17:../../../libDaisy/src/sys/system.h ****  */
  18:../../../libDaisy/src/sys/system.h **** class System
  19:../../../libDaisy/src/sys/system.h **** {
  20:../../../libDaisy/src/sys/system.h ****   public:
  21:../../../libDaisy/src/sys/system.h ****     /** Contains settings for initializing the System */
  22:../../../libDaisy/src/sys/system.h ****     struct Config
  23:../../../libDaisy/src/sys/system.h ****     {
  24:../../../libDaisy/src/sys/system.h ****         /** Specifies the system clock frequency that feeds APB/AHB clocks, etc. */
  25:../../../libDaisy/src/sys/system.h ****         enum class SysClkFreq
  26:../../../libDaisy/src/sys/system.h ****         {
  27:../../../libDaisy/src/sys/system.h ****             FREQ_400MHZ,
  28:../../../libDaisy/src/sys/system.h ****             FREQ_480MHZ,
  29:../../../libDaisy/src/sys/system.h ****         };
  30:../../../libDaisy/src/sys/system.h **** 
  31:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to defaults
  32:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 400MHz
  33:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  34:../../../libDaisy/src/sys/system.h ****          ** */
  35:../../../libDaisy/src/sys/system.h ****         void Defaults()
  36:../../../libDaisy/src/sys/system.h ****         {
  37:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_400MHZ;
  38:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  39:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  40:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  41:../../../libDaisy/src/sys/system.h ****         }
  42:../../../libDaisy/src/sys/system.h **** 
  43:../../../libDaisy/src/sys/system.h ****         /** Method to call on the struct to set to boost mode:
  44:../../../libDaisy/src/sys/system.h ****          ** CPU Freq set to 480MHz
  45:../../../libDaisy/src/sys/system.h ****          ** Cache Enabled
  46:../../../libDaisy/src/sys/system.h ****          ** */
  47:../../../libDaisy/src/sys/system.h ****         void Boost()
  48:../../../libDaisy/src/sys/system.h ****         {
  49:../../../libDaisy/src/sys/system.h ****             cpu_freq    = SysClkFreq::FREQ_480MHZ;
  50:../../../libDaisy/src/sys/system.h ****             use_dcache  = true;
  51:../../../libDaisy/src/sys/system.h ****             use_icache  = true;
  52:../../../libDaisy/src/sys/system.h ****             skip_clocks = false;
  53:../../../libDaisy/src/sys/system.h ****         }
  54:../../../libDaisy/src/sys/system.h **** 
  55:../../../libDaisy/src/sys/system.h ****         SysClkFreq cpu_freq;
  56:../../../libDaisy/src/sys/system.h ****         bool       use_dcache;
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 3


  57:../../../libDaisy/src/sys/system.h ****         bool       use_icache;
  58:../../../libDaisy/src/sys/system.h ****         bool       skip_clocks;
  59:../../../libDaisy/src/sys/system.h ****     };
  60:../../../libDaisy/src/sys/system.h **** 
  61:../../../libDaisy/src/sys/system.h ****     /** Describes the different regions of memory available to the Daisy */
  62:../../../libDaisy/src/sys/system.h ****     enum MemoryRegion
  63:../../../libDaisy/src/sys/system.h ****     {
  64:../../../libDaisy/src/sys/system.h ****         INTERNAL_FLASH = 0,
  65:../../../libDaisy/src/sys/system.h ****         ITCMRAM,
  66:../../../libDaisy/src/sys/system.h ****         DTCMRAM,
  67:../../../libDaisy/src/sys/system.h ****         SRAM_D1,
  68:../../../libDaisy/src/sys/system.h ****         SRAM_D2,
  69:../../../libDaisy/src/sys/system.h ****         SRAM_D3,
  70:../../../libDaisy/src/sys/system.h ****         SDRAM,
  71:../../../libDaisy/src/sys/system.h ****         QSPI,
  72:../../../libDaisy/src/sys/system.h ****         INVALID_ADDRESS,
  73:../../../libDaisy/src/sys/system.h ****     };
  74:../../../libDaisy/src/sys/system.h **** 
  75:../../../libDaisy/src/sys/system.h ****     /** Bootloader struct for controlling bootloading parameters */
  76:../../../libDaisy/src/sys/system.h ****     struct BootInfo
  77:../../../libDaisy/src/sys/system.h ****     {
  78:../../../libDaisy/src/sys/system.h ****         enum class Type : uint32_t
  79:../../../libDaisy/src/sys/system.h ****         {
  80:../../../libDaisy/src/sys/system.h ****             INVALID      = 0x00000000,
  81:../../../libDaisy/src/sys/system.h ****             JUMP         = 0xDEADBEEF,
  82:../../../libDaisy/src/sys/system.h ****             SKIP_TIMEOUT = 0x5AFEB007,
  83:../../../libDaisy/src/sys/system.h ****             INF_TIMEOUT  = 0xB0074EFA,
  84:../../../libDaisy/src/sys/system.h ****         } status;
  85:../../../libDaisy/src/sys/system.h ****         uint32_t data;
  86:../../../libDaisy/src/sys/system.h ****         enum class Version : uint32_t
  87:../../../libDaisy/src/sys/system.h ****         {
  88:../../../libDaisy/src/sys/system.h ****             LT_v6_0 = 0, // Less than v6.0
  89:../../../libDaisy/src/sys/system.h ****             NONE,        // No bootloader present
  90:../../../libDaisy/src/sys/system.h ****             v6_0,        // v6.0
  91:../../../libDaisy/src/sys/system.h ****             v6_1,        // v6.1 or greater
  92:../../../libDaisy/src/sys/system.h ****             LAST
  93:../../../libDaisy/src/sys/system.h ****         } version;
  94:../../../libDaisy/src/sys/system.h ****     };
  95:../../../libDaisy/src/sys/system.h **** 
  96:../../../libDaisy/src/sys/system.h ****     System() {}
  97:../../../libDaisy/src/sys/system.h ****     ~System() {}
  38              		.loc 2 97 5 view .LVU1
  39              		.loc 2 97 5 is_stmt 0 view .LVU2
  40              	.LBE108:
  41              	.LBB109:
  42              	.LBI109:
  43              		.file 3 "../../../libDaisy/src/hid/usb.h"
   1:../../../libDaisy/src/hid/usb.h **** #pragma once
   2:../../../libDaisy/src/hid/usb.h **** #ifndef DSY_HID_USB_H
   3:../../../libDaisy/src/hid/usb.h **** #define DSY_HID_USB_H
   4:../../../libDaisy/src/hid/usb.h **** #include <stdint.h>
   5:../../../libDaisy/src/hid/usb.h **** #include <stdlib.h>
   6:../../../libDaisy/src/hid/usb.h **** 
   7:../../../libDaisy/src/hid/usb.h **** namespace daisy
   8:../../../libDaisy/src/hid/usb.h **** /** @addtogroup human_interface
   9:../../../libDaisy/src/hid/usb.h ****     @{
  10:../../../libDaisy/src/hid/usb.h **** */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 4


  11:../../../libDaisy/src/hid/usb.h **** 
  12:../../../libDaisy/src/hid/usb.h **** {
  13:../../../libDaisy/src/hid/usb.h **** /** 
  14:../../../libDaisy/src/hid/usb.h ****     @brief Interface for initializing and using the USB Peripherals on the daisy
  15:../../../libDaisy/src/hid/usb.h ****     @author Stephen Hensley
  16:../../../libDaisy/src/hid/usb.h ****     @date December 2019
  17:../../../libDaisy/src/hid/usb.h **** */
  18:../../../libDaisy/src/hid/usb.h **** class UsbHandle
  19:../../../libDaisy/src/hid/usb.h **** {
  20:../../../libDaisy/src/hid/usb.h ****   public:
  21:../../../libDaisy/src/hid/usb.h ****     /** Return values for USBHandle Functions */
  22:../../../libDaisy/src/hid/usb.h ****     enum class Result
  23:../../../libDaisy/src/hid/usb.h ****     {
  24:../../../libDaisy/src/hid/usb.h ****         OK,
  25:../../../libDaisy/src/hid/usb.h ****         ERR,
  26:../../../libDaisy/src/hid/usb.h ****     };
  27:../../../libDaisy/src/hid/usb.h **** 
  28:../../../libDaisy/src/hid/usb.h ****     /** Specified which of the two USB Peripherals to initialize. */
  29:../../../libDaisy/src/hid/usb.h ****     enum UsbPeriph
  30:../../../libDaisy/src/hid/usb.h ****     {
  31:../../../libDaisy/src/hid/usb.h ****         FS_INTERNAL, /**< Internal pin */
  32:../../../libDaisy/src/hid/usb.h ****         FS_EXTERNAL, /**< FS External D+ pin is Pin 38 (GPIO32). FS External D- pin is Pin 37 (GPIO
  33:../../../libDaisy/src/hid/usb.h ****         FS_BOTH,     /**< Both */
  34:../../../libDaisy/src/hid/usb.h ****     };
  35:../../../libDaisy/src/hid/usb.h **** 
  36:../../../libDaisy/src/hid/usb.h **** 
  37:../../../libDaisy/src/hid/usb.h ****     /** Function called upon reception of a buffer */
  38:../../../libDaisy/src/hid/usb.h ****     typedef void (*ReceiveCallback)(uint8_t* buff, uint32_t* len);
  39:../../../libDaisy/src/hid/usb.h **** 
  40:../../../libDaisy/src/hid/usb.h ****     UsbHandle() {}
  41:../../../libDaisy/src/hid/usb.h **** 
  42:../../../libDaisy/src/hid/usb.h ****     ~UsbHandle() {}
  44              		.loc 3 42 5 is_stmt 1 view .LVU3
  45              		.loc 3 42 5 is_stmt 0 view .LVU4
  46              	.LBE109:
  47              	.LBB110:
  48              	.LBI110:
  49              		.file 4 "../../../libDaisy/src/per/adc.h"
   1:../../../libDaisy/src/per/adc.h **** #pragma once
   2:../../../libDaisy/src/per/adc.h **** #ifndef DSY_ADC_H
   3:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_H /**< Macro */
   4:../../../libDaisy/src/per/adc.h **** #include <stdint.h>
   5:../../../libDaisy/src/per/adc.h **** #include <stdlib.h>
   6:../../../libDaisy/src/per/adc.h **** #include "daisy_core.h"
   7:../../../libDaisy/src/per/adc.h **** #include "per/gpio.h"
   8:../../../libDaisy/src/per/adc.h **** 
   9:../../../libDaisy/src/per/adc.h **** #define DSY_ADC_MAX_CHANNELS 16 /**< Maximum number of ADC channels */
  10:../../../libDaisy/src/per/adc.h **** 
  11:../../../libDaisy/src/per/adc.h **** namespace daisy
  12:../../../libDaisy/src/per/adc.h **** {
  13:../../../libDaisy/src/per/adc.h **** /** @addtogroup per_analog
  14:../../../libDaisy/src/per/adc.h ****     @{
  15:../../../libDaisy/src/per/adc.h **** */
  16:../../../libDaisy/src/per/adc.h **** 
  17:../../../libDaisy/src/per/adc.h **** /* While there may not be many configuration options here,
  18:../../../libDaisy/src/per/adc.h **** using a struct like this allows us to add more configuration
  19:../../../libDaisy/src/per/adc.h **** later without breaking existing functionality.
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 5


  20:../../../libDaisy/src/per/adc.h **** */
  21:../../../libDaisy/src/per/adc.h **** 
  22:../../../libDaisy/src/per/adc.h **** /** @brief   Configuration Structure for an ADC Channel 
  23:../../../libDaisy/src/per/adc.h ****  *  @details This can be used to configure a a single input, 
  24:../../../libDaisy/src/per/adc.h ****  *           or a multiplexed input, allowing up to 8 inputs on 
  25:../../../libDaisy/src/per/adc.h ****  *           one channel.
  26:../../../libDaisy/src/per/adc.h ****  *  @note    Sharing data lines to multiple muxes _is_ possible, but
  27:../../../libDaisy/src/per/adc.h ****  *           each channel sharing data lines must be set to the maximum
  28:../../../libDaisy/src/per/adc.h ****  *           number of channels, even if some multiplexers have fewer
  29:../../../libDaisy/src/per/adc.h ****  *           inputs connected.
  30:../../../libDaisy/src/per/adc.h **** */
  31:../../../libDaisy/src/per/adc.h **** struct AdcChannelConfig
  32:../../../libDaisy/src/per/adc.h **** {
  33:../../../libDaisy/src/per/adc.h ****     /** Which pin to use for multiplexing */
  34:../../../libDaisy/src/per/adc.h ****     enum MuxPin
  35:../../../libDaisy/src/per/adc.h ****     {
  36:../../../libDaisy/src/per/adc.h ****         MUX_SEL_0,    /**< & */
  37:../../../libDaisy/src/per/adc.h ****         MUX_SEL_1,    /**< & */
  38:../../../libDaisy/src/per/adc.h ****         MUX_SEL_2,    /**< & */
  39:../../../libDaisy/src/per/adc.h ****         MUX_SEL_LAST, /**< & */
  40:../../../libDaisy/src/per/adc.h ****     };
  41:../../../libDaisy/src/per/adc.h **** 
  42:../../../libDaisy/src/per/adc.h ****     /** \brief per channel conversion speed added to fixed time based on bitdepth, etc. */
  43:../../../libDaisy/src/per/adc.h ****     enum ConversionSpeed
  44:../../../libDaisy/src/per/adc.h ****     {
  45:../../../libDaisy/src/per/adc.h ****         SPEED_1CYCLES_5,
  46:../../../libDaisy/src/per/adc.h ****         SPEED_2CYCLES_5,
  47:../../../libDaisy/src/per/adc.h ****         SPEED_8CYCLES_5,
  48:../../../libDaisy/src/per/adc.h ****         SPEED_16CYCLES_5,
  49:../../../libDaisy/src/per/adc.h ****         SPEED_32CYCLES_5,
  50:../../../libDaisy/src/per/adc.h ****         SPEED_64CYCLES_5,
  51:../../../libDaisy/src/per/adc.h ****         SPEED_387CYCLES_5,
  52:../../../libDaisy/src/per/adc.h ****         SPEED_810CYCLES_5,
  53:../../../libDaisy/src/per/adc.h ****     };
  54:../../../libDaisy/src/per/adc.h **** 
  55:../../../libDaisy/src/per/adc.h ****     /** Initializes a single ADC pin as an ADC. 
  56:../../../libDaisy/src/per/adc.h ****     \param pin Pin to init.
  57:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  58:../../../libDaisy/src/per/adc.h ****      */
  59:../../../libDaisy/src/per/adc.h ****     void InitSingle(dsy_gpio_pin pin, ConversionSpeed speed = SPEED_8CYCLES_5);
  60:../../../libDaisy/src/per/adc.h **** 
  61:../../../libDaisy/src/per/adc.h ****     /** 
  62:../../../libDaisy/src/per/adc.h ****     Initializes a single ADC pin as a Multiplexed ADC.
  63:../../../libDaisy/src/per/adc.h ****     Requires a CD405X Multiplexer connected to the pin.
  64:../../../libDaisy/src/per/adc.h ****     You only need to supply the mux pins that are required,
  65:../../../libDaisy/src/per/adc.h ****     e.g. a 4052 mux would only require mux_0 and mux_1.
  66:../../../libDaisy/src/per/adc.h ****     Internal Callbacks handle the pin addressing.
  67:../../../libDaisy/src/per/adc.h ****     \param adc_pin &
  68:../../../libDaisy/src/per/adc.h ****     \param mux_channels must be 1-8
  69:../../../libDaisy/src/per/adc.h ****     \param mux_0 First mux pin
  70:../../../libDaisy/src/per/adc.h ****     \param mux_1 Second mux pin
  71:../../../libDaisy/src/per/adc.h ****     \param mux_2 Third mux pin
  72:../../../libDaisy/src/per/adc.h ****     \param speed conversion speed for this pin defaults to 8.5 cycles
  73:../../../libDaisy/src/per/adc.h ****     */
  74:../../../libDaisy/src/per/adc.h ****     void InitMux(dsy_gpio_pin    adc_pin,
  75:../../../libDaisy/src/per/adc.h ****                  size_t          mux_channels,
  76:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_0,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 6


  77:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_1 = {DSY_GPIOX, 0},
  78:../../../libDaisy/src/per/adc.h ****                  dsy_gpio_pin    mux_2 = {DSY_GPIOX, 0},
  79:../../../libDaisy/src/per/adc.h ****                  ConversionSpeed speed = SPEED_8CYCLES_5);
  80:../../../libDaisy/src/per/adc.h **** 
  81:../../../libDaisy/src/per/adc.h ****     dsy_gpio        pin_;                   /**< & */
  82:../../../libDaisy/src/per/adc.h ****     dsy_gpio        mux_pin_[MUX_SEL_LAST]; /**< & */
  83:../../../libDaisy/src/per/adc.h ****     uint8_t         mux_channels_;          /**< & */
  84:../../../libDaisy/src/per/adc.h ****     ConversionSpeed speed_;
  85:../../../libDaisy/src/per/adc.h **** };
  86:../../../libDaisy/src/per/adc.h **** 
  87:../../../libDaisy/src/per/adc.h **** /**
  88:../../../libDaisy/src/per/adc.h ****    @brief Handler for analog to digital conversion
  89:../../../libDaisy/src/per/adc.h **** */
  90:../../../libDaisy/src/per/adc.h **** class AdcHandle
  91:../../../libDaisy/src/per/adc.h **** {
  92:../../../libDaisy/src/per/adc.h ****   public:
  93:../../../libDaisy/src/per/adc.h ****     /** Supported oversampling amounts */
  94:../../../libDaisy/src/per/adc.h ****     enum OverSampling
  95:../../../libDaisy/src/per/adc.h ****     {
  96:../../../libDaisy/src/per/adc.h ****         OVS_NONE, /**< & */
  97:../../../libDaisy/src/per/adc.h ****         OVS_4,    /**< & */
  98:../../../libDaisy/src/per/adc.h ****         OVS_8,    /**< & */
  99:../../../libDaisy/src/per/adc.h ****         OVS_16,   /**< & */
 100:../../../libDaisy/src/per/adc.h ****         OVS_32,   /**< & */
 101:../../../libDaisy/src/per/adc.h ****         OVS_64,   /**< & */
 102:../../../libDaisy/src/per/adc.h ****         OVS_128,  /**< & */
 103:../../../libDaisy/src/per/adc.h ****         OVS_256,  /**< & */
 104:../../../libDaisy/src/per/adc.h ****         OVS_512,  /**< & */
 105:../../../libDaisy/src/per/adc.h ****         OVS_1024, /**< & */
 106:../../../libDaisy/src/per/adc.h ****         OVS_LAST, /**< & */
 107:../../../libDaisy/src/per/adc.h ****     };
 108:../../../libDaisy/src/per/adc.h **** 
 109:../../../libDaisy/src/per/adc.h ****     AdcHandle() {}
 110:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
  50              		.loc 4 110 5 is_stmt 1 view .LVU5
  51              		.loc 4 110 5 is_stmt 0 view .LVU6
  52              	.LBE110:
  53              	.LBB111:
  54              	.LBI111:
  55              		.file 5 "../../../libDaisy/src/hid/audio.h"
   1:../../../libDaisy/src/hid/audio.h **** #ifndef DSY_AUDIO_H
   2:../../../libDaisy/src/hid/audio.h **** #define DSY_AUDIO_H /**< & */
   3:../../../libDaisy/src/hid/audio.h **** 
   4:../../../libDaisy/src/hid/audio.h **** #include "per/sai.h"
   5:../../../libDaisy/src/hid/audio.h **** 
   6:../../../libDaisy/src/hid/audio.h **** namespace daisy
   7:../../../libDaisy/src/hid/audio.h **** {
   8:../../../libDaisy/src/hid/audio.h **** /** @brief Audio Engine Handle
   9:../../../libDaisy/src/hid/audio.h ****  *  @ingroup audio 
  10:../../../libDaisy/src/hid/audio.h ****  *  @details This class allows for higher level access to an audio engine.
  11:../../../libDaisy/src/hid/audio.h ****  *           If you're using a SOM like the DaisySeed or DaisyPatchSM (or any 
  12:../../../libDaisy/src/hid/audio.h ****  *            board that includes one of those objects) then the intialization
  13:../../../libDaisy/src/hid/audio.h ****  *            is already taken  care of.
  14:../../../libDaisy/src/hid/audio.h ****  *           If you're setting up your own custom hardware, or need to make changes
  15:../../../libDaisy/src/hid/audio.h ****  *           you will have to take the following steps:
  16:../../../libDaisy/src/hid/audio.h ****  *             1. Create and Initialize an SaiHandle or two depending on your requirements
  17:../../../libDaisy/src/hid/audio.h ****  *             2. Initialize the Audio Handle with the desired settings and the Initialized SaiHand
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 7


  18:../../../libDaisy/src/hid/audio.h ****  *             3. If the connected codec requires special configuration or initialization, do so
  19:../../../libDaisy/src/hid/audio.h ****  *             4. Write a callback method using either the AudioCallback or the InterleavingAudioCa
  20:../../../libDaisy/src/hid/audio.h ****  *             5. Start the Audio using one of the StartAudio function
  21:../../../libDaisy/src/hid/audio.h ****  */
  22:../../../libDaisy/src/hid/audio.h **** class AudioHandle
  23:../../../libDaisy/src/hid/audio.h **** {
  24:../../../libDaisy/src/hid/audio.h ****   public:
  25:../../../libDaisy/src/hid/audio.h ****     /** Manually configurable details about the Audio Engine */
  26:../../../libDaisy/src/hid/audio.h ****     /** TODO: Figure out how to get samplerate in here. */
  27:../../../libDaisy/src/hid/audio.h ****     struct Config
  28:../../../libDaisy/src/hid/audio.h ****     {
  29:../../../libDaisy/src/hid/audio.h ****         /** number of samples to process per callback */
  30:../../../libDaisy/src/hid/audio.h ****         size_t blocksize;
  31:../../../libDaisy/src/hid/audio.h **** 
  32:../../../libDaisy/src/hid/audio.h ****         /**< Sample rate of audio */
  33:../../../libDaisy/src/hid/audio.h ****         SaiHandle::Config::SampleRate samplerate;
  34:../../../libDaisy/src/hid/audio.h **** 
  35:../../../libDaisy/src/hid/audio.h ****         /** factor for adjustment before and after callback for hardware that may have extra headro
  36:../../../libDaisy/src/hid/audio.h ****         float postgain;
  37:../../../libDaisy/src/hid/audio.h **** 
  38:../../../libDaisy/src/hid/audio.h ****         /** factor for additional one-sided compensation to audio path for hardware that may
  39:../../../libDaisy/src/hid/audio.h ****          *  have unequal input/output ranges
  40:../../../libDaisy/src/hid/audio.h ****          */
  41:../../../libDaisy/src/hid/audio.h ****         float output_compensation;
  42:../../../libDaisy/src/hid/audio.h **** 
  43:../../../libDaisy/src/hid/audio.h ****         /** Sets default values for config struct */
  44:../../../libDaisy/src/hid/audio.h ****         Config()
  45:../../../libDaisy/src/hid/audio.h ****         : blocksize(48),
  46:../../../libDaisy/src/hid/audio.h ****           samplerate(SaiHandle::Config::SampleRate::SAI_48KHZ),
  47:../../../libDaisy/src/hid/audio.h ****           postgain(1.f),
  48:../../../libDaisy/src/hid/audio.h ****           output_compensation(1.f)
  49:../../../libDaisy/src/hid/audio.h ****         {
  50:../../../libDaisy/src/hid/audio.h ****         }
  51:../../../libDaisy/src/hid/audio.h ****     };
  52:../../../libDaisy/src/hid/audio.h **** 
  53:../../../libDaisy/src/hid/audio.h ****     enum class Result
  54:../../../libDaisy/src/hid/audio.h ****     {
  55:../../../libDaisy/src/hid/audio.h ****         OK,
  56:../../../libDaisy/src/hid/audio.h ****         ERR,
  57:../../../libDaisy/src/hid/audio.h ****     };
  58:../../../libDaisy/src/hid/audio.h **** 
  59:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving input buffer
  60:../../../libDaisy/src/hid/audio.h ****      * Buffer arranged by float[chn][sample] 
  61:../../../libDaisy/src/hid/audio.h ****      * const so that the user can't modify the input
  62:../../../libDaisy/src/hid/audio.h ****      */
  63:../../../libDaisy/src/hid/audio.h ****     typedef const float* const* InputBuffer;
  64:../../../libDaisy/src/hid/audio.h **** 
  65:../../../libDaisy/src/hid/audio.h ****     /** Non-Interleaving output buffer
  66:../../../libDaisy/src/hid/audio.h ****      * Arranged by float[chn][sample] 
  67:../../../libDaisy/src/hid/audio.h ****      */
  68:../../../libDaisy/src/hid/audio.h ****     typedef float** OutputBuffer;
  69:../../../libDaisy/src/hid/audio.h **** 
  70:../../../libDaisy/src/hid/audio.h ****     /** Type for a Non-Interleaving audio callback 
  71:../../../libDaisy/src/hid/audio.h ****      * Non-Interleaving audio callbacks in daisy will be of this type
  72:../../../libDaisy/src/hid/audio.h ****      */
  73:../../../libDaisy/src/hid/audio.h ****     typedef void (*AudioCallback)(InputBuffer  in,
  74:../../../libDaisy/src/hid/audio.h ****                                   OutputBuffer out,
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 8


  75:../../../libDaisy/src/hid/audio.h ****                                   size_t       size);
  76:../../../libDaisy/src/hid/audio.h **** 
  77:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Input buffer
  78:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }]
  79:../../../libDaisy/src/hid/audio.h ****      ** this is const, as the user shouldn't modify it
  80:../../../libDaisy/src/hid/audio.h ****     */
  81:../../../libDaisy/src/hid/audio.h ****     typedef const float* InterleavingInputBuffer;
  82:../../../libDaisy/src/hid/audio.h **** 
  83:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Output buffer 
  84:../../../libDaisy/src/hid/audio.h ****      ** audio is prepared as { L0, R0, L1, R1, . . . LN, RN }
  85:../../../libDaisy/src/hid/audio.h ****     */
  86:../../../libDaisy/src/hid/audio.h ****     typedef float* InterleavingOutputBuffer;
  87:../../../libDaisy/src/hid/audio.h **** 
  88:../../../libDaisy/src/hid/audio.h ****     /** Interleaving Audio Callback 
  89:../../../libDaisy/src/hid/audio.h ****      * Interleaving audio callbacks in daisy must be of this type
  90:../../../libDaisy/src/hid/audio.h ****      */
  91:../../../libDaisy/src/hid/audio.h ****     typedef void (*InterleavingAudioCallback)(InterleavingInputBuffer  in,
  92:../../../libDaisy/src/hid/audio.h ****                                               InterleavingOutputBuffer out,
  93:../../../libDaisy/src/hid/audio.h ****                                               size_t                   size);
  94:../../../libDaisy/src/hid/audio.h **** 
  95:../../../libDaisy/src/hid/audio.h ****     AudioHandle() : pimpl_(nullptr) {}
  96:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
  56              		.loc 5 96 5 is_stmt 1 view .LVU7
  57              		.loc 5 96 5 is_stmt 0 view .LVU8
  58              	.LBE111:
  59              		.loc 1 22 19 view .LVU9
  60 0000 7047     		bx	lr
  61              		.cfi_endproc
  62              	.LFE2555:
  64              		.weak	_ZN5daisy9DaisySeedD1Ev
  65              		.thumb_set _ZN5daisy9DaisySeedD1Ev,_ZN5daisy9DaisySeedD2Ev
  66 0002 00BF     		.section	.text._ZN7daisysp18SyntheticSnareDrumD2Ev,"axG",%progbits,_ZN7daisysp18SyntheticSnareDrum
  67              		.align	1
  68              		.p2align 2,,3
  69              		.weak	_ZN7daisysp18SyntheticSnareDrumD2Ev
  70              		.syntax unified
  71              		.thumb
  72              		.thumb_func
  73              		.fpu fpv5-d16
  75              	_ZN7daisysp18SyntheticSnareDrumD2Ev:
  76              	.LVL1:
  77              	.LFB4324:
  78              		.file 6 "../../../DaisySP/Source/Drums/synthsnaredrum.h"
   1:../../../DaisySP/Source/Drums/synthsnaredrum.h **** /*
   2:../../../DaisySP/Source/Drums/synthsnaredrum.h **** Copyright (c) 2020 Electrosmith, Corp, Emilie Gillet
   3:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
   4:../../../DaisySP/Source/Drums/synthsnaredrum.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Drums/synthsnaredrum.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Drums/synthsnaredrum.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Drums/synthsnaredrum.h **** */
   8:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
   9:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #pragma once
  10:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #ifndef DSY_SYNTHSD_H
  11:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #define DSY_SYNTHSD_H
  12:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
  13:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #include "Filters/svf.h"
  14:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 9


  15:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #include <stdint.h>
  16:../../../DaisySP/Source/Drums/synthsnaredrum.h **** #ifdef __cplusplus
  17:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
  18:../../../DaisySP/Source/Drums/synthsnaredrum.h **** /** @file synthsnaredrum.h */
  19:../../../DaisySP/Source/Drums/synthsnaredrum.h **** 
  20:../../../DaisySP/Source/Drums/synthsnaredrum.h **** namespace daisysp
  21:../../../DaisySP/Source/Drums/synthsnaredrum.h **** {
  22:../../../DaisySP/Source/Drums/synthsnaredrum.h **** /**  
  23:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        @brief Naive snare drum model (two modulated oscillators + filtered noise).
  24:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        @author Ben Sergentanis
  25:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        @date Jan 2021
  26:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        Uses a few magic numbers taken from the 909 schematics: \n 
  27:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Ratio between the two modes of the drum set to 1.47. \n
  28:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Funky coupling between the two modes. \n
  29:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        - Noise coloration filters and envelope shapes for the snare. \n \n
  30:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        Ported from pichenettes/eurorack/plaits/dsp/drums/synthetic_snare_drum.h \n
  31:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        to an independent module. \n
  32:../../../DaisySP/Source/Drums/synthsnaredrum.h ****        Original code written by Emilie Gillet in 2016. \n
  33:../../../DaisySP/Source/Drums/synthsnaredrum.h **** */
  34:../../../DaisySP/Source/Drums/synthsnaredrum.h **** class SyntheticSnareDrum
  35:../../../DaisySP/Source/Drums/synthsnaredrum.h **** {
  36:../../../DaisySP/Source/Drums/synthsnaredrum.h ****   public:
  37:../../../DaisySP/Source/Drums/synthsnaredrum.h ****     SyntheticSnareDrum() {}
  38:../../../DaisySP/Source/Drums/synthsnaredrum.h ****     ~SyntheticSnareDrum() {}
  79              		.loc 6 38 5 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		@ link register save eliminated.
  84              	.LBB112:
  85              	.LBI112:
  86              		.file 7 "../../../DaisySP/Source/Filters/svf.h"
   1:../../../DaisySP/Source/Filters/svf.h **** /*
   2:../../../DaisySP/Source/Filters/svf.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../../DaisySP/Source/Filters/svf.h **** 
   4:../../../DaisySP/Source/Filters/svf.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Filters/svf.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Filters/svf.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Filters/svf.h **** */
   8:../../../DaisySP/Source/Filters/svf.h **** 
   9:../../../DaisySP/Source/Filters/svf.h **** #pragma once
  10:../../../DaisySP/Source/Filters/svf.h **** #ifndef DSY_SVF_H
  11:../../../DaisySP/Source/Filters/svf.h **** #define DSY_SVF_H
  12:../../../DaisySP/Source/Filters/svf.h **** 
  13:../../../DaisySP/Source/Filters/svf.h **** namespace daisysp
  14:../../../DaisySP/Source/Filters/svf.h **** {
  15:../../../DaisySP/Source/Filters/svf.h **** /**      Double Sampled, Stable State Variable Filter
  16:../../../DaisySP/Source/Filters/svf.h **** 
  17:../../../DaisySP/Source/Filters/svf.h **** Credit to Andrew Simper from musicdsp.org
  18:../../../DaisySP/Source/Filters/svf.h **** 
  19:../../../DaisySP/Source/Filters/svf.h **** This is his "State Variable Filter (Double Sampled, Stable)"
  20:../../../DaisySP/Source/Filters/svf.h **** 
  21:../../../DaisySP/Source/Filters/svf.h **** Additional thanks to Laurent de Soras for stability limit, and 
  22:../../../DaisySP/Source/Filters/svf.h **** Stefan Diedrichsen for the correct notch output
  23:../../../DaisySP/Source/Filters/svf.h **** 
  24:../../../DaisySP/Source/Filters/svf.h **** Ported by: Stephen Hensley
  25:../../../DaisySP/Source/Filters/svf.h **** */
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 10


  26:../../../DaisySP/Source/Filters/svf.h **** class Svf
  27:../../../DaisySP/Source/Filters/svf.h **** {
  28:../../../DaisySP/Source/Filters/svf.h ****   public:
  29:../../../DaisySP/Source/Filters/svf.h ****     Svf() {}
  30:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
  87              		.loc 7 30 5 view .LVU11
  88              		.loc 7 30 5 is_stmt 0 view .LVU12
  89              	.LBE112:
  90              	.LBB113:
  91              	.LBI113:
  92              		.loc 7 30 5 is_stmt 1 view .LVU13
  93              		.loc 7 30 5 is_stmt 0 view .LVU14
  94              	.LBE113:
  95              	.LBB114:
  96              	.LBI114:
  97              		.loc 7 30 5 is_stmt 1 view .LVU15
  98              		.loc 7 30 5 is_stmt 0 view .LVU16
  99              	.LBE114:
 100              		.loc 6 38 28 view .LVU17
 101 0000 7047     		bx	lr
 102              		.cfi_endproc
 103              	.LFE4324:
 105              		.weak	_ZN7daisysp18SyntheticSnareDrumD1Ev
 106              		.thumb_set _ZN7daisysp18SyntheticSnareDrumD1Ev,_ZN7daisysp18SyntheticSnareDrumD2Ev
 107 0002 00BF     		.section	.text._ZN7daisysp5MetroD2Ev,"axG",%progbits,_ZN7daisysp5MetroD5Ev,comdat
 108              		.align	1
 109              		.p2align 2,,3
 110              		.weak	_ZN7daisysp5MetroD2Ev
 111              		.syntax unified
 112              		.thumb
 113              		.thumb_func
 114              		.fpu fpv5-d16
 116              	_ZN7daisysp5MetroD2Ev:
 117              	.LVL2:
 118              	.LFB4660:
 119              		.file 8 "../../../DaisySP/Source/Utility/metro.h"
   1:../../../DaisySP/Source/Utility/metro.h **** /*
   2:../../../DaisySP/Source/Utility/metro.h **** Copyright (c) 2020 Electrosmith, Corp
   3:../../../DaisySP/Source/Utility/metro.h **** 
   4:../../../DaisySP/Source/Utility/metro.h **** Use of this source code is governed by an MIT-style
   5:../../../DaisySP/Source/Utility/metro.h **** license that can be found in the LICENSE file or at
   6:../../../DaisySP/Source/Utility/metro.h **** https://opensource.org/licenses/MIT.
   7:../../../DaisySP/Source/Utility/metro.h **** */
   8:../../../DaisySP/Source/Utility/metro.h **** 
   9:../../../DaisySP/Source/Utility/metro.h **** #pragma once
  10:../../../DaisySP/Source/Utility/metro.h **** #ifndef DSY_METRO_H
  11:../../../DaisySP/Source/Utility/metro.h **** #define DSY_METRO_H
  12:../../../DaisySP/Source/Utility/metro.h **** #include <stdint.h>
  13:../../../DaisySP/Source/Utility/metro.h **** #ifdef __cplusplus
  14:../../../DaisySP/Source/Utility/metro.h **** 
  15:../../../DaisySP/Source/Utility/metro.h **** namespace daisysp
  16:../../../DaisySP/Source/Utility/metro.h **** {
  17:../../../DaisySP/Source/Utility/metro.h **** /** Creates a clock signal at a specific frequency.
  18:../../../DaisySP/Source/Utility/metro.h **** */
  19:../../../DaisySP/Source/Utility/metro.h **** class Metro
  20:../../../DaisySP/Source/Utility/metro.h **** {
  21:../../../DaisySP/Source/Utility/metro.h ****   public:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 11


  22:../../../DaisySP/Source/Utility/metro.h ****     Metro() {}
  23:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 120              		.loc 8 23 5 is_stmt 1 view -0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 0
 123              		@ frame_needed = 0, uses_anonymous_args = 0
 124              		@ link register save eliminated.
 125              		.loc 8 23 15 is_stmt 0 view .LVU19
 126 0000 7047     		bx	lr
 127              		.cfi_endproc
 128              	.LFE4660:
 130              		.weak	_ZN7daisysp5MetroD1Ev
 131              		.thumb_set _ZN7daisysp5MetroD1Ev,_ZN7daisysp5MetroD2Ev
 132              		.section	.text._Z13AudioCallbackPKPKfPPfj,"ax",%progbits
 133              		.align	1
 134              		.p2align 2,,3
 135              		.global	_Z13AudioCallbackPKPKfPPfj
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
 139              		.fpu fpv5-d16
 141              	_Z13AudioCallbackPKPKfPPfj:
 142              	.LVL3:
 143              	.LFB4681:
 144              		.file 9 "synthsnaredrum.cpp"
   1:synthsnaredrum.cpp **** #include "daisy_seed.h"
   2:synthsnaredrum.cpp **** #include "daisysp.h"
   3:synthsnaredrum.cpp **** 
   4:synthsnaredrum.cpp **** using namespace daisy;
   5:synthsnaredrum.cpp **** using namespace daisysp;
   6:synthsnaredrum.cpp **** 
   7:synthsnaredrum.cpp **** DaisySeed          hw;
   8:synthsnaredrum.cpp **** SyntheticSnareDrum sd;
   9:synthsnaredrum.cpp **** Metro              tick;
  10:synthsnaredrum.cpp **** 
  11:synthsnaredrum.cpp **** void AudioCallback(AudioHandle::InputBuffer  in,
  12:synthsnaredrum.cpp ****                    AudioHandle::OutputBuffer out,
  13:synthsnaredrum.cpp ****                    size_t                    size)
  14:synthsnaredrum.cpp **** {
 145              		.loc 9 14 1 is_stmt 1 view -0
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 8
 148              		@ frame_needed = 0, uses_anonymous_args = 0
  15:synthsnaredrum.cpp ****     for(size_t i = 0; i < size; i++)
 149              		.loc 9 15 5 view .LVU21
 150              	.LBB115:
 151              		.loc 9 15 25 view .LVU22
 152 0000 002A     		cmp	r2, #0
 153 0002 33D0     		beq	.L17
 154              	.LBE115:
  14:synthsnaredrum.cpp ****     for(size_t i = 0; i < size; i++)
 155              		.loc 9 14 1 is_stmt 0 view .LVU23
 156 0004 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 157              		.cfi_def_cfa_offset 24
 158              		.cfi_offset 4, -24
 159              		.cfi_offset 5, -20
 160              		.cfi_offset 6, -16
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 12


 161              		.cfi_offset 7, -12
 162              		.cfi_offset 8, -8
 163              		.cfi_offset 14, -4
 164 0008 0E46     		mov	r6, r1
 165 000a 82B0     		sub	sp, sp, #8
 166              		.cfi_def_cfa_offset 32
 167 000c 9046     		mov	r8, r2
 168              	.LBB120:
 169              		.loc 9 15 16 view .LVU24
 170 000e 0024     		movs	r4, #0
 171 0010 0EE0     		b	.L8
 172              	.LVL4:
 173              	.L7:
 174              	.LBB116:
  16:synthsnaredrum.cpp ****     {
  17:synthsnaredrum.cpp ****         bool t = tick.Process();
  18:synthsnaredrum.cpp ****         if(t)
  19:synthsnaredrum.cpp ****         {
  20:synthsnaredrum.cpp ****             sd.SetAccent(1000 / (float)RAND_MAX);
  21:synthsnaredrum.cpp ****             sd.SetDecay(1000 / (float)RAND_MAX);
  22:synthsnaredrum.cpp ****             sd.SetSnappy(1000 / (float)RAND_MAX);
  23:synthsnaredrum.cpp ****         }
  24:synthsnaredrum.cpp ****         out[0][i] = out[1][i] = sd.Process(t);
 175              		.loc 9 24 9 is_stmt 1 discriminator 2 view .LVU25
 176              		.loc 9 24 29 is_stmt 0 discriminator 2 view .LVU26
 177 0012 7368     		ldr	r3, [r6, #4]
 178              		.loc 9 24 43 discriminator 2 view .LVU27
 179 0014 1648     		ldr	r0, .L21
 180              		.loc 9 24 29 discriminator 2 view .LVU28
 181 0016 03EB8405 		add	r5, r3, r4, lsl #2
 182              	.LBE116:
  15:synthsnaredrum.cpp ****     {
 183              		.loc 9 15 5 discriminator 2 view .LVU29
 184 001a 0134     		adds	r4, r4, #1
 185              	.LVL5:
 186              	.LBB117:
 187              		.loc 9 24 43 discriminator 2 view .LVU30
 188 001c FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum7ProcessEb
 189              	.LVL6:
 190              		.loc 9 24 19 discriminator 2 view .LVU31
 191 0020 3368     		ldr	r3, [r6]
 192              	.LBE117:
  15:synthsnaredrum.cpp ****     {
 193              		.loc 9 15 25 discriminator 2 view .LVU32
 194 0022 A045     		cmp	r8, r4
 195              	.LBB118:
 196              		.loc 9 24 31 discriminator 2 view .LVU33
 197 0024 85ED000A 		vstr.32	s0, [r5]
 198              		.loc 9 24 19 discriminator 2 view .LVU34
 199 0028 3B44     		add	r3, r3, r7
 200 002a 83ED000A 		vstr.32	s0, [r3]
 201              	.LBE118:
  15:synthsnaredrum.cpp ****     {
 202              		.loc 9 15 5 is_stmt 1 discriminator 2 view .LVU35
 203              	.LVL7:
  15:synthsnaredrum.cpp ****     {
 204              		.loc 9 15 25 discriminator 2 view .LVU36
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 13


 205 002e 1AD0     		beq	.L20
 206              	.LVL8:
 207              	.L8:
 208              	.LBB119:
  17:synthsnaredrum.cpp ****         if(t)
 209              		.loc 9 17 9 view .LVU37
  17:synthsnaredrum.cpp ****         if(t)
 210              		.loc 9 17 30 is_stmt 0 view .LVU38
 211 0030 1048     		ldr	r0, .L21+4
 212 0032 A700     		lsls	r7, r4, #2
 213 0034 FFF7FEFF 		bl	_ZN7daisysp5Metro7ProcessEv
 214              	.LVL9:
  17:synthsnaredrum.cpp ****         if(t)
 215              		.loc 9 17 31 view .LVU39
 216 0038 0028     		cmp	r0, #0
 217 003a 14BF     		ite	ne
 218 003c 0121     		movne	r1, #1
 219 003e 0021     		moveq	r1, #0
 220              	.LVL10:
  18:synthsnaredrum.cpp ****         {
 221              		.loc 9 18 9 is_stmt 1 view .LVU40
 222 0040 E7D0     		beq	.L7
  20:synthsnaredrum.cpp ****             sd.SetDecay(1000 / (float)RAND_MAX);
 223              		.loc 9 20 25 is_stmt 0 view .LVU41
 224 0042 9FED0D0A 		vldr.32	s0, .L21+8
 225 0046 0A48     		ldr	r0, .L21
 226 0048 0191     		str	r1, [sp, #4]
  20:synthsnaredrum.cpp ****             sd.SetDecay(1000 / (float)RAND_MAX);
 227              		.loc 9 20 13 is_stmt 1 view .LVU42
  20:synthsnaredrum.cpp ****             sd.SetDecay(1000 / (float)RAND_MAX);
 228              		.loc 9 20 25 is_stmt 0 view .LVU43
 229 004a FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum9SetAccentEf
 230              	.LVL11:
  21:synthsnaredrum.cpp ****             sd.SetSnappy(1000 / (float)RAND_MAX);
 231              		.loc 9 21 13 is_stmt 1 view .LVU44
  21:synthsnaredrum.cpp ****             sd.SetSnappy(1000 / (float)RAND_MAX);
 232              		.loc 9 21 24 is_stmt 0 view .LVU45
 233 004e 9FED0A0A 		vldr.32	s0, .L21+8
 234 0052 0748     		ldr	r0, .L21
 235 0054 FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum8SetDecayEf
 236              	.LVL12:
  22:synthsnaredrum.cpp ****         }
 237              		.loc 9 22 13 is_stmt 1 view .LVU46
  22:synthsnaredrum.cpp ****         }
 238              		.loc 9 22 25 is_stmt 0 view .LVU47
 239 0058 9FED070A 		vldr.32	s0, .L21+8
 240 005c 0448     		ldr	r0, .L21
 241 005e FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum9SetSnappyEf
 242              	.LVL13:
 243 0062 0199     		ldr	r1, [sp, #4]
 244 0064 D5E7     		b	.L7
 245              	.LVL14:
 246              	.L20:
  22:synthsnaredrum.cpp ****         }
 247              		.loc 9 22 25 view .LVU48
 248              	.LBE119:
 249              	.LBE120:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 14


  25:synthsnaredrum.cpp ****     }
  26:synthsnaredrum.cpp **** }
 250              		.loc 9 26 1 view .LVU49
 251 0066 02B0     		add	sp, sp, #8
 252              		.cfi_def_cfa_offset 24
 253              		@ sp needed
 254 0068 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 255              	.LVL15:
 256              	.L17:
 257              		.cfi_def_cfa_offset 0
 258              		.cfi_restore 4
 259              		.cfi_restore 5
 260              		.cfi_restore 6
 261              		.cfi_restore 7
 262              		.cfi_restore 8
 263              		.cfi_restore 14
 264              		.loc 9 26 1 view .LVU50
 265 006c 7047     		bx	lr
 266              	.L22:
 267 006e 00BF     		.align	2
 268              	.L21:
 269 0070 00000000 		.word	.LANCHOR1
 270 0074 00000000 		.word	.LANCHOR0
 271 0078 0000FA34 		.word	888799232
 272              		.cfi_endproc
 273              	.LFE4681:
 275              		.section	.text.startup.main,"ax",%progbits
 276              		.align	1
 277              		.p2align 2,,3
 278              		.global	main
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 282              		.fpu fpv5-d16
 284              	main:
 285              	.LFB4682:
  27:synthsnaredrum.cpp **** 
  28:synthsnaredrum.cpp **** int main(void)
  29:synthsnaredrum.cpp **** {
 286              		.loc 9 29 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
  30:synthsnaredrum.cpp ****     hw.Configure();
 290              		.loc 9 30 5 view .LVU52
  29:synthsnaredrum.cpp ****     hw.Configure();
 291              		.loc 9 29 1 is_stmt 0 view .LVU53
 292 0000 08B5     		push	{r3, lr}
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 296              		.loc 9 30 17 view .LVU54
 297 0002 1148     		ldr	r0, .L26
  29:synthsnaredrum.cpp ****     hw.Configure();
 298              		.loc 9 29 1 view .LVU55
 299 0004 2DED028B 		vpush.64	{d8}
 300              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 15


 301              		.cfi_offset 80, -16
 302              		.cfi_offset 81, -12
 303              		.loc 9 30 17 view .LVU56
 304 0008 FFF7FEFF 		bl	_ZN5daisy9DaisySeed9ConfigureEv
 305              	.LVL16:
  31:synthsnaredrum.cpp ****     hw.Init();
 306              		.loc 9 31 5 is_stmt 1 view .LVU57
 307              		.loc 9 31 12 is_stmt 0 view .LVU58
 308 000c 0021     		movs	r1, #0
 309 000e 0E48     		ldr	r0, .L26
 310 0010 FFF7FEFF 		bl	_ZN5daisy9DaisySeed4InitEb
 311              	.LVL17:
  32:synthsnaredrum.cpp ****     hw.SetAudioBlockSize(4);
 312              		.loc 9 32 5 is_stmt 1 view .LVU59
 313              		.loc 9 32 25 is_stmt 0 view .LVU60
 314 0014 0421     		movs	r1, #4
 315 0016 0C48     		ldr	r0, .L26
 316 0018 FFF7FEFF 		bl	_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
 317              	.LVL18:
  33:synthsnaredrum.cpp ****     float sample_rate = hw.AudioSampleRate();
 318              		.loc 9 33 5 is_stmt 1 view .LVU61
 319              		.loc 9 33 43 is_stmt 0 view .LVU62
 320 001c 0A48     		ldr	r0, .L26
 321 001e FFF7FEFF 		bl	_ZN5daisy9DaisySeed15AudioSampleRateEv
 322              	.LVL19:
 323 0022 B0EE408A 		vmov.f32	s16, s0
  34:synthsnaredrum.cpp **** 
  35:synthsnaredrum.cpp ****     tick.Init(2.f, sample_rate);
 324              		.loc 9 35 14 view .LVU63
 325 0026 0948     		ldr	r0, .L26+4
 326 0028 B0EE000A 		vmov.f32	s0, #2.0e+0
 327              	.LVL20:
 328              		.loc 9 35 5 is_stmt 1 view .LVU64
 329              		.loc 9 35 14 is_stmt 0 view .LVU65
 330 002c F0EE480A 		vmov.f32	s1, s16
 331 0030 FFF7FEFF 		bl	_ZN7daisysp5Metro4InitEff
 332              	.LVL21:
  36:synthsnaredrum.cpp **** 
  37:synthsnaredrum.cpp ****     sd.Init(sample_rate);
 333              		.loc 9 37 5 is_stmt 1 view .LVU66
 334              		.loc 9 37 12 is_stmt 0 view .LVU67
 335 0034 0648     		ldr	r0, .L26+8
 336 0036 B0EE480A 		vmov.f32	s0, s16
 337 003a FFF7FEFF 		bl	_ZN7daisysp18SyntheticSnareDrum4InitEf
 338              	.LVL22:
  38:synthsnaredrum.cpp **** 
  39:synthsnaredrum.cpp ****     hw.StartAudio(AudioCallback);
 339              		.loc 9 39 5 is_stmt 1 view .LVU68
 340              		.loc 9 39 18 is_stmt 0 view .LVU69
 341 003e 0549     		ldr	r1, .L26+12
 342 0040 0148     		ldr	r0, .L26
 343 0042 FFF7FEFF 		bl	_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
 344              	.LVL23:
 345              	.L24:
  40:synthsnaredrum.cpp ****     while(1) {}
 346              		.loc 9 40 5 is_stmt 1 discriminator 1 view .LVU70
 347              		.loc 9 40 5 discriminator 1 view .LVU71
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 16


 348              		.loc 9 40 5 discriminator 1 view .LVU72
 349              		.loc 9 40 5 discriminator 1 view .LVU73
 350 0046 FEE7     		b	.L24
 351              	.L27:
 352              		.align	2
 353              	.L26:
 354 0048 00000000 		.word	.LANCHOR2
 355 004c 00000000 		.word	.LANCHOR0
 356 0050 00000000 		.word	.LANCHOR1
 357 0054 00000000 		.word	_Z13AudioCallbackPKPKfPPfj
 358              		.cfi_endproc
 359              	.LFE4682:
 361              		.section	.text.startup._GLOBAL__sub_I_hw,"ax",%progbits
 362              		.align	1
 363              		.p2align 2,,3
 364              		.syntax unified
 365              		.thumb
 366              		.thumb_func
 367              		.fpu fpv5-d16
 369              	_GLOBAL__sub_I_hw:
 370              	.LFB5245:
  41:synthsnaredrum.cpp **** }
 371              		.loc 9 41 1 view -0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LBB152:
 376              	.LBI152:
 377              		.loc 9 41 1 view .LVU75
 378              	.LVL24:
 379              	.LBB153:
 380              	.LBB154:
 381              	.LBI154:
  21:../../../libDaisy/src/daisy_seed.h ****     ~DaisySeed() {}
 382              		.loc 1 21 5 view .LVU76
 383              	.LBB155:
 384              	.LBB156:
 385              	.LBI156:
 386              		.file 10 "../../../libDaisy/src/per/qspi.h"
   1:../../../libDaisy/src/per/qspi.h **** #ifndef DSY_QSPI
   2:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI /**< Macro */
   3:../../../libDaisy/src/per/qspi.h **** 
   4:../../../libDaisy/src/per/qspi.h **** #ifndef UNIT_TEST // for unit tests, a dummy implementation
   5:../../../libDaisy/src/per/qspi.h **** 
   6:../../../libDaisy/src/per/qspi.h **** #include <cstdint>
   7:../../../libDaisy/src/per/qspi.h **** #include "daisy_core.h" // Added for dsy_gpio_pin typedef
   8:../../../libDaisy/src/per/qspi.h **** 
   9:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_TEXT       \
  10:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  11:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_text"))) /**< used for reading memory in memory_mapped mode. */
  12:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_DATA       \
  13:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  14:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_data"))) /**< used for reading memory in memory_mapped mode. */
  15:../../../libDaisy/src/per/qspi.h **** #define DSY_QSPI_BSS        \
  16:../../../libDaisy/src/per/qspi.h ****     __attribute__((section( \
  17:../../../libDaisy/src/per/qspi.h ****         ".qspiflash_bss"))) /**< used for reading memory in memory_mapped mode. */
  18:../../../libDaisy/src/per/qspi.h **** 
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 17


  19:../../../libDaisy/src/per/qspi.h **** namespace daisy
  20:../../../libDaisy/src/per/qspi.h **** {
  21:../../../libDaisy/src/per/qspi.h **** /** @addtogroup serial
  22:../../../libDaisy/src/per/qspi.h **** @{
  23:../../../libDaisy/src/per/qspi.h **** */
  24:../../../libDaisy/src/per/qspi.h **** 
  25:../../../libDaisy/src/per/qspi.h **** /** 
  26:../../../libDaisy/src/per/qspi.h ****  Driver for QSPI peripheral to interface with external flash memory. \n 
  27:../../../libDaisy/src/per/qspi.h ****     Currently supported QSPI Devices: \n 
  28:../../../libDaisy/src/per/qspi.h ****     * IS25LP080D
  29:../../../libDaisy/src/per/qspi.h **** */
  30:../../../libDaisy/src/per/qspi.h **** class QSPIHandle
  31:../../../libDaisy/src/per/qspi.h **** {
  32:../../../libDaisy/src/per/qspi.h ****   public:
  33:../../../libDaisy/src/per/qspi.h ****     enum Result
  34:../../../libDaisy/src/per/qspi.h ****     {
  35:../../../libDaisy/src/per/qspi.h ****         OK = 0,
  36:../../../libDaisy/src/per/qspi.h ****         ERR
  37:../../../libDaisy/src/per/qspi.h ****     };
  38:../../../libDaisy/src/per/qspi.h **** 
  39:../../../libDaisy/src/per/qspi.h ****     /** Indicates the current status of the module. 
  40:../../../libDaisy/src/per/qspi.h ****          *  Warnings are indicated by a leading W.
  41:../../../libDaisy/src/per/qspi.h ****          *  Errors are indicated by a leading E and cause an immediate exit.
  42:../../../libDaisy/src/per/qspi.h ****          * 
  43:../../../libDaisy/src/per/qspi.h ****          *  \param GOOD - No errors have been reported.
  44:../../../libDaisy/src/per/qspi.h ****          *  \param E_HAL_ERROR - HAL code did not return HAL_OK.
  45:../../../libDaisy/src/per/qspi.h ****          *  \param E_SWITCHING_MODES - An error was encountered while switching QSPI peripheral mod
  46:../../../libDaisy/src/per/qspi.h ****          *  \param E_INVALID_MODE - QSPI should not be written to while the program is executing fr
  47:../../../libDaisy/src/per/qspi.h ****          */
  48:../../../libDaisy/src/per/qspi.h ****     enum Status
  49:../../../libDaisy/src/per/qspi.h ****     {
  50:../../../libDaisy/src/per/qspi.h ****         GOOD = 0,
  51:../../../libDaisy/src/per/qspi.h ****         E_HAL_ERROR,
  52:../../../libDaisy/src/per/qspi.h ****         E_SWITCHING_MODES,
  53:../../../libDaisy/src/per/qspi.h ****         E_INVALID_MODE,
  54:../../../libDaisy/src/per/qspi.h ****     };
  55:../../../libDaisy/src/per/qspi.h **** 
  56:../../../libDaisy/src/per/qspi.h ****     /** Configuration structure for interfacing with QSPI Driver */
  57:../../../libDaisy/src/per/qspi.h ****     struct Config
  58:../../../libDaisy/src/per/qspi.h ****     {
  59:../../../libDaisy/src/per/qspi.h ****         /** Flash Devices supported. (Both of these are more-or-less the same, just different sizes
  60:../../../libDaisy/src/per/qspi.h ****         enum Device
  61:../../../libDaisy/src/per/qspi.h ****         {
  62:../../../libDaisy/src/per/qspi.h ****             IS25LP080D,  /**< & */
  63:../../../libDaisy/src/per/qspi.h ****             IS25LP064A,  /**< & */
  64:../../../libDaisy/src/per/qspi.h ****             DEVICE_LAST, /**< & */
  65:../../../libDaisy/src/per/qspi.h ****         };
  66:../../../libDaisy/src/per/qspi.h **** 
  67:../../../libDaisy/src/per/qspi.h ****         /** 
  68:../../../libDaisy/src/per/qspi.h ****         Modes of operation.
  69:../../../libDaisy/src/per/qspi.h ****         Memory Mapped mode: QSPI configured so that the QSPI can be
  70:../../../libDaisy/src/per/qspi.h ****         read from starting address 0x90000000. Writing is not
  71:../../../libDaisy/src/per/qspi.h ****         possible in this mode. \n 
  72:../../../libDaisy/src/per/qspi.h ****         Indirect Polling mode: Device driver enabled. 
  73:../../../libDaisy/src/per/qspi.h ****         */
  74:../../../libDaisy/src/per/qspi.h ****         enum Mode
  75:../../../libDaisy/src/per/qspi.h ****         {
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 18


  76:../../../libDaisy/src/per/qspi.h ****             MEMORY_MAPPED,    /**< & */
  77:../../../libDaisy/src/per/qspi.h ****             INDIRECT_POLLING, /**< & */
  78:../../../libDaisy/src/per/qspi.h ****             MODE_LAST,
  79:../../../libDaisy/src/per/qspi.h ****         };
  80:../../../libDaisy/src/per/qspi.h **** 
  81:../../../libDaisy/src/per/qspi.h ****         //SCK,  CE# (active low)
  82:../../../libDaisy/src/per/qspi.h ****         struct
  83:../../../libDaisy/src/per/qspi.h ****         {
  84:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io0; /**< & */
  85:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io1; /**< & */
  86:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io2; /**< & */
  87:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin io3; /**< & */
  88:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin clk; /**< & */
  89:../../../libDaisy/src/per/qspi.h ****             dsy_gpio_pin ncs; /**< & */
  90:../../../libDaisy/src/per/qspi.h ****         } pin_config;
  91:../../../libDaisy/src/per/qspi.h **** 
  92:../../../libDaisy/src/per/qspi.h ****         Device device;
  93:../../../libDaisy/src/per/qspi.h ****         Mode   mode;
  94:../../../libDaisy/src/per/qspi.h ****     };
  95:../../../libDaisy/src/per/qspi.h **** 
  96:../../../libDaisy/src/per/qspi.h ****     /** 
  97:../../../libDaisy/src/per/qspi.h ****         Initializes QSPI peripheral, and Resets, and prepares memory for access.
  98:../../../libDaisy/src/per/qspi.h ****         \param config should be populated with the mode, device and pin_config before calling this 
  99:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 100:../../../libDaisy/src/per/qspi.h ****         */
 101:../../../libDaisy/src/per/qspi.h ****     Result Init(const Config& config);
 102:../../../libDaisy/src/per/qspi.h **** 
 103:../../../libDaisy/src/per/qspi.h ****     /** Returns the current config. */
 104:../../../libDaisy/src/per/qspi.h ****     const Config& GetConfig() const;
 105:../../../libDaisy/src/per/qspi.h **** 
 106:../../../libDaisy/src/per/qspi.h ****     // Couldn't this just be called before anything else in init? That
 107:../../../libDaisy/src/per/qspi.h ****     // would make manually calling it unnecessary.
 108:../../../libDaisy/src/per/qspi.h ****     /** 
 109:../../../libDaisy/src/per/qspi.h ****         Deinitializes the peripheral
 110:../../../libDaisy/src/per/qspi.h ****         This should be called before reinitializing QSPI in a different mode.
 111:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 112:../../../libDaisy/src/per/qspi.h ****         */
 113:../../../libDaisy/src/per/qspi.h ****     Result DeInit();
 114:../../../libDaisy/src/per/qspi.h **** 
 115:../../../libDaisy/src/per/qspi.h ****     /** 
 116:../../../libDaisy/src/per/qspi.h ****         Writes a single page to to the specified address on the QSPI chip.
 117:../../../libDaisy/src/per/qspi.h ****         For IS25LP*, page size is 256 bytes.
 118:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 119:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 120:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 121:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 122:../../../libDaisy/src/per/qspi.h ****         */
 123:../../../libDaisy/src/per/qspi.h ****     Result WritePage(uint32_t address, uint32_t size, uint8_t* buffer);
 124:../../../libDaisy/src/per/qspi.h **** 
 125:../../../libDaisy/src/per/qspi.h ****     /** 
 126:../../../libDaisy/src/per/qspi.h ****         Writes data in buffer to to the QSPI. Starting at address to address+size 
 127:../../../libDaisy/src/per/qspi.h ****         \param address Address to write to
 128:../../../libDaisy/src/per/qspi.h ****         \param size Buffer size
 129:../../../libDaisy/src/per/qspi.h ****         \param buffer Buffer to write
 130:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 131:../../../libDaisy/src/per/qspi.h ****         */
 132:../../../libDaisy/src/per/qspi.h ****     Result Write(uint32_t address, uint32_t size, uint8_t* buffer);
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 19


 133:../../../libDaisy/src/per/qspi.h **** 
 134:../../../libDaisy/src/per/qspi.h ****     /** 
 135:../../../libDaisy/src/per/qspi.h ****         Erases the area specified on the chip.
 136:../../../libDaisy/src/per/qspi.h ****         Erasures will happen by 4K, 32K or 64K increments.
 137:../../../libDaisy/src/per/qspi.h ****         Smallest erase possible is 4kB at a time. (on IS25LP*)
 138:../../../libDaisy/src/per/qspi.h ****         \param start_addr Address to begin erasing from
 139:../../../libDaisy/src/per/qspi.h ****         \param end_addr  Address to stop erasing at
 140:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 141:../../../libDaisy/src/per/qspi.h ****         */
 142:../../../libDaisy/src/per/qspi.h ****     Result Erase(uint32_t start_addr, uint32_t end_addr);
 143:../../../libDaisy/src/per/qspi.h **** 
 144:../../../libDaisy/src/per/qspi.h ****     /**  
 145:../../../libDaisy/src/per/qspi.h ****          Erases a single sector of the chip.  
 146:../../../libDaisy/src/per/qspi.h ****         TODO: Document the size of this function. 
 147:../../../libDaisy/src/per/qspi.h ****         \param address Address of sector to erase
 148:../../../libDaisy/src/per/qspi.h ****         \return Result::OK or Result::ERR
 149:../../../libDaisy/src/per/qspi.h ****         */
 150:../../../libDaisy/src/per/qspi.h ****     Result EraseSector(uint32_t address);
 151:../../../libDaisy/src/per/qspi.h **** 
 152:../../../libDaisy/src/per/qspi.h ****     /** Returns the current class status. Useful for debugging.
 153:../../../libDaisy/src/per/qspi.h ****      *  \returns Status
 154:../../../libDaisy/src/per/qspi.h ****      */
 155:../../../libDaisy/src/per/qspi.h ****     Status GetStatus();
 156:../../../libDaisy/src/per/qspi.h **** 
 157:../../../libDaisy/src/per/qspi.h ****     /** Returns a pointer to the actual memory used 
 158:../../../libDaisy/src/per/qspi.h ****      *  The memory at this address is read-only
 159:../../../libDaisy/src/per/qspi.h ****      *  to write to it use the Write function.
 160:../../../libDaisy/src/per/qspi.h ****      * 
 161:../../../libDaisy/src/per/qspi.h ****      *  \param offset returns the pointer starting this 
 162:../../../libDaisy/src/per/qspi.h ****      *                many bytes into the memory
 163:../../../libDaisy/src/per/qspi.h ****     */
 164:../../../libDaisy/src/per/qspi.h ****     void* GetData(uint32_t offset = 0);
 165:../../../libDaisy/src/per/qspi.h **** 
 166:../../../libDaisy/src/per/qspi.h ****     QSPIHandle() : pimpl_(nullptr) {}
 387              		.loc 10 166 5 view .LVU77
 388              	.LBE156:
 389              	.LBE155:
 390              	.LBE154:
 391              	.LBE153:
 392              	.LBE152:
 393              		.loc 9 41 1 is_stmt 0 view .LVU78
 394 0000 08B5     		push	{r3, lr}
 395              		.cfi_def_cfa_offset 8
 396              		.cfi_offset 3, -8
 397              		.cfi_offset 14, -4
 398              	.LBB187:
 399              	.LBB185:
 400              	.LBB177:
 401              	.LBB175:
 402              	.LBB161:
 403              	.LBB157:
 404              	.LBB158:
 405              		.loc 10 166 34 view .LVU79
 406 0002 0B48     		ldr	r0, .L30
 407 0004 0023     		movs	r3, #0
 408              	.LBE158:
 409              	.LBE157:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 20


 410              	.LBE161:
 411              	.LBE175:
 412              	.LBE177:
   7:synthsnaredrum.cpp **** SyntheticSnareDrum sd;
 413              		.loc 9 7 20 view .LVU80
 414 0006 0B4A     		ldr	r2, .L30+4
 415              	.LBB178:
 416              	.LBB176:
 417              	.LBB162:
 418              	.LBB160:
 419              	.LBB159:
 420              		.loc 10 166 34 view .LVU81
 421 0008 0360     		str	r3, [r0]
 422              	.LVL25:
 423              		.loc 10 166 34 view .LVU82
 424              	.LBE159:
 425              	.LBE160:
 426              	.LBE162:
 427              	.LBB163:
 428              	.LBI163:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 429              		.loc 5 95 5 is_stmt 1 view .LVU83
 430              	.LBB164:
 431              	.LBB165:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 432              		.loc 5 95 35 is_stmt 0 view .LVU84
 433 000a 4361     		str	r3, [r0, #20]
 434              	.LVL26:
  95:../../../libDaisy/src/hid/audio.h ****     ~AudioHandle() {}
 435              		.loc 5 95 35 view .LVU85
 436              	.LBE165:
 437              	.LBE164:
 438              	.LBE163:
 439              	.LBB166:
 440              	.LBI166:
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 441              		.loc 4 109 5 is_stmt 1 view .LVU86
 109:../../../libDaisy/src/per/adc.h ****     ~AdcHandle() {}
 442              		.loc 4 109 5 is_stmt 0 view .LVU87
 443              	.LBE166:
 444              	.LBB167:
 445              	.LBI167:
 446              		.file 11 "../../../libDaisy/src/per/dac.h"
   1:../../../libDaisy/src/per/dac.h **** #pragma once
   2:../../../libDaisy/src/per/dac.h **** #ifndef DSY_DAC_H
   3:../../../libDaisy/src/per/dac.h **** #define DSY_DAC_H
   4:../../../libDaisy/src/per/dac.h **** 
   5:../../../libDaisy/src/per/dac.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/dac.h **** 
   7:../../../libDaisy/src/per/dac.h **** namespace daisy
   8:../../../libDaisy/src/per/dac.h **** {
   9:../../../libDaisy/src/per/dac.h **** /** @brief DAC handle for Built-in DAC Peripheral 
  10:../../../libDaisy/src/per/dac.h ****  *  @ingroup per_analog
  11:../../../libDaisy/src/per/dac.h ****  ** 
  12:../../../libDaisy/src/per/dac.h ****  ** For now only Normal Mode is supported,
  13:../../../libDaisy/src/per/dac.h ****  ** Sample and hold mode provides reduced power consumption, but requires a bit more setup.
  14:../../../libDaisy/src/per/dac.h ****  **
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 21


  15:../../../libDaisy/src/per/dac.h ****  ** For now connecting the DAC through other internal peripherals is also not supported.
  16:../../../libDaisy/src/per/dac.h ****  **
  17:../../../libDaisy/src/per/dac.h ****  ** Since the DAC channels have dedicated pins we don't need to pass in a pin config like with
  18:../../../libDaisy/src/per/dac.h ****  ** other modules. However, it is still important to not try to use the DAC pins for anything else.
  19:../../../libDaisy/src/per/dac.h ****  ** DAC Channel 1 is on PA4, and DAC Channel 2 is on PA5
  20:../../../libDaisy/src/per/dac.h ****  ***/
  21:../../../libDaisy/src/per/dac.h **** class DacHandle
  22:../../../libDaisy/src/per/dac.h **** {
  23:../../../libDaisy/src/per/dac.h ****   public:
  24:../../../libDaisy/src/per/dac.h ****     /** Return Values for the DacHandle class */
  25:../../../libDaisy/src/per/dac.h ****     enum class Result
  26:../../../libDaisy/src/per/dac.h ****     {
  27:../../../libDaisy/src/per/dac.h ****         OK,
  28:../../../libDaisy/src/per/dac.h ****         ERR,
  29:../../../libDaisy/src/per/dac.h ****     };
  30:../../../libDaisy/src/per/dac.h **** 
  31:../../../libDaisy/src/per/dac.h ****     /** Selects which channel(s) will be configured for use. */
  32:../../../libDaisy/src/per/dac.h ****     enum class Channel
  33:../../../libDaisy/src/per/dac.h ****     {
  34:../../../libDaisy/src/per/dac.h ****         ONE,
  35:../../../libDaisy/src/per/dac.h ****         TWO,
  36:../../../libDaisy/src/per/dac.h ****         BOTH,
  37:../../../libDaisy/src/per/dac.h ****     };
  38:../../../libDaisy/src/per/dac.h **** 
  39:../../../libDaisy/src/per/dac.h ****     /** Sets the Mode for the DAC channels.
  40:../../../libDaisy/src/per/dac.h ****      **
  41:../../../libDaisy/src/per/dac.h ****      ** Polling mode uses the blocking mode to transmit a single value at a time.
  42:../../../libDaisy/src/per/dac.h ****      **
  43:../../../libDaisy/src/per/dac.h ****      ** DMA mode uses a buffer, and periodically transmits it triggering a 
  44:../../../libDaisy/src/per/dac.h ****      ** callback to fill the buffer when it is ready for more samples.
  45:../../../libDaisy/src/per/dac.h ****      ***/
  46:../../../libDaisy/src/per/dac.h ****     enum class Mode
  47:../../../libDaisy/src/per/dac.h ****     {
  48:../../../libDaisy/src/per/dac.h ****         POLLING,
  49:../../../libDaisy/src/per/dac.h ****         DMA,
  50:../../../libDaisy/src/per/dac.h ****     };
  51:../../../libDaisy/src/per/dac.h **** 
  52:../../../libDaisy/src/per/dac.h ****     /** Sets the number of bits per sample transmitted out of the DAC.
  53:../../../libDaisy/src/per/dac.h ****      ** The output range will be: 0V - VDDA
  54:../../../libDaisy/src/per/dac.h ****      ** The resolution will be roughly: bitdepth / (VDDA - 0V) 
  55:../../../libDaisy/src/per/dac.h ****      ***/
  56:../../../libDaisy/src/per/dac.h ****     enum class BitDepth
  57:../../../libDaisy/src/per/dac.h ****     {
  58:../../../libDaisy/src/per/dac.h ****         BITS_8,
  59:../../../libDaisy/src/per/dac.h ****         BITS_12
  60:../../../libDaisy/src/per/dac.h ****     };
  61:../../../libDaisy/src/per/dac.h **** 
  62:../../../libDaisy/src/per/dac.h ****     /** Sets whether the DAC output is buffered for higher drive ability. */
  63:../../../libDaisy/src/per/dac.h ****     enum class BufferState
  64:../../../libDaisy/src/per/dac.h ****     {
  65:../../../libDaisy/src/per/dac.h ****         ENABLED,
  66:../../../libDaisy/src/per/dac.h ****         DISABLED,
  67:../../../libDaisy/src/per/dac.h ****     };
  68:../../../libDaisy/src/per/dac.h **** 
  69:../../../libDaisy/src/per/dac.h ****     /** Configuration structure for initializing the DAC structure. */
  70:../../../libDaisy/src/per/dac.h ****     struct Config
  71:../../../libDaisy/src/per/dac.h ****     {
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 22


  72:../../../libDaisy/src/per/dac.h ****         /** Target Samplerate in Hz used to configure the internal 
  73:../../../libDaisy/src/per/dac.h ****          ** timebase for DMA mode. Does nothing in POLLING mode.
  74:../../../libDaisy/src/per/dac.h ****          ** If the value is 0 at Init time this will default to 48000Hz 
  75:../../../libDaisy/src/per/dac.h ****          ** otherwise the driver will attempt meet the target.*/
  76:../../../libDaisy/src/per/dac.h ****         uint32_t target_samplerate;
  77:../../../libDaisy/src/per/dac.h **** 
  78:../../../libDaisy/src/per/dac.h ****         Channel     chn;
  79:../../../libDaisy/src/per/dac.h ****         Mode        mode;
  80:../../../libDaisy/src/per/dac.h ****         BitDepth    bitdepth;
  81:../../../libDaisy/src/per/dac.h ****         BufferState buff_state;
  82:../../../libDaisy/src/per/dac.h ****     };
  83:../../../libDaisy/src/per/dac.h **** 
  84:../../../libDaisy/src/per/dac.h ****     DacHandle() : pimpl_(nullptr) {}
 447              		.loc 11 84 5 is_stmt 1 view .LVU88
 448              	.LBB168:
 449              	.LBB169:
 450              		.loc 11 84 33 is_stmt 0 view .LVU89
 451 000c 0362     		str	r3, [r0, #32]
 452              	.LVL27:
 453              		.loc 11 84 33 view .LVU90
 454              	.LBE169:
 455              	.LBE168:
 456              	.LBE167:
 457              	.LBB170:
 458              	.LBI170:
  40:../../../libDaisy/src/hid/usb.h **** 
 459              		.loc 3 40 5 is_stmt 1 view .LVU91
  40:../../../libDaisy/src/hid/usb.h **** 
 460              		.loc 3 40 5 is_stmt 0 view .LVU92
 461              	.LBE170:
 462              	.LBB171:
 463              	.LBI171:
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 464              		.loc 2 96 5 is_stmt 1 view .LVU93
  96:../../../libDaisy/src/sys/system.h ****     ~System() {}
 465              		.loc 2 96 5 is_stmt 0 view .LVU94
 466              	.LBE171:
 467              	.LBB172:
 468              	.LBI172:
 469              		.file 12 "../../../libDaisy/src/per/sai.h"
   1:../../../libDaisy/src/per/sai.h **** #pragma once
   2:../../../libDaisy/src/per/sai.h **** #ifndef DSY_SAI_H
   3:../../../libDaisy/src/per/sai.h **** #define DSY_SAI_H
   4:../../../libDaisy/src/per/sai.h **** 
   5:../../../libDaisy/src/per/sai.h **** #include "daisy_core.h"
   6:../../../libDaisy/src/per/sai.h **** 
   7:../../../libDaisy/src/per/sai.h **** namespace daisy
   8:../../../libDaisy/src/per/sai.h **** {
   9:../../../libDaisy/src/per/sai.h **** /** 
  10:../../../libDaisy/src/per/sai.h ****  * Support for I2S Audio Protocol with different bit-depth, samplerate options
  11:../../../libDaisy/src/per/sai.h ****  * Allows for master or slave, as well as freedom of selecting direction, 
  12:../../../libDaisy/src/per/sai.h ****  * and other behavior for each peripheral, and block.
  13:../../../libDaisy/src/per/sai.h ****  * 
  14:../../../libDaisy/src/per/sai.h ****  * DMA Transfer commands must use buffers located within non-cached memory or use cache maintenance
  15:../../../libDaisy/src/per/sai.h ****  * To declare an unitialized global element in the DMA memory section:
  16:../../../libDaisy/src/per/sai.h ****  *    int32_t DSY_DMA_BUFFER_SECTOR my_buffer[96];
  17:../../../libDaisy/src/per/sai.h ****  *
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 23


  18:../../../libDaisy/src/per/sai.h ****  * Callback functions will be called once per half of the buffer. In the above example, 
  19:../../../libDaisy/src/per/sai.h ****  * the callback function would be called once for every 48 samples.
  20:../../../libDaisy/src/per/sai.h ****  * 
  21:../../../libDaisy/src/per/sai.h ****  * Use SAI Handle like this:
  22:../../../libDaisy/src/per/sai.h ****  * 
  23:../../../libDaisy/src/per/sai.h ****  *  SaiHandle::Config sai_config;
  24:../../../libDaisy/src/per/sai.h ****  *  sai_config.periph          = SaiHandle::Config::Peripheral::SAI_1;
  25:../../../libDaisy/src/per/sai.h ****  *  sai_config.sr              = SaiHandle::Config::SampleRate::SAI_48KHZ;
  26:../../../libDaisy/src/per/sai.h ****  *  sai_config.bit_depth       = SaiHandle::Config::BitDepth::SAI_24BIT;
  27:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_sync          = SaiHandle::Config::Sync::MASTER;
  28:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_sync          = SaiHandle::Config::Sync::SLAVE;
  29:../../../libDaisy/src/per/sai.h ****  *  sai_config.a_dir           = SaiHandle::Config::Direction::RECEIVE;
  30:../../../libDaisy/src/per/sai.h ****  *  sai_config.b_dir           = SaiHandle::Config::Direction::TRANSMIT;
  31:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.fs   = {DSY_GPIOE, 4};
  32:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.mclk = {DSY_GPIOE, 2};
  33:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sck  = {DSY_GPIOE, 5};
  34:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sa   = {DSY_GPIOE, 6};
  35:../../../libDaisy/src/per/sai.h ****  *  sai_config.pin_config.sb   = {DSY_GPIOE, 3};
  36:../../../libDaisy/src/per/sai.h ****  *  // Then Initialize
  37:../../../libDaisy/src/per/sai.h ****  *  SaiHandle sai;
  38:../../../libDaisy/src/per/sai.h ****  *  sai.Init(sai_config);
  39:../../../libDaisy/src/per/sai.h ****  *  // Now you can use it:
  40:../../../libDaisy/src/per/sai.h ****  *  sai.StartDma(. . .);
  41:../../../libDaisy/src/per/sai.h ****  */
  42:../../../libDaisy/src/per/sai.h **** class SaiHandle
  43:../../../libDaisy/src/per/sai.h **** {
  44:../../../libDaisy/src/per/sai.h ****   public:
  45:../../../libDaisy/src/per/sai.h ****     /** Contains settings for initialising an SAI Interface */
  46:../../../libDaisy/src/per/sai.h ****     struct Config
  47:../../../libDaisy/src/per/sai.h ****     {
  48:../../../libDaisy/src/per/sai.h ****         /** Specifies the internal peripheral to use (mapped to different hardware pins) */
  49:../../../libDaisy/src/per/sai.h ****         enum class Peripheral
  50:../../../libDaisy/src/per/sai.h ****         {
  51:../../../libDaisy/src/per/sai.h ****             SAI_1,
  52:../../../libDaisy/src/per/sai.h ****             SAI_2,
  53:../../../libDaisy/src/per/sai.h ****         };
  54:../../../libDaisy/src/per/sai.h **** 
  55:../../../libDaisy/src/per/sai.h ****         /** Rate at which samples will be streaming to/from the device. */
  56:../../../libDaisy/src/per/sai.h ****         enum class SampleRate
  57:../../../libDaisy/src/per/sai.h ****         {
  58:../../../libDaisy/src/per/sai.h ****             SAI_8KHZ,
  59:../../../libDaisy/src/per/sai.h ****             SAI_16KHZ,
  60:../../../libDaisy/src/per/sai.h ****             SAI_32KHZ,
  61:../../../libDaisy/src/per/sai.h ****             SAI_48KHZ,
  62:../../../libDaisy/src/per/sai.h ****             SAI_96KHZ,
  63:../../../libDaisy/src/per/sai.h ****         };
  64:../../../libDaisy/src/per/sai.h **** 
  65:../../../libDaisy/src/per/sai.h ****         /** Bit Depth that the hardware expects to be transferred to/from the device. */
  66:../../../libDaisy/src/per/sai.h ****         enum class BitDepth
  67:../../../libDaisy/src/per/sai.h ****         {
  68:../../../libDaisy/src/per/sai.h ****             SAI_16BIT,
  69:../../../libDaisy/src/per/sai.h ****             SAI_24BIT,
  70:../../../libDaisy/src/per/sai.h ****             SAI_32BIT,
  71:../../../libDaisy/src/per/sai.h ****         };
  72:../../../libDaisy/src/per/sai.h **** 
  73:../../../libDaisy/src/per/sai.h ****         /** Specifies whether a particular block is the master or the slave 
  74:../../../libDaisy/src/per/sai.h ****          ** If both are set to slave, no MCLK signal will be used, and it is
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 24


  75:../../../libDaisy/src/per/sai.h ****          ** expected that the codec will have its own xtal.
  76:../../../libDaisy/src/per/sai.h ****          */
  77:../../../libDaisy/src/per/sai.h ****         enum class Sync
  78:../../../libDaisy/src/per/sai.h ****         {
  79:../../../libDaisy/src/per/sai.h ****             MASTER,
  80:../../../libDaisy/src/per/sai.h ****             SLAVE,
  81:../../../libDaisy/src/per/sai.h ****         };
  82:../../../libDaisy/src/per/sai.h **** 
  83:../../../libDaisy/src/per/sai.h ****         /** Specifies the direction for each peripheral block. */
  84:../../../libDaisy/src/per/sai.h ****         enum class Direction
  85:../../../libDaisy/src/per/sai.h ****         {
  86:../../../libDaisy/src/per/sai.h ****             TRANSMIT,
  87:../../../libDaisy/src/per/sai.h ****             RECEIVE,
  88:../../../libDaisy/src/per/sai.h ****         };
  89:../../../libDaisy/src/per/sai.h **** 
  90:../../../libDaisy/src/per/sai.h ****         Peripheral periph;
  91:../../../libDaisy/src/per/sai.h ****         struct
  92:../../../libDaisy/src/per/sai.h ****         {
  93:../../../libDaisy/src/per/sai.h ****             dsy_gpio_pin mclk, fs, sck, sa, sb;
  94:../../../libDaisy/src/per/sai.h ****         } pin_config;
  95:../../../libDaisy/src/per/sai.h ****         SampleRate sr;
  96:../../../libDaisy/src/per/sai.h ****         BitDepth   bit_depth;
  97:../../../libDaisy/src/per/sai.h ****         Sync       a_sync, b_sync;
  98:../../../libDaisy/src/per/sai.h ****         Direction  a_dir, b_dir;
  99:../../../libDaisy/src/per/sai.h ****     };
 100:../../../libDaisy/src/per/sai.h **** 
 101:../../../libDaisy/src/per/sai.h ****     /** Return values for SAI functions */
 102:../../../libDaisy/src/per/sai.h ****     enum class Result
 103:../../../libDaisy/src/per/sai.h ****     {
 104:../../../libDaisy/src/per/sai.h ****         OK,
 105:../../../libDaisy/src/per/sai.h ****         ERR,
 106:../../../libDaisy/src/per/sai.h ****     };
 107:../../../libDaisy/src/per/sai.h **** 
 108:../../../libDaisy/src/per/sai.h ****     SaiHandle() : pimpl_(nullptr) {}
 470              		.loc 12 108 5 is_stmt 1 view .LVU95
 471              	.LBB173:
 472              	.LBB174:
 473              		.loc 12 108 33 is_stmt 0 view .LVU96
 474 000e C363     		str	r3, [r0, #60]
 475              	.LVL28:
 476              		.loc 12 108 33 view .LVU97
 477              	.LBE174:
 478              	.LBE173:
 479              	.LBE172:
 480              	.LBE176:
 481              	.LBE178:
   7:synthsnaredrum.cpp **** SyntheticSnareDrum sd;
 482              		.loc 9 7 20 view .LVU98
 483 0010 0949     		ldr	r1, .L30+8
 484 0012 FFF7FEFF 		bl	__aeabi_atexit
 485              	.LVL29:
 486              	.LBB179:
 487              	.LBI179:
  37:../../../DaisySP/Source/Drums/synthsnaredrum.h ****     ~SyntheticSnareDrum() {}
 488              		.loc 6 37 5 is_stmt 1 view .LVU99
 489              	.LBB180:
 490              	.LBB181:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 25


 491              	.LBI181:
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 492              		.loc 7 29 5 view .LVU100
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 493              		.loc 7 29 5 is_stmt 0 view .LVU101
 494              	.LBE181:
 495              	.LBB182:
 496              	.LBI182:
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 497              		.loc 7 29 5 is_stmt 1 view .LVU102
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 498              		.loc 7 29 5 is_stmt 0 view .LVU103
 499              	.LBE182:
 500              	.LBB183:
 501              	.LBI183:
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 502              		.loc 7 29 5 is_stmt 1 view .LVU104
  29:../../../DaisySP/Source/Filters/svf.h ****     ~Svf() {}
 503              		.loc 7 29 5 is_stmt 0 view .LVU105
 504              	.LBE183:
 505              	.LBE180:
 506              	.LBE179:
   8:synthsnaredrum.cpp **** Metro              tick;
 507              		.loc 9 8 20 view .LVU106
 508 0016 074A     		ldr	r2, .L30+4
 509 0018 0849     		ldr	r1, .L30+12
 510 001a 0948     		ldr	r0, .L30+16
 511 001c FFF7FEFF 		bl	__aeabi_atexit
 512              	.LVL30:
 513              	.LBB184:
 514              	.LBI184:
  22:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 515              		.loc 8 22 5 is_stmt 1 view .LVU107
  22:../../../DaisySP/Source/Utility/metro.h ****     ~Metro() {}
 516              		.loc 8 22 5 is_stmt 0 view .LVU108
 517              	.LBE184:
   9:synthsnaredrum.cpp **** 
 518              		.loc 9 9 20 view .LVU109
 519 0020 044A     		ldr	r2, .L30+4
 520 0022 0849     		ldr	r1, .L30+20
 521 0024 0848     		ldr	r0, .L30+24
 522              	.LBE185:
 523              	.LBE187:
 524              		.loc 9 41 1 view .LVU110
 525 0026 BDE80840 		pop	{r3, lr}
 526              		.cfi_restore 14
 527              		.cfi_restore 3
 528              		.cfi_def_cfa_offset 0
 529              	.LBB188:
 530              	.LBB186:
   9:synthsnaredrum.cpp **** 
 531              		.loc 9 9 20 view .LVU111
 532 002a FFF7FEBF 		b	__aeabi_atexit
 533              	.LVL31:
 534              	.L31:
 535 002e 00BF     		.align	2
 536              	.L30:
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 26


 537 0030 00000000 		.word	.LANCHOR2
 538 0034 00000000 		.word	__dso_handle
 539 0038 00000000 		.word	_ZN5daisy9DaisySeedD1Ev
 540 003c 00000000 		.word	_ZN7daisysp18SyntheticSnareDrumD1Ev
 541 0040 00000000 		.word	.LANCHOR1
 542 0044 00000000 		.word	_ZN7daisysp5MetroD1Ev
 543 0048 00000000 		.word	.LANCHOR0
 544              	.LBE186:
 545              	.LBE188:
 546              		.cfi_endproc
 547              	.LFE5245:
 549              		.section	.init_array,"aw",%init_array
 550              		.align	2
 551 0000 00000000 		.word	_GLOBAL__sub_I_hw(target1)
 552              		.global	tick
 553              		.global	sd
 554              		.global	hw
 555              		.section	.bss.hw,"aw",%nobits
 556              		.align	2
 557              		.set	.LANCHOR2,. + 0
 560              	hw:
 561 0000 00000000 		.space	64
 561      00000000 
 561      00000000 
 561      00000000 
 561      00000000 
 562              		.section	.bss.sd,"aw",%nobits
 563              		.align	2
 564              		.set	.LANCHOR1,. + 0
 567              	sd:
 568 0000 00000000 		.space	284
 568      00000000 
 568      00000000 
 568      00000000 
 568      00000000 
 569              		.section	.bss.tick,"aw",%nobits
 570              		.align	2
 571              		.set	.LANCHOR0,. + 0
 574              	tick:
 575 0000 00000000 		.space	16
 575      00000000 
 575      00000000 
 575      00000000 
 576              		.text
 577              	.Letext0:
 578              		.file 13 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\machine\\_default_types.h"
 579              		.file 14 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_stdint.h"
 580              		.file 15 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdint.h"
 581              		.file 16 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stddef.h"
 582              		.file 17 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cmath"
 583              		.file 18 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\std_abs.h"
 584              		.file 19 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdlib"
 585              		.file 20 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdint"
 586              		.file 21 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\type_traits"
 587              		.file 22 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\debug\\debug.h"
 588              		.file 23 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\arm-none-eabi\\t
 589              		.file 24 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\algorithmf
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 27


 590              		.file 25 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_pair.h
 591              		.file 26 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\exception_
 592              		.file 27 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdarg"
 593              		.file 28 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstdio"
 594              		.file 29 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cstring"
 595              		.file 30 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\cwchar"
 596              		.file 31 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\clocale"
 597              		.file 32 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\basic_stri
 598              		.file 33 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\stl_tempbu
 599              		.file 34 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\bits\\predefined
 600              		.file 35 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\_types.h"
 601              		.file 36 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\reent.h"
 602              		.file 37 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\sys\\lock.h"
 603              		.file 38 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\math.h"
 604              		.file 39 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdlib.h"
 605              		.file 40 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\math.h"
 606              		.file 41 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\c++\\10.2.1\\stdlib.h"
 607              		.file 42 "../../../libDaisy/src/daisy_core.h"
 608              		.file 43 "../../../libDaisy/src/per/tim.h"
 609              		.file 44 "../../../libDaisy/src/util/wav_format.h"
 610              		.file 45 "../../../libDaisy/src/dev/max11300.h"
 611              		.file 46 "../../../libDaisy/src/per/gpio.h"
 612              		.file 47 "../../../libDaisy/src/dev/sdram.h"
 613              		.file 48 "c:\\program files\\daisytoolchain\\lib\\gcc\\arm-none-eabi\\10.2.1\\include\\stdarg.h"
 614              		.file 49 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\stdio.h"
 615              		.file 50 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\string.h"
 616              		.file 51 "../../../DaisySP/Source/Control/adenv.h"
 617              		.file 52 "../../../DaisySP/Source/Utility/dsp.h"
 618              		.file 53 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\wchar.h"
 619              		.file 54 "c:\\program files\\daisytoolchain\\arm-none-eabi\\include\\locale.h"
 620              		.file 55 "<built-in>"
 621              		.file 56 "../../../libDaisy/src/dev/sr_595.h"
ARM GAS  C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s 			page 28


DEFINED SYMBOLS
                            *ABS*:00000000 synthsnaredrum.cpp
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:17     .text._ZN5daisy9DaisySeedD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:26     .text._ZN5daisy9DaisySeedD2Ev:00000000 _ZN5daisy9DaisySeedD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:67     .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:75     .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:75     .text._ZN7daisysp18SyntheticSnareDrumD2Ev:00000000 _ZN7daisysp18SyntheticSnareDrumD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:108    .text._ZN7daisysp5MetroD2Ev:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:116    .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD2Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:116    .text._ZN7daisysp5MetroD2Ev:00000000 _ZN7daisysp5MetroD1Ev
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:133    .text._Z13AudioCallbackPKPKfPPfj:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:141    .text._Z13AudioCallbackPKPKfPPfj:00000000 _Z13AudioCallbackPKPKfPPfj
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:269    .text._Z13AudioCallbackPKPKfPPfj:00000070 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:276    .text.startup.main:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:284    .text.startup.main:00000000 main
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:354    .text.startup.main:00000048 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:362    .text.startup._GLOBAL__sub_I_hw:00000000 $t
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:369    .text.startup._GLOBAL__sub_I_hw:00000000 _GLOBAL__sub_I_hw
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:537    .text.startup._GLOBAL__sub_I_hw:00000030 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:550    .init_array:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:574    .bss.tick:00000000 tick
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:567    .bss.sd:00000000 sd
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:560    .bss.hw:00000000 hw
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:556    .bss.hw:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:563    .bss.sd:00000000 $d
C:\Users\Miguel\AppData\Local\Temp\ccB1KvvB.s:570    .bss.tick:00000000 $d
                           .group:00000000 _ZN5daisy9DaisySeedD5Ev
                           .group:00000000 _ZN7daisysp18SyntheticSnareDrumD5Ev
                           .group:00000000 _ZN7daisysp5MetroD5Ev

UNDEFINED SYMBOLS
_ZN7daisysp18SyntheticSnareDrum7ProcessEb
_ZN7daisysp5Metro7ProcessEv
_ZN7daisysp18SyntheticSnareDrum9SetAccentEf
_ZN7daisysp18SyntheticSnareDrum8SetDecayEf
_ZN7daisysp18SyntheticSnareDrum9SetSnappyEf
_ZN5daisy9DaisySeed9ConfigureEv
_ZN5daisy9DaisySeed4InitEb
_ZN5daisy9DaisySeed17SetAudioBlockSizeEj
_ZN5daisy9DaisySeed15AudioSampleRateEv
_ZN7daisysp5Metro4InitEff
_ZN7daisysp18SyntheticSnareDrum4InitEf
_ZN5daisy9DaisySeed10StartAudioEPFvPKPKfPPfjE
__aeabi_atexit
__dso_handle
